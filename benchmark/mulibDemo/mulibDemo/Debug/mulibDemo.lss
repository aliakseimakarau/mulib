
mulibDemo.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005de0  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000001d0  20000000  00005de0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000001e4  200001d0  00005fb0  000201d0  2**2
                  ALLOC
  3 .stack        00002004  200003b4  00006194  000201d0  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  000201d0  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  000201f8  2**0
                  CONTENTS, READONLY
  6 .debug_info   00029bfe  00000000  00000000  00020251  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000038ef  00000000  00000000  00049e4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000d3df  00000000  00000000  0004d73e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000d00  00000000  00000000  0005ab1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000d78  00000000  00000000  0005b81d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001a33e  00000000  00000000  0005c595  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00010024  00000000  00000000  000768d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00089acc  00000000  00000000  000868f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00002c60  00000000  00000000  001103c4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	b8 23 00 20 d9 05 00 00 d5 05 00 00 d5 05 00 00     .#. ............
	...
      2c:	d5 05 00 00 00 00 00 00 00 00 00 00 d5 05 00 00     ................
      3c:	d5 05 00 00 d5 05 00 00 d5 05 00 00 d5 05 00 00     ................
      4c:	79 0e 00 00 d5 05 00 00 d5 05 00 00 d5 05 00 00     y...............
      5c:	d5 05 00 00 d5 05 00 00 d5 05 00 00 d5 05 00 00     ................
      6c:	d5 05 00 00 8d 11 00 00 d5 05 00 00 d5 05 00 00     ................
      7c:	d5 05 00 00 d5 05 00 00 d5 05 00 00 d5 05 00 00     ................
      8c:	d5 05 00 00 d5 05 00 00 d5 05 00 00 d5 05 00 00     ................
      9c:	d5 05 00 00 d5 05 00 00 d5 05 00 00 d5 05 00 00     ................
      ac:	d5 05 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	200001d0 	.word	0x200001d0
      d4:	00000000 	.word	0x00000000
      d8:	00005de0 	.word	0x00005de0

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	200001d4 	.word	0x200001d4
     108:	00005de0 	.word	0x00005de0
     10c:	00005de0 	.word	0x00005de0
     110:	00000000 	.word	0x00000000

00000114 <port_init>:
// local storage

// =============================================================================
// public code

void port_init() {
     114:	b510      	push	{r4, lr}
	calendar_enable(&CALENDAR_0);
     116:	4802      	ldr	r0, [pc, #8]	; (120 <port_init+0xc>)
     118:	4b02      	ldr	r3, [pc, #8]	; (124 <port_init+0x10>)
     11a:	4798      	blx	r3
}
     11c:	bd10      	pop	{r4, pc}
     11e:	46c0      	nop			; (mov r8, r8)
     120:	20000394 	.word	0x20000394
     124:	00000825 	.word	0x00000825

00000128 <port_time_offset>:
    printf("Assertion '%s' failed at %s:%d", expr, file, line);
  }
}

port_time_t port_time_offset(port_time_t t, port_time_dt dt) {
  return t + dt;
     128:	1808      	adds	r0, r1, r0
}
     12a:	4770      	bx	lr

0000012c <port_time_difference>:

port_time_dt port_time_difference(port_time_t t1, port_time_t t2) {
  return t1 - t2;
     12c:	1a40      	subs	r0, r0, r1
}
     12e:	4770      	bx	lr

00000130 <port_time_is_before>:

bool port_time_is_before(port_time_t t1, port_time_t t2) {
     130:	b510      	push	{r4, lr}
  return port_time_difference(t1, t2) > MAX_DURATION;
     132:	4b02      	ldr	r3, [pc, #8]	; (13c <port_time_is_before+0xc>)
     134:	4798      	blx	r3
     136:	0fc0      	lsrs	r0, r0, #31
}
     138:	bd10      	pop	{r4, pc}
     13a:	46c0      	nop			; (mov r8, r8)
     13c:	0000012d 	.word	0x0000012d

00000140 <port_time_is_after>:

bool port_time_is_equal(port_time_t t1, port_time_t t2) {
  return t1 == t2;
}

bool port_time_is_after(port_time_t t1, port_time_t t2) {
     140:	b510      	push	{r4, lr}
     142:	000b      	movs	r3, r1
  return port_time_difference(t2, t1) > MAX_DURATION;
     144:	0001      	movs	r1, r0
     146:	0018      	movs	r0, r3
     148:	4b01      	ldr	r3, [pc, #4]	; (150 <port_time_is_after+0x10>)
     14a:	4798      	blx	r3
     14c:	0fc0      	lsrs	r0, r0, #31
}
     14e:	bd10      	pop	{r4, pc}
     150:	0000012d 	.word	0x0000012d

00000154 <port_time_seconds_to_duration>:

port_time_dt port_time_seconds_to_duration(port_time_seconds_t seconds) {
     154:	b510      	push	{r4, lr}
  return seconds * RTC_FREQUENCY;
     156:	2200      	movs	r2, #0
     158:	4b02      	ldr	r3, [pc, #8]	; (164 <port_time_seconds_to_duration+0x10>)
     15a:	4c03      	ldr	r4, [pc, #12]	; (168 <port_time_seconds_to_duration+0x14>)
     15c:	47a0      	blx	r4
     15e:	4b03      	ldr	r3, [pc, #12]	; (16c <port_time_seconds_to_duration+0x18>)
     160:	4798      	blx	r3
}
     162:	bd10      	pop	{r4, pc}
     164:	40e00000 	.word	0x40e00000
     168:	00001e15 	.word	0x00001e15
     16c:	00002941 	.word	0x00002941

00000170 <port_time_duration_to_seconds>:

port_time_seconds_t port_time_duration_to_seconds(port_time_dt dt) {
     170:	b510      	push	{r4, lr}
  return (port_time_seconds_t)dt / (port_time_seconds_t)RTC_FREQUENCY;
     172:	4b04      	ldr	r3, [pc, #16]	; (184 <port_time_duration_to_seconds+0x14>)
     174:	4798      	blx	r3
     176:	2200      	movs	r2, #0
     178:	23fc      	movs	r3, #252	; 0xfc
     17a:	059b      	lsls	r3, r3, #22
     17c:	4c02      	ldr	r4, [pc, #8]	; (188 <port_time_duration_to_seconds+0x18>)
     17e:	47a0      	blx	r4
}
     180:	bd10      	pop	{r4, pc}
     182:	46c0      	nop			; (mov r8, r8)
     184:	000029a9 	.word	0x000029a9
     188:	00001e15 	.word	0x00001e15

0000018c <port_time_now>:

port_time_t port_time_now() {
  return hri_rtcmode0_read_COUNT_COUNT_bf(CALENDAR_0.device.hw);
     18c:	4b03      	ldr	r3, [pc, #12]	; (19c <port_time_now+0x10>)
     18e:	681a      	ldr	r2, [r3, #0]
typedef uint8_t  hri_rtcmode2_intflag_reg_t;
typedef uint8_t  hri_rtcmode2_mask_reg_t;

static inline void hri_rtc_wait_for_sync(const void *const hw)
{
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     190:	7a93      	ldrb	r3, [r2, #10]
     192:	09db      	lsrs	r3, r3, #7
     194:	d1fc      	bne.n	190 <port_time_now+0x4>

static inline hri_rtcmode0_count_reg_t hri_rtcmode0_read_COUNT_COUNT_bf(const void *const hw)
{
	uint32_t tmp;
	hri_rtc_wait_for_sync(hw);
	tmp = ((Rtc *)hw)->MODE0.COUNT.reg;
     196:	6910      	ldr	r0, [r2, #16]
}
     198:	4770      	bx	lr
     19a:	46c0      	nop			; (mov r8, r8)
     19c:	20000394 	.word	0x20000394

000001a0 <init_event>:
static mu_evt_t *init_event(mu_evt_t *evt,
                            bool is_immediate,
                            port_time_t time,
                            mu_task_fn fn,
                            void *self,
                            const char *name) {
     1a0:	b570      	push	{r4, r5, r6, lr}
     1a2:	0004      	movs	r4, r0
     1a4:	001d      	movs	r5, r3
  evt->next = (mu_evt_t *)NULL;
     1a6:	2300      	movs	r3, #0
     1a8:	6003      	str	r3, [r0, #0]
  evt->is_immediate = is_immediate;
     1aa:	3320      	adds	r3, #32
     1ac:	54c1      	strb	r1, [r0, r3]
  evt->time = time;
     1ae:	61c2      	str	r2, [r0, #28]
  mu_task_init(&evt->task, fn, self, name);
     1b0:	3004      	adds	r0, #4
     1b2:	9b05      	ldr	r3, [sp, #20]
     1b4:	9a04      	ldr	r2, [sp, #16]
     1b6:	0029      	movs	r1, r5
     1b8:	4d01      	ldr	r5, [pc, #4]	; (1c0 <init_event+0x20>)
     1ba:	47a8      	blx	r5
  return evt;
}
     1bc:	0020      	movs	r0, r4
     1be:	bd70      	pop	{r4, r5, r6, pc}
     1c0:	0000050d 	.word	0x0000050d

000001c4 <mu_evt_init_immed>:
                            const char *name) {
     1c4:	b510      	push	{r4, lr}
     1c6:	b082      	sub	sp, #8
  return init_event(evt, true, 0, fn, self, name);
     1c8:	9301      	str	r3, [sp, #4]
     1ca:	9200      	str	r2, [sp, #0]
     1cc:	000b      	movs	r3, r1
     1ce:	2200      	movs	r2, #0
     1d0:	2101      	movs	r1, #1
     1d2:	4c02      	ldr	r4, [pc, #8]	; (1dc <mu_evt_init_immed+0x18>)
     1d4:	47a0      	blx	r4
}
     1d6:	b002      	add	sp, #8
     1d8:	bd10      	pop	{r4, pc}
     1da:	46c0      	nop			; (mov r8, r8)
     1dc:	000001a1 	.word	0x000001a1

000001e0 <mu_evt_init_at>:
                         const char *name) {
     1e0:	b510      	push	{r4, lr}
     1e2:	b082      	sub	sp, #8
  return init_event(evt, false, time, fn, self, name);
     1e4:	9c04      	ldr	r4, [sp, #16]
     1e6:	9401      	str	r4, [sp, #4]
     1e8:	9300      	str	r3, [sp, #0]
     1ea:	0013      	movs	r3, r2
     1ec:	000a      	movs	r2, r1
     1ee:	2100      	movs	r1, #0
     1f0:	4c01      	ldr	r4, [pc, #4]	; (1f8 <mu_evt_init_at+0x18>)
     1f2:	47a0      	blx	r4
}
     1f4:	b002      	add	sp, #8
     1f6:	bd10      	pop	{r4, pc}
     1f8:	000001a1 	.word	0x000001a1

000001fc <mu_evt_is_immediate>:
bool mu_evt_is_immediate(mu_evt_t *evt) { return evt->is_immediate; }
     1fc:	2320      	movs	r3, #32
     1fe:	5cc0      	ldrb	r0, [r0, r3]
     200:	4770      	bx	lr

00000202 <mu_evt_time>:
port_time_t mu_evt_time(mu_evt_t *evt) { return evt->time; }
     202:	69c0      	ldr	r0, [r0, #28]
     204:	4770      	bx	lr

00000206 <mu_evt_task>:
mu_task_t *mu_evt_task(mu_evt_t *evt) { return &evt->task; }
     206:	3004      	adds	r0, #4
     208:	4770      	bx	lr
	...

0000020c <mu_evt_is_after>:
bool mu_evt_is_after(mu_evt_t *e1, mu_evt_t *e2) {
     20c:	b570      	push	{r4, r5, r6, lr}
     20e:	0004      	movs	r4, r0
     210:	000d      	movs	r5, r1
  if (mu_evt_is_immediate(e1)) {
     212:	4b0b      	ldr	r3, [pc, #44]	; (240 <mu_evt_is_after+0x34>)
     214:	4798      	blx	r3
     216:	2800      	cmp	r0, #0
     218:	d10f      	bne.n	23a <mu_evt_is_after+0x2e>
  } else if (mu_evt_is_immediate(e2)) {
     21a:	0028      	movs	r0, r5
     21c:	4b08      	ldr	r3, [pc, #32]	; (240 <mu_evt_is_after+0x34>)
     21e:	4798      	blx	r3
     220:	2800      	cmp	r0, #0
     222:	d10b      	bne.n	23c <mu_evt_is_after+0x30>
    return port_time_is_after(mu_evt_time(e1), mu_evt_time(e2));
     224:	0020      	movs	r0, r4
     226:	4c07      	ldr	r4, [pc, #28]	; (244 <mu_evt_is_after+0x38>)
     228:	47a0      	blx	r4
     22a:	0006      	movs	r6, r0
     22c:	0028      	movs	r0, r5
     22e:	47a0      	blx	r4
     230:	0001      	movs	r1, r0
     232:	0030      	movs	r0, r6
     234:	4b04      	ldr	r3, [pc, #16]	; (248 <mu_evt_is_after+0x3c>)
     236:	4798      	blx	r3
     238:	e000      	b.n	23c <mu_evt_is_after+0x30>
    return false;
     23a:	2000      	movs	r0, #0
}
     23c:	bd70      	pop	{r4, r5, r6, pc}
     23e:	46c0      	nop			; (mov r8, r8)
     240:	000001fd 	.word	0x000001fd
     244:	00000203 	.word	0x00000203
     248:	00000141 	.word	0x00000141

0000024c <mu_evt_is_runnable>:
bool mu_evt_is_runnable(mu_evt_t *evt, port_time_t at) {
     24c:	b570      	push	{r4, r5, r6, lr}
     24e:	0005      	movs	r5, r0
     250:	000e      	movs	r6, r1
  if (mu_evt_is_immediate(evt)) {
     252:	4b08      	ldr	r3, [pc, #32]	; (274 <mu_evt_is_runnable+0x28>)
     254:	4798      	blx	r3
     256:	1e04      	subs	r4, r0, #0
     258:	d001      	beq.n	25e <mu_evt_is_runnable+0x12>
}
     25a:	0020      	movs	r0, r4
     25c:	bd70      	pop	{r4, r5, r6, pc}
  } else if (!port_time_is_before(at, mu_evt_time(evt))) {
     25e:	0028      	movs	r0, r5
     260:	4b05      	ldr	r3, [pc, #20]	; (278 <mu_evt_is_runnable+0x2c>)
     262:	4798      	blx	r3
     264:	0001      	movs	r1, r0
     266:	0030      	movs	r0, r6
     268:	4b04      	ldr	r3, [pc, #16]	; (27c <mu_evt_is_runnable+0x30>)
     26a:	4798      	blx	r3
     26c:	2800      	cmp	r0, #0
     26e:	d1f4      	bne.n	25a <mu_evt_is_runnable+0xe>
    return true;
     270:	3401      	adds	r4, #1
     272:	e7f2      	b.n	25a <mu_evt_is_runnable+0xe>
     274:	000001fd 	.word	0x000001fd
     278:	00000203 	.word	0x00000203
     27c:	00000131 	.word	0x00000131

00000280 <mu_evt_call>:
void mu_evt_call(mu_evt_t *evt, void *arg) {
     280:	b510      	push	{r4, lr}
     282:	000c      	movs	r4, r1
  mu_task_call(mu_evt_task(evt), arg);
     284:	4b02      	ldr	r3, [pc, #8]	; (290 <mu_evt_call+0x10>)
     286:	4798      	blx	r3
     288:	0021      	movs	r1, r4
     28a:	4b02      	ldr	r3, [pc, #8]	; (294 <mu_evt_call+0x14>)
     28c:	4798      	blx	r3
}
     28e:	bd10      	pop	{r4, pc}
     290:	00000207 	.word	0x00000207
     294:	0000051d 	.word	0x0000051d

00000298 <mu_ring_reset>:
  q->pool = pool;
  return mu_ring_reset(q);
}

mu_ring_err_t mu_ring_reset(mu_ring_t *q) {
  q->head = 0;
     298:	2300      	movs	r3, #0
     29a:	6043      	str	r3, [r0, #4]
  q->tail = 0;
     29c:	6083      	str	r3, [r0, #8]
  return MU_RING_ERR_NONE;
}
     29e:	2000      	movs	r0, #0
     2a0:	4770      	bx	lr
	...

000002a4 <mu_ring_init>:
                             unsigned int capacity) {
     2a4:	b510      	push	{r4, lr}
  if ((capacity == 0) || !IS_POWER_OF_TWO(capacity)) {
     2a6:	2a00      	cmp	r2, #0
     2a8:	d101      	bne.n	2ae <mu_ring_init+0xa>
    return MU_RING_ERR_SIZE;
     2aa:	2003      	movs	r0, #3
}
     2ac:	bd10      	pop	{r4, pc}
  if ((capacity == 0) || !IS_POWER_OF_TWO(capacity)) {
     2ae:	1e53      	subs	r3, r2, #1
     2b0:	4213      	tst	r3, r2
     2b2:	d001      	beq.n	2b8 <mu_ring_init+0x14>
    return MU_RING_ERR_SIZE;
     2b4:	2003      	movs	r0, #3
     2b6:	e7f9      	b.n	2ac <mu_ring_init+0x8>
  q->mask = capacity - 1;
     2b8:	6003      	str	r3, [r0, #0]
  q->pool = pool;
     2ba:	60c1      	str	r1, [r0, #12]
  return mu_ring_reset(q);
     2bc:	4b01      	ldr	r3, [pc, #4]	; (2c4 <mu_ring_init+0x20>)
     2be:	4798      	blx	r3
     2c0:	e7f4      	b.n	2ac <mu_ring_init+0x8>
     2c2:	46c0      	nop			; (mov r8, r8)
     2c4:	00000299 	.word	0x00000299

000002c8 <mu_ring_capacity>:

unsigned int mu_ring_capacity(mu_ring_t *q) { return q->mask + 1; }
     2c8:	6800      	ldr	r0, [r0, #0]
     2ca:	3001      	adds	r0, #1
     2cc:	4770      	bx	lr

000002ce <mu_ring_count>:

unsigned int mu_ring_count(mu_ring_t *q) {
  return q->head - q->tail; // thank you, twos-compliment arithmetic
     2ce:	6843      	ldr	r3, [r0, #4]
     2d0:	6880      	ldr	r0, [r0, #8]
     2d2:	1a18      	subs	r0, r3, r0
}
     2d4:	4770      	bx	lr
	...

000002d8 <mu_ring_put>:

mu_ring_err_t mu_ring_put(mu_ring_t *q, mu_ring_obj_t obj) {
     2d8:	b570      	push	{r4, r5, r6, lr}
     2da:	0004      	movs	r4, r0
     2dc:	000d      	movs	r5, r1
  if (mu_ring_count(q) == mu_ring_capacity(q)) {
     2de:	4b0a      	ldr	r3, [pc, #40]	; (308 <mu_ring_put+0x30>)
     2e0:	4798      	blx	r3
     2e2:	0006      	movs	r6, r0
     2e4:	0020      	movs	r0, r4
     2e6:	4b09      	ldr	r3, [pc, #36]	; (30c <mu_ring_put+0x34>)
     2e8:	4798      	blx	r3
     2ea:	4286      	cmp	r6, r0
     2ec:	d009      	beq.n	302 <mu_ring_put+0x2a>
    return MU_RING_ERR_FULL;
  }
  // Note that head grows "without bound", but tail is guarateed to grow too.
  q->pool[q->head++ & q->mask] = obj;
     2ee:	68e1      	ldr	r1, [r4, #12]
     2f0:	6862      	ldr	r2, [r4, #4]
     2f2:	1c53      	adds	r3, r2, #1
     2f4:	6063      	str	r3, [r4, #4]
     2f6:	6823      	ldr	r3, [r4, #0]
     2f8:	4013      	ands	r3, r2
     2fa:	009b      	lsls	r3, r3, #2
     2fc:	50cd      	str	r5, [r1, r3]
  return MU_RING_ERR_NONE;
     2fe:	2000      	movs	r0, #0
}
     300:	bd70      	pop	{r4, r5, r6, pc}
    return MU_RING_ERR_FULL;
     302:	2002      	movs	r0, #2
     304:	e7fc      	b.n	300 <mu_ring_put+0x28>
     306:	46c0      	nop			; (mov r8, r8)
     308:	000002cf 	.word	0x000002cf
     30c:	000002c9 	.word	0x000002c9

00000310 <mu_ring_get>:

mu_ring_err_t mu_ring_get(mu_ring_t *q, mu_ring_obj_t *obj) {
     310:	b570      	push	{r4, r5, r6, lr}
     312:	0004      	movs	r4, r0
     314:	000d      	movs	r5, r1
  if (mu_ring_count(q) == 0) {
     316:	4b09      	ldr	r3, [pc, #36]	; (33c <mu_ring_get+0x2c>)
     318:	4798      	blx	r3
     31a:	2800      	cmp	r0, #0
     31c:	d00a      	beq.n	334 <mu_ring_get+0x24>
    *obj = NULL;
    return MU_RING_ERR_EMPTY;
  }
  // Note that tail grows "without bound", but head is guaranteed to grow too.
  *obj = q->pool[q->tail++ & q->mask];
     31e:	68e1      	ldr	r1, [r4, #12]
     320:	68a2      	ldr	r2, [r4, #8]
     322:	1c53      	adds	r3, r2, #1
     324:	60a3      	str	r3, [r4, #8]
     326:	6823      	ldr	r3, [r4, #0]
     328:	4013      	ands	r3, r2
     32a:	009b      	lsls	r3, r3, #2
     32c:	585b      	ldr	r3, [r3, r1]
     32e:	602b      	str	r3, [r5, #0]
  return MU_RING_ERR_NONE;
     330:	2000      	movs	r0, #0
}
     332:	bd70      	pop	{r4, r5, r6, pc}
    *obj = NULL;
     334:	2300      	movs	r3, #0
     336:	602b      	str	r3, [r5, #0]
    return MU_RING_ERR_EMPTY;
     338:	3001      	adds	r0, #1
     33a:	e7fa      	b.n	332 <mu_ring_get+0x22>
     33c:	000002cf 	.word	0x000002cf

00000340 <remove_runnable_event>:
// Find the "soonest" runnable event, remove it and return it.  If nothing
// is runnable, return NULL.
//
// Since the event list is always sorted with the "soonest" event first, we
// only need to check the first element.  Fast.
static mu_evt_t *remove_runnable_event(mu_sched_t *sched, mu_time_t now) {
     340:	b570      	push	{r4, r5, r6, lr}
     342:	0005      	movs	r5, r0
  mu_evt_t *curr = sched->events;
     344:	6804      	ldr	r4, [r0, #0]

  if (curr == NULL) {
     346:	2c00      	cmp	r4, #0
     348:	d008      	beq.n	35c <remove_runnable_event+0x1c>
    // no events
    return NULL;

  } else if (!mu_evt_is_runnable(curr, now)) {
     34a:	0020      	movs	r0, r4
     34c:	4b05      	ldr	r3, [pc, #20]	; (364 <remove_runnable_event+0x24>)
     34e:	4798      	blx	r3
     350:	2800      	cmp	r0, #0
     352:	d005      	beq.n	360 <remove_runnable_event+0x20>
    // first event not (yet) runnable
    return NULL;

  } else {
    // first element is runnable.  pop and return.
    sched->events = curr->next;
     354:	6823      	ldr	r3, [r4, #0]
     356:	602b      	str	r3, [r5, #0]
    curr->next = NULL;
     358:	2300      	movs	r3, #0
     35a:	6023      	str	r3, [r4, #0]
    return curr;
  }
}
     35c:	0020      	movs	r0, r4
     35e:	bd70      	pop	{r4, r5, r6, pc}
    return NULL;
     360:	2400      	movs	r4, #0
     362:	e7fb      	b.n	35c <remove_runnable_event+0x1c>
     364:	0000024d 	.word	0x0000024d

00000368 <mu_sched_reset>:
mu_sched_t *mu_sched_reset(mu_sched_t *sched) {
     368:	b510      	push	{r4, lr}
     36a:	0004      	movs	r4, r0
  while ((evt = sched->events) != NULL) {
     36c:	e003      	b.n	376 <mu_sched_reset+0xe>
    sched->events = evt->next;
     36e:	681a      	ldr	r2, [r3, #0]
     370:	6022      	str	r2, [r4, #0]
    evt->next = NULL;
     372:	2200      	movs	r2, #0
     374:	601a      	str	r2, [r3, #0]
  while ((evt = sched->events) != NULL) {
     376:	6823      	ldr	r3, [r4, #0]
     378:	2b00      	cmp	r3, #0
     37a:	d1f8      	bne.n	36e <mu_sched_reset+0x6>
  if (sched->current_event) {
     37c:	69e3      	ldr	r3, [r4, #28]
     37e:	2b00      	cmp	r3, #0
     380:	d002      	beq.n	388 <mu_sched_reset+0x20>
    sched->current_event->next = NULL;
     382:	2200      	movs	r2, #0
     384:	601a      	str	r2, [r3, #0]
    sched->current_event = NULL;
     386:	61e2      	str	r2, [r4, #28]
  mu_ring_reset(&(sched->isr_queue));
     388:	1d20      	adds	r0, r4, #4
     38a:	4b02      	ldr	r3, [pc, #8]	; (394 <mu_sched_reset+0x2c>)
     38c:	4798      	blx	r3
}
     38e:	0020      	movs	r0, r4
     390:	bd10      	pop	{r4, pc}
     392:	46c0      	nop			; (mov r8, r8)
     394:	00000299 	.word	0x00000299

00000398 <mu_sched_init>:
                          unsigned int isr_queue_pool_size) {
     398:	b570      	push	{r4, r5, r6, lr}
     39a:	0004      	movs	r4, r0
  mu_ring_t *q = &(sched->isr_queue);
     39c:	3004      	adds	r0, #4
  sched->events = (mu_evt_t *)NULL;     // event queue starts out empty
     39e:	2500      	movs	r5, #0
     3a0:	6025      	str	r5, [r4, #0]
  err = mu_ring_init(q, isr_queue_pool, isr_queue_pool_size);
     3a2:	4b04      	ldr	r3, [pc, #16]	; (3b4 <mu_sched_init+0x1c>)
     3a4:	4798      	blx	r3
  sched->clock_source = mu_time_now;  // default clock source
     3a6:	4b04      	ldr	r3, [pc, #16]	; (3b8 <mu_sched_init+0x20>)
     3a8:	6163      	str	r3, [r4, #20]
  sched->idle_task = NULL;
     3aa:	61a5      	str	r5, [r4, #24]
  return mu_sched_reset(sched);
     3ac:	0020      	movs	r0, r4
     3ae:	4b03      	ldr	r3, [pc, #12]	; (3bc <mu_sched_init+0x24>)
     3b0:	4798      	blx	r3
}
     3b2:	bd70      	pop	{r4, r5, r6, pc}
     3b4:	000002a5 	.word	0x000002a5
     3b8:	0000058d 	.word	0x0000058d
     3bc:	00000369 	.word	0x00000369

000003c0 <mu_sched_get_events>:
	return sched->events;
     3c0:	6800      	ldr	r0, [r0, #0]
}
     3c2:	4770      	bx	lr

000003c4 <mu_sched_has_event>:
bool mu_sched_has_event(mu_sched_t *sched, mu_evt_t *event) {
     3c4:	b510      	push	{r4, lr}
     3c6:	000c      	movs	r4, r1
	mu_evt_t *evts = mu_sched_get_events(sched);
     3c8:	4b04      	ldr	r3, [pc, #16]	; (3dc <mu_sched_has_event+0x18>)
     3ca:	4798      	blx	r3
	while(evts) {
     3cc:	2800      	cmp	r0, #0
     3ce:	d004      	beq.n	3da <mu_sched_has_event+0x16>
		if (evts == event) return true;
     3d0:	42a0      	cmp	r0, r4
     3d2:	d001      	beq.n	3d8 <mu_sched_has_event+0x14>
		evts = evts->next;
     3d4:	6800      	ldr	r0, [r0, #0]
     3d6:	e7f9      	b.n	3cc <mu_sched_has_event+0x8>
		if (evts == event) return true;
     3d8:	2001      	movs	r0, #1
}
     3da:	bd10      	pop	{r4, pc}
     3dc:	000003c1 	.word	0x000003c1

000003e0 <mu_sched_task_count>:
unsigned int mu_sched_task_count(mu_sched_t *sched) {
     3e0:	b510      	push	{r4, lr}
	mu_evt_t *evts = mu_sched_get_events(sched);
     3e2:	4b05      	ldr	r3, [pc, #20]	; (3f8 <mu_sched_task_count+0x18>)
     3e4:	4798      	blx	r3
     3e6:	0003      	movs	r3, r0
	unsigned int count = 0;
     3e8:	2000      	movs	r0, #0
	while(evts) {
     3ea:	e001      	b.n	3f0 <mu_sched_task_count+0x10>
		count += 1;
     3ec:	3001      	adds	r0, #1
    evts = evts->next;
     3ee:	681b      	ldr	r3, [r3, #0]
	while(evts) {
     3f0:	2b00      	cmp	r3, #0
     3f2:	d1fb      	bne.n	3ec <mu_sched_task_count+0xc>
}
     3f4:	bd10      	pop	{r4, pc}
     3f6:	46c0      	nop			; (mov r8, r8)
     3f8:	000003c1 	.word	0x000003c1

000003fc <mu_sched_get_time>:
mu_time_t mu_sched_get_time(mu_sched_t *sched) {
     3fc:	b510      	push	{r4, lr}
  return sched->clock_source();
     3fe:	6943      	ldr	r3, [r0, #20]
     400:	4798      	blx	r3
}
     402:	bd10      	pop	{r4, pc}

00000404 <mu_sched_current_event>:
  return sched->current_event;
     404:	69c0      	ldr	r0, [r0, #28]
}
     406:	4770      	bx	lr

00000408 <mu_sched_add>:
mu_sched_err_t mu_sched_add(mu_sched_t *sched, mu_evt_t *event) {
     408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     40a:	0007      	movs	r7, r0
     40c:	000d      	movs	r5, r1
  if (mu_evt_is_immediate(event)) {
     40e:	0008      	movs	r0, r1
     410:	4b0e      	ldr	r3, [pc, #56]	; (44c <mu_sched_add+0x44>)
     412:	4798      	blx	r3
     414:	2800      	cmp	r0, #0
     416:	d102      	bne.n	41e <mu_sched_add+0x16>
    mu_evt_t *curr = sched->events;
     418:	683c      	ldr	r4, [r7, #0]
    mu_evt_t *prev = NULL;
     41a:	2600      	movs	r6, #0
    while (curr && mu_evt_is_after(event, curr)) {
     41c:	e005      	b.n	42a <mu_sched_add+0x22>
    event->next = sched->events;
     41e:	683b      	ldr	r3, [r7, #0]
     420:	602b      	str	r3, [r5, #0]
    sched->events = event;
     422:	603d      	str	r5, [r7, #0]
     424:	e00d      	b.n	442 <mu_sched_add+0x3a>
      prev = curr;
     426:	0026      	movs	r6, r4
      curr = curr->next;
     428:	6824      	ldr	r4, [r4, #0]
    while (curr && mu_evt_is_after(event, curr)) {
     42a:	2c00      	cmp	r4, #0
     42c:	d005      	beq.n	43a <mu_sched_add+0x32>
     42e:	0021      	movs	r1, r4
     430:	0028      	movs	r0, r5
     432:	4b07      	ldr	r3, [pc, #28]	; (450 <mu_sched_add+0x48>)
     434:	4798      	blx	r3
     436:	2800      	cmp	r0, #0
     438:	d1f5      	bne.n	426 <mu_sched_add+0x1e>
    event->next = curr;
     43a:	602c      	str	r4, [r5, #0]
    if (prev == NULL) {
     43c:	2e00      	cmp	r6, #0
     43e:	d002      	beq.n	446 <mu_sched_add+0x3e>
      prev->next = event;
     440:	6035      	str	r5, [r6, #0]
}
     442:	2000      	movs	r0, #0
     444:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      sched->events = event;
     446:	603d      	str	r5, [r7, #0]
     448:	e7fb      	b.n	442 <mu_sched_add+0x3a>
     44a:	46c0      	nop			; (mov r8, r8)
     44c:	000001fd 	.word	0x000001fd
     450:	0000020d 	.word	0x0000020d

00000454 <process_isr_queue>:

// slurp any events that have been added to the ISR queue and add them to the
// scheduler's event list.
static void process_isr_queue(mu_sched_t *sched) {
     454:	b530      	push	{r4, r5, lr}
     456:	b083      	sub	sp, #12
     458:	0005      	movs	r5, r0
  mu_evt_t *evt;
  mu_ring_t *q = &(sched->isr_queue);
     45a:	1d04      	adds	r4, r0, #4

  while (MU_RING_ERR_NONE == mu_ring_get(q, (mu_ring_obj_t *)(&evt))) {
     45c:	e003      	b.n	466 <process_isr_queue+0x12>
    mu_sched_add(sched, evt);
     45e:	9901      	ldr	r1, [sp, #4]
     460:	0028      	movs	r0, r5
     462:	4b05      	ldr	r3, [pc, #20]	; (478 <process_isr_queue+0x24>)
     464:	4798      	blx	r3
  while (MU_RING_ERR_NONE == mu_ring_get(q, (mu_ring_obj_t *)(&evt))) {
     466:	a901      	add	r1, sp, #4
     468:	0020      	movs	r0, r4
     46a:	4b04      	ldr	r3, [pc, #16]	; (47c <process_isr_queue+0x28>)
     46c:	4798      	blx	r3
     46e:	2800      	cmp	r0, #0
     470:	d0f5      	beq.n	45e <process_isr_queue+0xa>
  }
}
     472:	b003      	add	sp, #12
     474:	bd30      	pop	{r4, r5, pc}
     476:	46c0      	nop			; (mov r8, r8)
     478:	00000409 	.word	0x00000409
     47c:	00000311 	.word	0x00000311

00000480 <mu_sched_step>:
mu_sched_err_t mu_sched_step(mu_sched_t *sched) {
     480:	b570      	push	{r4, r5, r6, lr}
     482:	0004      	movs	r4, r0
  mu_time_t now = mu_sched_get_time(sched);
     484:	4b0c      	ldr	r3, [pc, #48]	; (4b8 <mu_sched_step+0x38>)
     486:	4798      	blx	r3
     488:	0005      	movs	r5, r0
  process_isr_queue(sched);
     48a:	0020      	movs	r0, r4
     48c:	4b0b      	ldr	r3, [pc, #44]	; (4bc <mu_sched_step+0x3c>)
     48e:	4798      	blx	r3
  if ((runnable = remove_runnable_event(sched, now)) != NULL) {
     490:	0029      	movs	r1, r5
     492:	0020      	movs	r0, r4
     494:	4b0a      	ldr	r3, [pc, #40]	; (4c0 <mu_sched_step+0x40>)
     496:	4798      	blx	r3
     498:	2800      	cmp	r0, #0
     49a:	d007      	beq.n	4ac <mu_sched_step+0x2c>
    sched->current_event = runnable;
     49c:	61e0      	str	r0, [r4, #28]
    mu_evt_call(runnable, sched);
     49e:	0021      	movs	r1, r4
     4a0:	4b08      	ldr	r3, [pc, #32]	; (4c4 <mu_sched_step+0x44>)
     4a2:	4798      	blx	r3
    sched->current_event = NULL;
     4a4:	2300      	movs	r3, #0
     4a6:	61e3      	str	r3, [r4, #28]
}
     4a8:	2000      	movs	r0, #0
     4aa:	bd70      	pop	{r4, r5, r6, pc}
    mu_task_call(sched->idle_task, sched);
     4ac:	69a0      	ldr	r0, [r4, #24]
     4ae:	0021      	movs	r1, r4
     4b0:	4b05      	ldr	r3, [pc, #20]	; (4c8 <mu_sched_step+0x48>)
     4b2:	4798      	blx	r3
     4b4:	e7f8      	b.n	4a8 <mu_sched_step+0x28>
     4b6:	46c0      	nop			; (mov r8, r8)
     4b8:	000003fd 	.word	0x000003fd
     4bc:	00000455 	.word	0x00000455
     4c0:	00000341 	.word	0x00000341
     4c4:	00000281 	.word	0x00000281
     4c8:	0000051d 	.word	0x0000051d

000004cc <mu_sched_remove>:
  mu_evt_t *curr = sched->events;
     4cc:	6803      	ldr	r3, [r0, #0]
  mu_evt_t *prev = NULL;
     4ce:	2200      	movs	r2, #0
  while((curr != NULL) && (curr != evt)) {
     4d0:	e001      	b.n	4d6 <mu_sched_remove+0xa>
    prev = curr;
     4d2:	001a      	movs	r2, r3
    curr = curr->next;
     4d4:	681b      	ldr	r3, [r3, #0]
  while((curr != NULL) && (curr != evt)) {
     4d6:	2b00      	cmp	r3, #0
     4d8:	d001      	beq.n	4de <mu_sched_remove+0x12>
     4da:	428b      	cmp	r3, r1
     4dc:	d1f9      	bne.n	4d2 <mu_sched_remove+0x6>
  if (curr == NULL) {
     4de:	2b00      	cmp	r3, #0
     4e0:	d00a      	beq.n	4f8 <mu_sched_remove+0x2c>
  } else if (prev == NULL) {
     4e2:	2a00      	cmp	r2, #0
     4e4:	d005      	beq.n	4f2 <mu_sched_remove+0x26>
    prev->next = curr->next;
     4e6:	681b      	ldr	r3, [r3, #0]
     4e8:	6013      	str	r3, [r2, #0]
  evt->next = NULL; // tidy up.
     4ea:	2300      	movs	r3, #0
     4ec:	600b      	str	r3, [r1, #0]
  return MU_SCHED_ERR_NONE;
     4ee:	2000      	movs	r0, #0
}
     4f0:	4770      	bx	lr
    sched->events = curr->next;
     4f2:	681b      	ldr	r3, [r3, #0]
     4f4:	6003      	str	r3, [r0, #0]
     4f6:	e7f8      	b.n	4ea <mu_sched_remove+0x1e>
    return MU_SCHED_ERR_NOT_FOUND;
     4f8:	2002      	movs	r0, #2
     4fa:	e7f9      	b.n	4f0 <mu_sched_remove+0x24>

000004fc <mu_sched_from_isr>:
mu_sched_err_t mu_sched_from_isr(mu_sched_t *sched, mu_evt_t *event) {
     4fc:	b510      	push	{r4, lr}
  mu_ring_t *q = &(sched->isr_queue);
     4fe:	3004      	adds	r0, #4
  mu_ring_err_t err = mu_ring_put(q, event);
     500:	4b01      	ldr	r3, [pc, #4]	; (508 <mu_sched_from_isr+0xc>)
     502:	4798      	blx	r3
}
     504:	2000      	movs	r0, #0
     506:	bd10      	pop	{r4, pc}
     508:	000002d9 	.word	0x000002d9

0000050c <mu_task_init>:

mu_task_t *mu_task_init(mu_task_t *task,
                        mu_task_fn fn,
                        void *self,
                        const char *name) {
  task->fn = fn;
     50c:	6001      	str	r1, [r0, #0]
  task->self = self;
     50e:	6042      	str	r2, [r0, #4]
#if (MU_TASK_PROFILING)
  task->name = name;
     510:	6083      	str	r3, [r0, #8]
  task->call_count = 0;
     512:	2300      	movs	r3, #0
     514:	60c3      	str	r3, [r0, #12]
  task->runtime = 0;
     516:	6103      	str	r3, [r0, #16]
  task->max_latency = 0;
     518:	6143      	str	r3, [r0, #20]
#else
  (void)name;
#endif
  return task;
}
     51a:	4770      	bx	lr

0000051c <mu_task_call>:

void mu_task_call(mu_task_t *task, void *arg) {
     51c:	b570      	push	{r4, r5, r6, lr}
     51e:	0004      	movs	r4, r0
     520:	000e      	movs	r6, r1
  if (task == NULL) return;
     522:	2800      	cmp	r0, #0
     524:	d018      	beq.n	558 <mu_task_call+0x3c>
#if (MU_TASK_PROFILING)
  mu_time_dt duration;
  mu_time_t called_at = mu_time_now();
     526:	4b0d      	ldr	r3, [pc, #52]	; (55c <mu_task_call+0x40>)
     528:	4798      	blx	r3
     52a:	0005      	movs	r5, r0
#endif
  if (task->fn != NULL) {
     52c:	6823      	ldr	r3, [r4, #0]
     52e:	2b00      	cmp	r3, #0
     530:	d002      	beq.n	538 <mu_task_call+0x1c>
    task->fn(task->self, arg);
     532:	0031      	movs	r1, r6
     534:	6860      	ldr	r0, [r4, #4]
     536:	4798      	blx	r3
  }
#if (MU_TASK_PROFILING)
  task->call_count += 1;
     538:	68e3      	ldr	r3, [r4, #12]
     53a:	3301      	adds	r3, #1
     53c:	60e3      	str	r3, [r4, #12]
  duration = mu_time_difference(mu_time_now(), called_at);
     53e:	4b07      	ldr	r3, [pc, #28]	; (55c <mu_task_call+0x40>)
     540:	4798      	blx	r3
     542:	0029      	movs	r1, r5
     544:	4b06      	ldr	r3, [pc, #24]	; (560 <mu_task_call+0x44>)
     546:	4798      	blx	r3
  task->runtime += duration;
     548:	6923      	ldr	r3, [r4, #16]
     54a:	181b      	adds	r3, r3, r0
     54c:	6123      	str	r3, [r4, #16]
  if (duration > task->max_latency) task->max_latency = duration;
     54e:	6963      	ldr	r3, [r4, #20]
     550:	4298      	cmp	r0, r3
     552:	dd00      	ble.n	556 <mu_task_call+0x3a>
     554:	6160      	str	r0, [r4, #20]
  asm("nop");
     556:	46c0      	nop			; (mov r8, r8)
#endif
}
     558:	bd70      	pop	{r4, r5, r6, pc}
     55a:	46c0      	nop			; (mov r8, r8)
     55c:	0000058d 	.word	0x0000058d
     560:	000005a5 	.word	0x000005a5

00000564 <mu_task_name>:

#if (MU_TASK_PROFILING)

const char *mu_task_name(mu_task_t *task) {
  return task->name;
     564:	6880      	ldr	r0, [r0, #8]
}
     566:	4770      	bx	lr

00000568 <mu_task_call_count>:

unsigned int mu_task_call_count(mu_task_t *task) {
  return task->call_count;
     568:	68c0      	ldr	r0, [r0, #12]
}
     56a:	4770      	bx	lr

0000056c <mu_task_runtime>:

mu_time_seconds_t mu_task_runtime(mu_task_t *task) {
     56c:	b510      	push	{r4, lr}
  return mu_time_duration_to_seconds(task->runtime);
     56e:	6900      	ldr	r0, [r0, #16]
     570:	4b01      	ldr	r3, [pc, #4]	; (578 <mu_task_runtime+0xc>)
     572:	4798      	blx	r3
}
     574:	bd10      	pop	{r4, pc}
     576:	46c0      	nop			; (mov r8, r8)
     578:	000005b1 	.word	0x000005b1

0000057c <mu_task_max_latency>:

mu_time_seconds_t mu_task_max_latency(mu_task_t *task) {
     57c:	b510      	push	{r4, lr}
  return mu_time_duration_to_seconds(task->max_latency);
     57e:	6940      	ldr	r0, [r0, #20]
     580:	4b01      	ldr	r3, [pc, #4]	; (588 <mu_task_max_latency+0xc>)
     582:	4798      	blx	r3
}
     584:	bd10      	pop	{r4, pc}
     586:	46c0      	nop			; (mov r8, r8)
     588:	000005b1 	.word	0x000005b1

0000058c <mu_time_now>:
// local storage

// =============================================================================
// public code

mu_time_t mu_time_now() {
     58c:	b510      	push	{r4, lr}
  return port_time_now();
     58e:	4b01      	ldr	r3, [pc, #4]	; (594 <mu_time_now+0x8>)
     590:	4798      	blx	r3
}
     592:	bd10      	pop	{r4, pc}
     594:	0000018d 	.word	0x0000018d

00000598 <mu_time_offset>:

mu_time_t mu_time_offset(mu_time_t t1, mu_time_dt dt) {
     598:	b510      	push	{r4, lr}
  return port_time_offset(t1, dt);
     59a:	4b01      	ldr	r3, [pc, #4]	; (5a0 <mu_time_offset+0x8>)
     59c:	4798      	blx	r3
}
     59e:	bd10      	pop	{r4, pc}
     5a0:	00000129 	.word	0x00000129

000005a4 <mu_time_difference>:

mu_time_dt mu_time_difference(mu_time_t t1, mu_time_t t2) {
     5a4:	b510      	push	{r4, lr}
  return port_time_difference(t1, t2);
     5a6:	4b01      	ldr	r3, [pc, #4]	; (5ac <mu_time_difference+0x8>)
     5a8:	4798      	blx	r3
}
     5aa:	bd10      	pop	{r4, pc}
     5ac:	0000012d 	.word	0x0000012d

000005b0 <mu_time_duration_to_seconds>:

bool mu_time_is_after(mu_time_t t1, mu_time_t t2) {
  return port_time_is_before(t2, t1);
}

mu_time_seconds_t mu_time_duration_to_seconds(mu_time_dt dt) {
     5b0:	b510      	push	{r4, lr}
  return port_time_duration_to_seconds(dt);
     5b2:	4b01      	ldr	r3, [pc, #4]	; (5b8 <mu_time_duration_to_seconds+0x8>)
     5b4:	4798      	blx	r3
}
     5b6:	bd10      	pop	{r4, pc}
     5b8:	00000171 	.word	0x00000171

000005bc <mu_time_seconds_to_duration>:

mu_time_dt mu_time_seconds_to_duration(mu_time_seconds_t s) {
     5bc:	b510      	push	{r4, lr}
  return port_time_seconds_to_duration(s);
     5be:	4b01      	ldr	r3, [pc, #4]	; (5c4 <mu_time_seconds_to_duration+0x8>)
     5c0:	4798      	blx	r3
}
     5c2:	bd10      	pop	{r4, pc}
     5c4:	00000155 	.word	0x00000155

000005c8 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     5c8:	b510      	push	{r4, lr}
	system_init();
     5ca:	4b01      	ldr	r3, [pc, #4]	; (5d0 <atmel_start_init+0x8>)
     5cc:	4798      	blx	r3
}
     5ce:	bd10      	pop	{r4, pc}
     5d0:	00000779 	.word	0x00000779

000005d4 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     5d4:	e7fe      	b.n	5d4 <Dummy_Handler>
	...

000005d8 <Reset_Handler>:
{
     5d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
     5da:	4a23      	ldr	r2, [pc, #140]	; (668 <Reset_Handler+0x90>)
     5dc:	4b23      	ldr	r3, [pc, #140]	; (66c <Reset_Handler+0x94>)
     5de:	429a      	cmp	r2, r3
     5e0:	d009      	beq.n	5f6 <Reset_Handler+0x1e>
     5e2:	4b22      	ldr	r3, [pc, #136]	; (66c <Reset_Handler+0x94>)
     5e4:	4a20      	ldr	r2, [pc, #128]	; (668 <Reset_Handler+0x90>)
     5e6:	e003      	b.n	5f0 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
     5e8:	6811      	ldr	r1, [r2, #0]
     5ea:	6019      	str	r1, [r3, #0]
     5ec:	3304      	adds	r3, #4
     5ee:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     5f0:	491f      	ldr	r1, [pc, #124]	; (670 <Reset_Handler+0x98>)
     5f2:	428b      	cmp	r3, r1
     5f4:	d3f8      	bcc.n	5e8 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
     5f6:	4b1f      	ldr	r3, [pc, #124]	; (674 <Reset_Handler+0x9c>)
     5f8:	e002      	b.n	600 <Reset_Handler+0x28>
                *pDest++ = 0;
     5fa:	2200      	movs	r2, #0
     5fc:	601a      	str	r2, [r3, #0]
     5fe:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
     600:	4a1d      	ldr	r2, [pc, #116]	; (678 <Reset_Handler+0xa0>)
     602:	4293      	cmp	r3, r2
     604:	d3f9      	bcc.n	5fa <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     606:	4a1d      	ldr	r2, [pc, #116]	; (67c <Reset_Handler+0xa4>)
     608:	21ff      	movs	r1, #255	; 0xff
     60a:	4b1d      	ldr	r3, [pc, #116]	; (680 <Reset_Handler+0xa8>)
     60c:	438b      	bics	r3, r1
     60e:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
     610:	39fd      	subs	r1, #253	; 0xfd
     612:	2390      	movs	r3, #144	; 0x90
     614:	005b      	lsls	r3, r3, #1
     616:	4a1b      	ldr	r2, [pc, #108]	; (684 <Reset_Handler+0xac>)
     618:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
     61a:	4a1b      	ldr	r2, [pc, #108]	; (688 <Reset_Handler+0xb0>)
     61c:	78d3      	ldrb	r3, [r2, #3]
     61e:	2503      	movs	r5, #3
     620:	43ab      	bics	r3, r5
     622:	2402      	movs	r4, #2
     624:	4323      	orrs	r3, r4
     626:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
     628:	78d3      	ldrb	r3, [r2, #3]
     62a:	270c      	movs	r7, #12
     62c:	43bb      	bics	r3, r7
     62e:	2608      	movs	r6, #8
     630:	4333      	orrs	r3, r6
     632:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
     634:	4b15      	ldr	r3, [pc, #84]	; (68c <Reset_Handler+0xb4>)
     636:	7b98      	ldrb	r0, [r3, #14]
     638:	2230      	movs	r2, #48	; 0x30
     63a:	4390      	bics	r0, r2
     63c:	2220      	movs	r2, #32
     63e:	4310      	orrs	r0, r2
     640:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
     642:	7b99      	ldrb	r1, [r3, #14]
     644:	43b9      	bics	r1, r7
     646:	4331      	orrs	r1, r6
     648:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
     64a:	7b9a      	ldrb	r2, [r3, #14]
     64c:	43aa      	bics	r2, r5
     64e:	4322      	orrs	r2, r4
     650:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
     652:	4a0f      	ldr	r2, [pc, #60]	; (690 <Reset_Handler+0xb8>)
     654:	6851      	ldr	r1, [r2, #4]
     656:	2380      	movs	r3, #128	; 0x80
     658:	430b      	orrs	r3, r1
     65a:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     65c:	4b0d      	ldr	r3, [pc, #52]	; (694 <Reset_Handler+0xbc>)
     65e:	4798      	blx	r3
        main();
     660:	4b0d      	ldr	r3, [pc, #52]	; (698 <Reset_Handler+0xc0>)
     662:	4798      	blx	r3
     664:	e7fe      	b.n	664 <Reset_Handler+0x8c>
     666:	46c0      	nop			; (mov r8, r8)
     668:	00005de0 	.word	0x00005de0
     66c:	20000000 	.word	0x20000000
     670:	200001d0 	.word	0x200001d0
     674:	200001d0 	.word	0x200001d0
     678:	200003b4 	.word	0x200003b4
     67c:	e000ed00 	.word	0xe000ed00
     680:	00000000 	.word	0x00000000
     684:	41007000 	.word	0x41007000
     688:	41005000 	.word	0x41005000
     68c:	41004800 	.word	0x41004800
     690:	41004000 	.word	0x41004000
     694:	00002d55 	.word	0x00002d55
     698:	000015d5 	.word	0x000015d5

0000069c <EDBG_COM_CLOCK_init>:
			peripheral = (uint32_t)_pm_get_apbb_index(module);
			PM->APBBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBC:
		PM->APBCMASK.reg |= 1 << peripheral;
     69c:	4a04      	ldr	r2, [pc, #16]	; (6b0 <EDBG_COM_CLOCK_init+0x14>)
     69e:	6a13      	ldr	r3, [r2, #32]
     6a0:	2120      	movs	r1, #32
     6a2:	430b      	orrs	r3, r1
     6a4:	6213      	str	r3, [r2, #32]
}

static inline void hri_gclk_write_CLKCTRL_reg(const void *const hw, hri_gclk_clkctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->CLKCTRL.reg = data;
     6a6:	4a03      	ldr	r2, [pc, #12]	; (6b4 <EDBG_COM_CLOCK_init+0x18>)
     6a8:	4b03      	ldr	r3, [pc, #12]	; (6b8 <EDBG_COM_CLOCK_init+0x1c>)
     6aa:	805a      	strh	r2, [r3, #2]
void EDBG_COM_CLOCK_init()
{

	_pm_enable_bus_clock(PM_BUS_APBC, SERCOM3);
	_gclk_enable_channel(SERCOM3_GCLK_ID_CORE, CONF_GCLK_SERCOM3_CORE_SRC);
}
     6ac:	4770      	bx	lr
     6ae:	46c0      	nop			; (mov r8, r8)
     6b0:	40000400 	.word	0x40000400
     6b4:	00004017 	.word	0x00004017
     6b8:	40000c00 	.word	0x40000c00

000006bc <EDBG_COM_PORT_init>:
 * \brief USART pinmux initialization function
 *
 * Set each required pin to USART functionality
 */
void EDBG_COM_PORT_init()
{
     6bc:	b530      	push	{r4, r5, lr}
static inline void hri_port_write_PINCFG_PMUXEN_bit(const void *const hw, uint8_t submodule_index, uint8_t index,
                                                    bool value)
{
	uint8_t tmp;
	PORT_CRITICAL_SECTION_ENTER();
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6be:	4b0f      	ldr	r3, [pc, #60]	; (6fc <EDBG_COM_PORT_init+0x40>)
     6c0:	2256      	movs	r2, #86	; 0x56
     6c2:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6c4:	2501      	movs	r5, #1
     6c6:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6c8:	2401      	movs	r4, #1
     6ca:	4321      	orrs	r1, r4
     6cc:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6ce:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6d0:	203b      	movs	r0, #59	; 0x3b
     6d2:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     6d4:	3a47      	subs	r2, #71	; 0x47
     6d6:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     6d8:	2202      	movs	r2, #2
     6da:	4311      	orrs	r1, r2
     6dc:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6de:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     6e0:	2157      	movs	r1, #87	; 0x57
     6e2:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     6e4:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     6e6:	4322      	orrs	r2, r4
     6e8:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     6ea:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     6ec:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     6ee:	3948      	subs	r1, #72	; 0x48
     6f0:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     6f2:	2120      	movs	r1, #32
     6f4:	430a      	orrs	r2, r1
     6f6:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     6f8:	541a      	strb	r2, [r3, r0]

	gpio_set_pin_function(EDBG_COM_TX, PINMUX_PA22C_SERCOM3_PAD0);

	gpio_set_pin_function(EDBG_COM_RX, PINMUX_PA23C_SERCOM3_PAD1);
}
     6fa:	bd30      	pop	{r4, r5, pc}
     6fc:	41004400 	.word	0x41004400

00000700 <EDBG_COM_init>:
 * \brief USART initialization function
 *
 * Enables USART peripheral, clocks and initializes USART driver
 */
void EDBG_COM_init(void)
{
     700:	b510      	push	{r4, lr}
     702:	b082      	sub	sp, #8
	EDBG_COM_CLOCK_init();
     704:	4b06      	ldr	r3, [pc, #24]	; (720 <EDBG_COM_init+0x20>)
     706:	4798      	blx	r3
	usart_async_init(&EDBG_COM, SERCOM3, EDBG_COM_buffer, EDBG_COM_BUFFER_SIZE, (void *)NULL);
     708:	2300      	movs	r3, #0
     70a:	9300      	str	r3, [sp, #0]
     70c:	3310      	adds	r3, #16
     70e:	4a05      	ldr	r2, [pc, #20]	; (724 <EDBG_COM_init+0x24>)
     710:	4905      	ldr	r1, [pc, #20]	; (728 <EDBG_COM_init+0x28>)
     712:	4806      	ldr	r0, [pc, #24]	; (72c <EDBG_COM_init+0x2c>)
     714:	4c06      	ldr	r4, [pc, #24]	; (730 <EDBG_COM_init+0x30>)
     716:	47a0      	blx	r4
	EDBG_COM_PORT_init();
     718:	4b06      	ldr	r3, [pc, #24]	; (734 <EDBG_COM_init+0x34>)
     71a:	4798      	blx	r3
}
     71c:	b002      	add	sp, #8
     71e:	bd10      	pop	{r4, pc}
     720:	0000069d 	.word	0x0000069d
     724:	200001ec 	.word	0x200001ec
     728:	42001400 	.word	0x42001400
     72c:	20000344 	.word	0x20000344
     730:	00000a4d 	.word	0x00000a4d
     734:	000006bd 	.word	0x000006bd

00000738 <CALENDAR_0_CLOCK_init>:
		PM->APBAMASK.reg |= 1 << peripheral;
     738:	4a04      	ldr	r2, [pc, #16]	; (74c <CALENDAR_0_CLOCK_init+0x14>)
     73a:	6993      	ldr	r3, [r2, #24]
     73c:	2120      	movs	r1, #32
     73e:	430b      	orrs	r3, r1
     740:	6193      	str	r3, [r2, #24]
     742:	4a03      	ldr	r2, [pc, #12]	; (750 <CALENDAR_0_CLOCK_init+0x18>)
     744:	4b03      	ldr	r3, [pc, #12]	; (754 <CALENDAR_0_CLOCK_init+0x1c>)
     746:	805a      	strh	r2, [r3, #2]

void CALENDAR_0_CLOCK_init(void)
{
	_pm_enable_bus_clock(PM_BUS_APBA, RTC);
	_gclk_enable_channel(RTC_GCLK_ID, CONF_GCLK_RTC_SRC);
}
     748:	4770      	bx	lr
     74a:	46c0      	nop			; (mov r8, r8)
     74c:	40000400 	.word	0x40000400
     750:	00004304 	.word	0x00004304
     754:	40000c00 	.word	0x40000c00

00000758 <CALENDAR_0_init>:

void CALENDAR_0_init(void)
{
     758:	b510      	push	{r4, lr}
	CALENDAR_0_CLOCK_init();
     75a:	4b03      	ldr	r3, [pc, #12]	; (768 <CALENDAR_0_init+0x10>)
     75c:	4798      	blx	r3
	calendar_init(&CALENDAR_0, RTC);
     75e:	4903      	ldr	r1, [pc, #12]	; (76c <CALENDAR_0_init+0x14>)
     760:	4803      	ldr	r0, [pc, #12]	; (770 <CALENDAR_0_init+0x18>)
     762:	4b04      	ldr	r3, [pc, #16]	; (774 <CALENDAR_0_init+0x1c>)
     764:	4798      	blx	r3
}
     766:	bd10      	pop	{r4, pc}
     768:	00000739 	.word	0x00000739
     76c:	40001400 	.word	0x40001400
     770:	20000394 	.word	0x20000394
     774:	000007dd 	.word	0x000007dd

00000778 <system_init>:

void system_init(void)
{
     778:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
     77a:	4b0c      	ldr	r3, [pc, #48]	; (7ac <system_init+0x34>)
     77c:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     77e:	23c0      	movs	r3, #192	; 0xc0
     780:	05db      	lsls	r3, r3, #23
     782:	2280      	movs	r2, #128	; 0x80
     784:	05d2      	lsls	r2, r2, #23
     786:	2198      	movs	r1, #152	; 0x98
     788:	505a      	str	r2, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     78a:	3910      	subs	r1, #16
     78c:	505a      	str	r2, [r3, r1]

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     78e:	4b08      	ldr	r3, [pc, #32]	; (7b0 <system_init+0x38>)
     790:	3120      	adds	r1, #32
     792:	505a      	str	r2, [r3, r1]
     794:	4a07      	ldr	r2, [pc, #28]	; (7b4 <system_init+0x3c>)
     796:	505a      	str	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     798:	3136      	adds	r1, #54	; 0x36
     79a:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     79c:	2001      	movs	r0, #1
     79e:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     7a0:	545a      	strb	r2, [r3, r1]
	// Set pin direction to output
	gpio_set_pin_direction(LED0, GPIO_DIRECTION_OUT);

	gpio_set_pin_function(LED0, GPIO_PIN_FUNCTION_OFF);

	EDBG_COM_init();
     7a2:	4b05      	ldr	r3, [pc, #20]	; (7b8 <system_init+0x40>)
     7a4:	4798      	blx	r3

	CALENDAR_0_init();
     7a6:	4b05      	ldr	r3, [pc, #20]	; (7bc <system_init+0x44>)
     7a8:	4798      	blx	r3
}
     7aa:	bd10      	pop	{r4, pc}
     7ac:	00000d09 	.word	0x00000d09
     7b0:	41004400 	.word	0x41004400
     7b4:	c0004000 	.word	0xc0004000
     7b8:	00000701 	.word	0x00000701
     7bc:	00000759 	.word	0x00000759

000007c0 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     7c0:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
     7c4:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
     7c6:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     7c8:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
     7cc:	4770      	bx	lr

000007ce <atomic_leave_critical>:
     7ce:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     7d2:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     7d4:	f383 8810 	msr	PRIMASK, r3
}
     7d8:	4770      	bx	lr
	...

000007dc <calendar_init>:
}

/** \brief Initialize Calendar
 */
int32_t calendar_init(struct calendar_descriptor *const calendar, const void *hw)
{
     7dc:	b570      	push	{r4, r5, r6, lr}
     7de:	0004      	movs	r4, r0
     7e0:	000d      	movs	r5, r1
	int32_t ret = 0;

	/* Sanity check arguments */
	ASSERT(calendar);
     7e2:	1e43      	subs	r3, r0, #1
     7e4:	4198      	sbcs	r0, r3
     7e6:	b2c0      	uxtb	r0, r0
     7e8:	22e0      	movs	r2, #224	; 0xe0
     7ea:	0052      	lsls	r2, r2, #1
     7ec:	4909      	ldr	r1, [pc, #36]	; (814 <calendar_init+0x38>)
     7ee:	4b0a      	ldr	r3, [pc, #40]	; (818 <calendar_init+0x3c>)
     7f0:	4798      	blx	r3

	if (calendar->device.hw == hw) {
     7f2:	6823      	ldr	r3, [r4, #0]
     7f4:	42ab      	cmp	r3, r5
     7f6:	d008      	beq.n	80a <calendar_init+0x2e>
		/* Already initialized with current configuration */
		return ERR_NONE;
	} else if (calendar->device.hw != NULL) {
     7f8:	2b00      	cmp	r3, #0
     7fa:	d108      	bne.n	80e <calendar_init+0x32>
		/* Initialized with another configuration */
		return ERR_ALREADY_INITIALIZED;
	}
	calendar->device.hw = (void *)hw;
     7fc:	6025      	str	r5, [r4, #0]
	ret                 = _calendar_init(&calendar->device);
     7fe:	0020      	movs	r0, r4
     800:	4b06      	ldr	r3, [pc, #24]	; (81c <calendar_init+0x40>)
     802:	4798      	blx	r3
	calendar->base_year = DEFAULT_BASE_YEAR;
     804:	4b06      	ldr	r3, [pc, #24]	; (820 <calendar_init+0x44>)
     806:	6163      	str	r3, [r4, #20]

	return ret;
}
     808:	bd70      	pop	{r4, r5, r6, pc}
		return ERR_NONE;
     80a:	2000      	movs	r0, #0
     80c:	e7fc      	b.n	808 <calendar_init+0x2c>
		return ERR_ALREADY_INITIALIZED;
     80e:	2012      	movs	r0, #18
     810:	4240      	negs	r0, r0
     812:	e7f9      	b.n	808 <calendar_init+0x2c>
     814:	00005798 	.word	0x00005798
     818:	00000bbd 	.word	0x00000bbd
     81c:	00000db1 	.word	0x00000db1
     820:	000007b2 	.word	0x000007b2

00000824 <calendar_enable>:
}

/** \brief Enable the Calendar
 */
int32_t calendar_enable(struct calendar_descriptor *const calendar)
{
     824:	b510      	push	{r4, lr}
     826:	0004      	movs	r4, r0
	/* Sanity check arguments */
	ASSERT(calendar);
     828:	1e43      	subs	r3, r0, #1
     82a:	4198      	sbcs	r0, r3
     82c:	b2c0      	uxtb	r0, r0
     82e:	22e6      	movs	r2, #230	; 0xe6
     830:	32ff      	adds	r2, #255	; 0xff
     832:	4904      	ldr	r1, [pc, #16]	; (844 <calendar_enable+0x20>)
     834:	4b04      	ldr	r3, [pc, #16]	; (848 <calendar_enable+0x24>)
     836:	4798      	blx	r3

	_calendar_enable(&calendar->device);
     838:	0020      	movs	r0, r4
     83a:	4b04      	ldr	r3, [pc, #16]	; (84c <calendar_enable+0x28>)
     83c:	4798      	blx	r3

	return ERR_NONE;
}
     83e:	2000      	movs	r0, #0
     840:	bd10      	pop	{r4, pc}
     842:	46c0      	nop			; (mov r8, r8)
     844:	00005798 	.word	0x00005798
     848:	00000bbd 	.word	0x00000bbd
     84c:	00000e3d 	.word	0x00000e3d

00000850 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
     850:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     852:	4b04      	ldr	r3, [pc, #16]	; (864 <delay_ms+0x14>)
     854:	681c      	ldr	r4, [r3, #0]
     856:	4b04      	ldr	r3, [pc, #16]	; (868 <delay_ms+0x18>)
     858:	4798      	blx	r3
     85a:	0001      	movs	r1, r0
     85c:	0020      	movs	r0, r4
     85e:	4b03      	ldr	r3, [pc, #12]	; (86c <delay_ms+0x1c>)
     860:	4798      	blx	r3
}
     862:	bd10      	pop	{r4, pc}
     864:	200001fc 	.word	0x200001fc
     868:	00000ce5 	.word	0x00000ce5
     86c:	00000d01 	.word	0x00000d01

00000870 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     870:	b570      	push	{r4, r5, r6, lr}
     872:	0004      	movs	r4, r0
     874:	000d      	movs	r5, r1
     876:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     878:	2800      	cmp	r0, #0
     87a:	d00e      	beq.n	89a <io_write+0x2a>
     87c:	2900      	cmp	r1, #0
     87e:	d00a      	beq.n	896 <io_write+0x26>
     880:	2001      	movs	r0, #1
     882:	2234      	movs	r2, #52	; 0x34
     884:	4906      	ldr	r1, [pc, #24]	; (8a0 <io_write+0x30>)
     886:	4b07      	ldr	r3, [pc, #28]	; (8a4 <io_write+0x34>)
     888:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
     88a:	6823      	ldr	r3, [r4, #0]
     88c:	0032      	movs	r2, r6
     88e:	0029      	movs	r1, r5
     890:	0020      	movs	r0, r4
     892:	4798      	blx	r3
}
     894:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     896:	2000      	movs	r0, #0
     898:	e7f3      	b.n	882 <io_write+0x12>
     89a:	2000      	movs	r0, #0
     89c:	e7f1      	b.n	882 <io_write+0x12>
     89e:	46c0      	nop			; (mov r8, r8)
     8a0:	000057b4 	.word	0x000057b4
     8a4:	00000bbd 	.word	0x00000bbd

000008a8 <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     8a8:	b570      	push	{r4, r5, r6, lr}
     8aa:	0004      	movs	r4, r0
     8ac:	000d      	movs	r5, r1
     8ae:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     8b0:	2800      	cmp	r0, #0
     8b2:	d00e      	beq.n	8d2 <io_read+0x2a>
     8b4:	2900      	cmp	r1, #0
     8b6:	d00a      	beq.n	8ce <io_read+0x26>
     8b8:	2001      	movs	r0, #1
     8ba:	223d      	movs	r2, #61	; 0x3d
     8bc:	4906      	ldr	r1, [pc, #24]	; (8d8 <io_read+0x30>)
     8be:	4b07      	ldr	r3, [pc, #28]	; (8dc <io_read+0x34>)
     8c0:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
     8c2:	6863      	ldr	r3, [r4, #4]
     8c4:	0032      	movs	r2, r6
     8c6:	0029      	movs	r1, r5
     8c8:	0020      	movs	r0, r4
     8ca:	4798      	blx	r3
}
     8cc:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     8ce:	2000      	movs	r0, #0
     8d0:	e7f3      	b.n	8ba <io_read+0x12>
     8d2:	2000      	movs	r0, #0
     8d4:	e7f1      	b.n	8ba <io_read+0x12>
     8d6:	46c0      	nop			; (mov r8, r8)
     8d8:	000057b4 	.word	0x000057b4
     8dc:	00000bbd 	.word	0x00000bbd

000008e0 <usart_transmission_complete>:
 * \brief Process completion of data sending
 *
 * \param[in] device The pointer to device structure
 */
static void usart_transmission_complete(struct _usart_async_device *device)
{
     8e0:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     8e2:	3808      	subs	r0, #8

	descr->stat = 0;
     8e4:	2300      	movs	r3, #0
     8e6:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.tx_done) {
     8e8:	6a43      	ldr	r3, [r0, #36]	; 0x24
     8ea:	2b00      	cmp	r3, #0
     8ec:	d000      	beq.n	8f0 <usart_transmission_complete+0x10>
		descr->usart_cb.tx_done(descr);
     8ee:	4798      	blx	r3
	}
}
     8f0:	bd10      	pop	{r4, pc}

000008f2 <usart_error>:
 * \brief Process error interrupt
 *
 * \param[in] device The pointer to device structure
 */
static void usart_error(struct _usart_async_device *device)
{
     8f2:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     8f4:	3808      	subs	r0, #8

	descr->stat = 0;
     8f6:	2300      	movs	r3, #0
     8f8:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.error) {
     8fa:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
     8fc:	2b00      	cmp	r3, #0
     8fe:	d000      	beq.n	902 <usart_error+0x10>
		descr->usart_cb.error(descr);
     900:	4798      	blx	r3
	}
}
     902:	bd10      	pop	{r4, pc}

00000904 <usart_fill_rx_buffer>:
{
     904:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     906:	0004      	movs	r4, r0
	ringbuffer_put(&descr->rx, data);
     908:	302c      	adds	r0, #44	; 0x2c
     90a:	4b04      	ldr	r3, [pc, #16]	; (91c <usart_fill_rx_buffer+0x18>)
     90c:	4798      	blx	r3
	if (descr->usart_cb.rx_done) {
     90e:	6a23      	ldr	r3, [r4, #32]
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     910:	3c08      	subs	r4, #8
	if (descr->usart_cb.rx_done) {
     912:	2b00      	cmp	r3, #0
     914:	d001      	beq.n	91a <usart_fill_rx_buffer+0x16>
		descr->usart_cb.rx_done(descr);
     916:	0020      	movs	r0, r4
     918:	4798      	blx	r3
}
     91a:	bd10      	pop	{r4, pc}
     91c:	00000c5d 	.word	0x00000c5d

00000920 <usart_async_write>:
{
     920:	b570      	push	{r4, r5, r6, lr}
     922:	0004      	movs	r4, r0
     924:	000e      	movs	r6, r1
     926:	0015      	movs	r5, r2
	ASSERT(descr && buf && length);
     928:	2800      	cmp	r0, #0
     92a:	d01d      	beq.n	968 <usart_async_write+0x48>
     92c:	2900      	cmp	r1, #0
     92e:	d01d      	beq.n	96c <usart_async_write+0x4c>
     930:	2a00      	cmp	r2, #0
     932:	d11d      	bne.n	970 <usart_async_write+0x50>
     934:	2000      	movs	r0, #0
     936:	223c      	movs	r2, #60	; 0x3c
     938:	32ff      	adds	r2, #255	; 0xff
     93a:	4910      	ldr	r1, [pc, #64]	; (97c <usart_async_write+0x5c>)
     93c:	4b10      	ldr	r3, [pc, #64]	; (980 <usart_async_write+0x60>)
     93e:	4798      	blx	r3
	if (descr->tx_por != descr->tx_buffer_length) {
     940:	2344      	movs	r3, #68	; 0x44
     942:	5ae2      	ldrh	r2, [r4, r3]
     944:	3308      	adds	r3, #8
     946:	5ae3      	ldrh	r3, [r4, r3]
     948:	429a      	cmp	r2, r3
     94a:	d113      	bne.n	974 <usart_async_write+0x54>
	descr->tx_buffer        = (uint8_t *)buf;
     94c:	64a6      	str	r6, [r4, #72]	; 0x48
	descr->tx_buffer_length = length;
     94e:	234c      	movs	r3, #76	; 0x4c
     950:	52e5      	strh	r5, [r4, r3]
	descr->tx_por           = 0;
     952:	2200      	movs	r2, #0
     954:	3b08      	subs	r3, #8
     956:	52e2      	strh	r2, [r4, r3]
	descr->stat             = USART_ASYNC_STATUS_BUSY;
     958:	3b43      	subs	r3, #67	; 0x43
     95a:	6323      	str	r3, [r4, #48]	; 0x30
	_usart_async_enable_byte_sent_irq(&descr->device);
     95c:	0020      	movs	r0, r4
     95e:	3008      	adds	r0, #8
     960:	4b08      	ldr	r3, [pc, #32]	; (984 <usart_async_write+0x64>)
     962:	4798      	blx	r3
	return (int32_t)length;
     964:	0028      	movs	r0, r5
}
     966:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && buf && length);
     968:	2000      	movs	r0, #0
     96a:	e7e4      	b.n	936 <usart_async_write+0x16>
     96c:	2000      	movs	r0, #0
     96e:	e7e2      	b.n	936 <usart_async_write+0x16>
     970:	2001      	movs	r0, #1
     972:	e7e0      	b.n	936 <usart_async_write+0x16>
		return ERR_NO_RESOURCE;
     974:	201c      	movs	r0, #28
     976:	4240      	negs	r0, r0
     978:	e7f5      	b.n	966 <usart_async_write+0x46>
     97a:	46c0      	nop			; (mov r8, r8)
     97c:	000057c8 	.word	0x000057c8
     980:	00000bbd 	.word	0x00000bbd
     984:	00001103 	.word	0x00001103

00000988 <usart_process_byte_sent>:
{
     988:	b570      	push	{r4, r5, r6, lr}
     98a:	0004      	movs	r4, r0
	if (descr->tx_por != descr->tx_buffer_length) {
     98c:	0002      	movs	r2, r0
     98e:	3a08      	subs	r2, #8
     990:	2344      	movs	r3, #68	; 0x44
     992:	5ad3      	ldrh	r3, [r2, r3]
     994:	214c      	movs	r1, #76	; 0x4c
     996:	5a52      	ldrh	r2, [r2, r1]
     998:	4293      	cmp	r3, r2
     99a:	d00d      	beq.n	9b8 <usart_process_byte_sent+0x30>
		_usart_async_write_byte(&descr->device, descr->tx_buffer[descr->tx_por++]);
     99c:	0002      	movs	r2, r0
     99e:	6c01      	ldr	r1, [r0, #64]	; 0x40
     9a0:	3a08      	subs	r2, #8
     9a2:	1c5d      	adds	r5, r3, #1
     9a4:	2044      	movs	r0, #68	; 0x44
     9a6:	5215      	strh	r5, [r2, r0]
     9a8:	5cc9      	ldrb	r1, [r1, r3]
     9aa:	0020      	movs	r0, r4
     9ac:	4b04      	ldr	r3, [pc, #16]	; (9c0 <usart_process_byte_sent+0x38>)
     9ae:	4798      	blx	r3
		_usart_async_enable_byte_sent_irq(&descr->device);
     9b0:	0020      	movs	r0, r4
     9b2:	4b04      	ldr	r3, [pc, #16]	; (9c4 <usart_process_byte_sent+0x3c>)
     9b4:	4798      	blx	r3
}
     9b6:	bd70      	pop	{r4, r5, r6, pc}
		_usart_async_enable_tx_done_irq(&descr->device);
     9b8:	4b03      	ldr	r3, [pc, #12]	; (9c8 <usart_process_byte_sent+0x40>)
     9ba:	4798      	blx	r3
}
     9bc:	e7fb      	b.n	9b6 <usart_process_byte_sent+0x2e>
     9be:	46c0      	nop			; (mov r8, r8)
     9c0:	000010fb 	.word	0x000010fb
     9c4:	00001103 	.word	0x00001103
     9c8:	0000110b 	.word	0x0000110b

000009cc <usart_async_read>:
{
     9cc:	b5f0      	push	{r4, r5, r6, r7, lr}
     9ce:	b085      	sub	sp, #20
     9d0:	0004      	movs	r4, r0
     9d2:	000d      	movs	r5, r1
     9d4:	0016      	movs	r6, r2
	ASSERT(descr && buf && length);
     9d6:	2800      	cmp	r0, #0
     9d8:	d017      	beq.n	a0a <usart_async_read+0x3e>
     9da:	2900      	cmp	r1, #0
     9dc:	d017      	beq.n	a0e <usart_async_read+0x42>
     9de:	2a00      	cmp	r2, #0
     9e0:	d117      	bne.n	a12 <usart_async_read+0x46>
     9e2:	2000      	movs	r0, #0
     9e4:	22ac      	movs	r2, #172	; 0xac
     9e6:	0052      	lsls	r2, r2, #1
     9e8:	4912      	ldr	r1, [pc, #72]	; (a34 <usart_async_read+0x68>)
     9ea:	4b13      	ldr	r3, [pc, #76]	; (a38 <usart_async_read+0x6c>)
     9ec:	4798      	blx	r3
	CRITICAL_SECTION_ENTER()
     9ee:	a803      	add	r0, sp, #12
     9f0:	4b12      	ldr	r3, [pc, #72]	; (a3c <usart_async_read+0x70>)
     9f2:	4798      	blx	r3
	num = ringbuffer_num(&descr->rx);
     9f4:	3434      	adds	r4, #52	; 0x34
     9f6:	0020      	movs	r0, r4
     9f8:	9401      	str	r4, [sp, #4]
     9fa:	4b11      	ldr	r3, [pc, #68]	; (a40 <usart_async_read+0x74>)
     9fc:	4798      	blx	r3
     9fe:	0007      	movs	r7, r0
	CRITICAL_SECTION_LEAVE()
     a00:	a803      	add	r0, sp, #12
     a02:	4b10      	ldr	r3, [pc, #64]	; (a44 <usart_async_read+0x78>)
     a04:	4798      	blx	r3
	uint16_t                       was_read = 0;
     a06:	2400      	movs	r4, #0
	while ((was_read < num) && (was_read < length)) {
     a08:	e00b      	b.n	a22 <usart_async_read+0x56>
	ASSERT(descr && buf && length);
     a0a:	2000      	movs	r0, #0
     a0c:	e7ea      	b.n	9e4 <usart_async_read+0x18>
     a0e:	2000      	movs	r0, #0
     a10:	e7e8      	b.n	9e4 <usart_async_read+0x18>
     a12:	2001      	movs	r0, #1
     a14:	e7e6      	b.n	9e4 <usart_async_read+0x18>
		ringbuffer_get(&descr->rx, &buf[was_read++]);
     a16:	3401      	adds	r4, #1
     a18:	b2a4      	uxth	r4, r4
     a1a:	1869      	adds	r1, r5, r1
     a1c:	9801      	ldr	r0, [sp, #4]
     a1e:	4b0a      	ldr	r3, [pc, #40]	; (a48 <usart_async_read+0x7c>)
     a20:	4798      	blx	r3
	while ((was_read < num) && (was_read < length)) {
     a22:	0021      	movs	r1, r4
     a24:	42a7      	cmp	r7, r4
     a26:	d901      	bls.n	a2c <usart_async_read+0x60>
     a28:	42b4      	cmp	r4, r6
     a2a:	d3f4      	bcc.n	a16 <usart_async_read+0x4a>
}
     a2c:	0020      	movs	r0, r4
     a2e:	b005      	add	sp, #20
     a30:	bdf0      	pop	{r4, r5, r6, r7, pc}
     a32:	46c0      	nop			; (mov r8, r8)
     a34:	000057c8 	.word	0x000057c8
     a38:	00000bbd 	.word	0x00000bbd
     a3c:	000007c1 	.word	0x000007c1
     a40:	00000c9d 	.word	0x00000c9d
     a44:	000007cf 	.word	0x000007cf
     a48:	00000c11 	.word	0x00000c11

00000a4c <usart_async_init>:
{
     a4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     a4e:	0004      	movs	r4, r0
     a50:	000d      	movs	r5, r1
     a52:	0016      	movs	r6, r2
     a54:	001f      	movs	r7, r3
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
     a56:	2800      	cmp	r0, #0
     a58:	d026      	beq.n	aa8 <usart_async_init+0x5c>
     a5a:	2900      	cmp	r1, #0
     a5c:	d026      	beq.n	aac <usart_async_init+0x60>
     a5e:	2a00      	cmp	r2, #0
     a60:	d026      	beq.n	ab0 <usart_async_init+0x64>
     a62:	2b00      	cmp	r3, #0
     a64:	d126      	bne.n	ab4 <usart_async_init+0x68>
     a66:	2000      	movs	r0, #0
     a68:	223a      	movs	r2, #58	; 0x3a
     a6a:	4915      	ldr	r1, [pc, #84]	; (ac0 <usart_async_init+0x74>)
     a6c:	4b15      	ldr	r3, [pc, #84]	; (ac4 <usart_async_init+0x78>)
     a6e:	4798      	blx	r3
	if (ERR_NONE != ringbuffer_init(&descr->rx, rx_buffer, rx_buffer_length)) {
     a70:	0020      	movs	r0, r4
     a72:	3034      	adds	r0, #52	; 0x34
     a74:	003a      	movs	r2, r7
     a76:	0031      	movs	r1, r6
     a78:	4b13      	ldr	r3, [pc, #76]	; (ac8 <usart_async_init+0x7c>)
     a7a:	4798      	blx	r3
     a7c:	2800      	cmp	r0, #0
     a7e:	d11b      	bne.n	ab8 <usart_async_init+0x6c>
	init_status = _usart_async_init(&descr->device, hw);
     a80:	0020      	movs	r0, r4
     a82:	3008      	adds	r0, #8
     a84:	0029      	movs	r1, r5
     a86:	4b11      	ldr	r3, [pc, #68]	; (acc <usart_async_init+0x80>)
     a88:	4798      	blx	r3
	if (init_status) {
     a8a:	2800      	cmp	r0, #0
     a8c:	d10b      	bne.n	aa6 <usart_async_init+0x5a>
	descr->io.read  = usart_async_read;
     a8e:	4b10      	ldr	r3, [pc, #64]	; (ad0 <usart_async_init+0x84>)
     a90:	6063      	str	r3, [r4, #4]
	descr->io.write = usart_async_write;
     a92:	4b10      	ldr	r3, [pc, #64]	; (ad4 <usart_async_init+0x88>)
     a94:	6023      	str	r3, [r4, #0]
	descr->device.usart_cb.tx_byte_sent = usart_process_byte_sent;
     a96:	4b10      	ldr	r3, [pc, #64]	; (ad8 <usart_async_init+0x8c>)
     a98:	60a3      	str	r3, [r4, #8]
	descr->device.usart_cb.rx_done_cb   = usart_fill_rx_buffer;
     a9a:	4b10      	ldr	r3, [pc, #64]	; (adc <usart_async_init+0x90>)
     a9c:	60e3      	str	r3, [r4, #12]
	descr->device.usart_cb.tx_done_cb   = usart_transmission_complete;
     a9e:	4b10      	ldr	r3, [pc, #64]	; (ae0 <usart_async_init+0x94>)
     aa0:	6123      	str	r3, [r4, #16]
	descr->device.usart_cb.error_cb     = usart_error;
     aa2:	4b10      	ldr	r3, [pc, #64]	; (ae4 <usart_async_init+0x98>)
     aa4:	6163      	str	r3, [r4, #20]
}
     aa6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
     aa8:	2000      	movs	r0, #0
     aaa:	e7dd      	b.n	a68 <usart_async_init+0x1c>
     aac:	2000      	movs	r0, #0
     aae:	e7db      	b.n	a68 <usart_async_init+0x1c>
     ab0:	2000      	movs	r0, #0
     ab2:	e7d9      	b.n	a68 <usart_async_init+0x1c>
     ab4:	2001      	movs	r0, #1
     ab6:	e7d7      	b.n	a68 <usart_async_init+0x1c>
		return ERR_INVALID_ARG;
     ab8:	200d      	movs	r0, #13
     aba:	4240      	negs	r0, r0
     abc:	e7f3      	b.n	aa6 <usart_async_init+0x5a>
     abe:	46c0      	nop			; (mov r8, r8)
     ac0:	000057c8 	.word	0x000057c8
     ac4:	00000bbd 	.word	0x00000bbd
     ac8:	00000bc5 	.word	0x00000bc5
     acc:	0000105d 	.word	0x0000105d
     ad0:	000009cd 	.word	0x000009cd
     ad4:	00000921 	.word	0x00000921
     ad8:	00000989 	.word	0x00000989
     adc:	00000905 	.word	0x00000905
     ae0:	000008e1 	.word	0x000008e1
     ae4:	000008f3 	.word	0x000008f3

00000ae8 <usart_async_enable>:
{
     ae8:	b510      	push	{r4, lr}
     aea:	0004      	movs	r4, r0
	ASSERT(descr);
     aec:	1e43      	subs	r3, r0, #1
     aee:	4198      	sbcs	r0, r3
     af0:	b2c0      	uxtb	r0, r0
     af2:	2261      	movs	r2, #97	; 0x61
     af4:	4904      	ldr	r1, [pc, #16]	; (b08 <usart_async_enable+0x20>)
     af6:	4b05      	ldr	r3, [pc, #20]	; (b0c <usart_async_enable+0x24>)
     af8:	4798      	blx	r3
	_usart_async_enable(&descr->device);
     afa:	0020      	movs	r0, r4
     afc:	3008      	adds	r0, #8
     afe:	4b04      	ldr	r3, [pc, #16]	; (b10 <usart_async_enable+0x28>)
     b00:	4798      	blx	r3
}
     b02:	2000      	movs	r0, #0
     b04:	bd10      	pop	{r4, pc}
     b06:	46c0      	nop			; (mov r8, r8)
     b08:	000057c8 	.word	0x000057c8
     b0c:	00000bbd 	.word	0x00000bbd
     b10:	000010e9 	.word	0x000010e9

00000b14 <usart_async_get_io_descriptor>:
{
     b14:	b570      	push	{r4, r5, r6, lr}
     b16:	0004      	movs	r4, r0
     b18:	000d      	movs	r5, r1
	ASSERT(descr && io);
     b1a:	2800      	cmp	r0, #0
     b1c:	d00b      	beq.n	b36 <usart_async_get_io_descriptor+0x22>
     b1e:	2900      	cmp	r1, #0
     b20:	d007      	beq.n	b32 <usart_async_get_io_descriptor+0x1e>
     b22:	2001      	movs	r0, #1
     b24:	2277      	movs	r2, #119	; 0x77
     b26:	4905      	ldr	r1, [pc, #20]	; (b3c <usart_async_get_io_descriptor+0x28>)
     b28:	4b05      	ldr	r3, [pc, #20]	; (b40 <usart_async_get_io_descriptor+0x2c>)
     b2a:	4798      	blx	r3
	*io = &descr->io;
     b2c:	602c      	str	r4, [r5, #0]
}
     b2e:	2000      	movs	r0, #0
     b30:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && io);
     b32:	2000      	movs	r0, #0
     b34:	e7f6      	b.n	b24 <usart_async_get_io_descriptor+0x10>
     b36:	2000      	movs	r0, #0
     b38:	e7f4      	b.n	b24 <usart_async_get_io_descriptor+0x10>
     b3a:	46c0      	nop			; (mov r8, r8)
     b3c:	000057c8 	.word	0x000057c8
     b40:	00000bbd 	.word	0x00000bbd

00000b44 <usart_async_register_callback>:
{
     b44:	b570      	push	{r4, r5, r6, lr}
     b46:	0005      	movs	r5, r0
     b48:	000e      	movs	r6, r1
     b4a:	0014      	movs	r4, r2
	ASSERT(descr);
     b4c:	1e43      	subs	r3, r0, #1
     b4e:	4198      	sbcs	r0, r3
     b50:	b2c0      	uxtb	r0, r0
     b52:	2283      	movs	r2, #131	; 0x83
     b54:	4916      	ldr	r1, [pc, #88]	; (bb0 <usart_async_register_callback+0x6c>)
     b56:	4b17      	ldr	r3, [pc, #92]	; (bb4 <usart_async_register_callback+0x70>)
     b58:	4798      	blx	r3
	switch (type) {
     b5a:	2e01      	cmp	r6, #1
     b5c:	d011      	beq.n	b82 <usart_async_register_callback+0x3e>
     b5e:	2e00      	cmp	r6, #0
     b60:	d004      	beq.n	b6c <usart_async_register_callback+0x28>
     b62:	2e02      	cmp	r6, #2
     b64:	d018      	beq.n	b98 <usart_async_register_callback+0x54>
		return ERR_INVALID_ARG;
     b66:	200d      	movs	r0, #13
     b68:	4240      	negs	r0, r0
     b6a:	e009      	b.n	b80 <usart_async_register_callback+0x3c>
		descr->usart_cb.rx_done = cb;
     b6c:	62ac      	str	r4, [r5, #40]	; 0x28
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_RX_DONE, NULL != cb);
     b6e:	1e62      	subs	r2, r4, #1
     b70:	4194      	sbcs	r4, r2
     b72:	b2e2      	uxtb	r2, r4
     b74:	0028      	movs	r0, r5
     b76:	3008      	adds	r0, #8
     b78:	2101      	movs	r1, #1
     b7a:	4b0f      	ldr	r3, [pc, #60]	; (bb8 <usart_async_register_callback+0x74>)
     b7c:	4798      	blx	r3
	return ERR_NONE;
     b7e:	2000      	movs	r0, #0
}
     b80:	bd70      	pop	{r4, r5, r6, pc}
		descr->usart_cb.tx_done = cb;
     b82:	626c      	str	r4, [r5, #36]	; 0x24
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_TX_DONE, NULL != cb);
     b84:	1e62      	subs	r2, r4, #1
     b86:	4194      	sbcs	r4, r2
     b88:	b2e2      	uxtb	r2, r4
     b8a:	0028      	movs	r0, r5
     b8c:	3008      	adds	r0, #8
     b8e:	2102      	movs	r1, #2
     b90:	4b09      	ldr	r3, [pc, #36]	; (bb8 <usart_async_register_callback+0x74>)
     b92:	4798      	blx	r3
	return ERR_NONE;
     b94:	2000      	movs	r0, #0
		break;
     b96:	e7f3      	b.n	b80 <usart_async_register_callback+0x3c>
		descr->usart_cb.error = cb;
     b98:	62ec      	str	r4, [r5, #44]	; 0x2c
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_ERROR, NULL != cb);
     b9a:	1e62      	subs	r2, r4, #1
     b9c:	4194      	sbcs	r4, r2
     b9e:	b2e2      	uxtb	r2, r4
     ba0:	0028      	movs	r0, r5
     ba2:	3008      	adds	r0, #8
     ba4:	2103      	movs	r1, #3
     ba6:	4b04      	ldr	r3, [pc, #16]	; (bb8 <usart_async_register_callback+0x74>)
     ba8:	4798      	blx	r3
	return ERR_NONE;
     baa:	2000      	movs	r0, #0
		break;
     bac:	e7e8      	b.n	b80 <usart_async_register_callback+0x3c>
     bae:	46c0      	nop			; (mov r8, r8)
     bb0:	000057c8 	.word	0x000057c8
     bb4:	00000bbd 	.word	0x00000bbd
     bb8:	00001115 	.word	0x00001115

00000bbc <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     bbc:	2800      	cmp	r0, #0
     bbe:	d100      	bne.n	bc2 <assert+0x6>
		__asm("BKPT #0");
     bc0:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
     bc2:	4770      	bx	lr

00000bc4 <ringbuffer_init>:

/**
 * \brief Ringbuffer init
 */
int32_t ringbuffer_init(struct ringbuffer *const rb, void *buf, uint32_t size)
{
     bc4:	b570      	push	{r4, r5, r6, lr}
     bc6:	0004      	movs	r4, r0
     bc8:	000e      	movs	r6, r1
     bca:	0015      	movs	r5, r2
	ASSERT(rb && buf && size);
     bcc:	2800      	cmp	r0, #0
     bce:	d012      	beq.n	bf6 <ringbuffer_init+0x32>
     bd0:	2900      	cmp	r1, #0
     bd2:	d012      	beq.n	bfa <ringbuffer_init+0x36>
     bd4:	2a00      	cmp	r2, #0
     bd6:	d112      	bne.n	bfe <ringbuffer_init+0x3a>
     bd8:	2000      	movs	r0, #0
     bda:	2228      	movs	r2, #40	; 0x28
     bdc:	490a      	ldr	r1, [pc, #40]	; (c08 <ringbuffer_init+0x44>)
     bde:	4b0b      	ldr	r3, [pc, #44]	; (c0c <ringbuffer_init+0x48>)
     be0:	4798      	blx	r3

	/*
	 * buf size must be aligned to power of 2
	 */
	if ((size & (size - 1)) != 0) {
     be2:	1e6b      	subs	r3, r5, #1
     be4:	422b      	tst	r3, r5
     be6:	d10c      	bne.n	c02 <ringbuffer_init+0x3e>
		return ERR_INVALID_ARG;
	}

	/* size - 1 is faster in calculation */
	rb->size        = size - 1;
     be8:	6063      	str	r3, [r4, #4]
	rb->read_index  = 0;
     bea:	2300      	movs	r3, #0
     bec:	60a3      	str	r3, [r4, #8]
	rb->write_index = rb->read_index;
     bee:	60e3      	str	r3, [r4, #12]
	rb->buf         = (uint8_t *)buf;
     bf0:	6026      	str	r6, [r4, #0]

	return ERR_NONE;
     bf2:	2000      	movs	r0, #0
}
     bf4:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(rb && buf && size);
     bf6:	2000      	movs	r0, #0
     bf8:	e7ef      	b.n	bda <ringbuffer_init+0x16>
     bfa:	2000      	movs	r0, #0
     bfc:	e7ed      	b.n	bda <ringbuffer_init+0x16>
     bfe:	2001      	movs	r0, #1
     c00:	e7eb      	b.n	bda <ringbuffer_init+0x16>
		return ERR_INVALID_ARG;
     c02:	200d      	movs	r0, #13
     c04:	4240      	negs	r0, r0
     c06:	e7f5      	b.n	bf4 <ringbuffer_init+0x30>
     c08:	000057e8 	.word	0x000057e8
     c0c:	00000bbd 	.word	0x00000bbd

00000c10 <ringbuffer_get>:
/**
 * \brief Get one byte from ringbuffer
 *
 */
int32_t ringbuffer_get(struct ringbuffer *const rb, uint8_t *data)
{
     c10:	b570      	push	{r4, r5, r6, lr}
     c12:	0004      	movs	r4, r0
     c14:	000d      	movs	r5, r1
	ASSERT(rb && data);
     c16:	2800      	cmp	r0, #0
     c18:	d016      	beq.n	c48 <ringbuffer_get+0x38>
     c1a:	2900      	cmp	r1, #0
     c1c:	d012      	beq.n	c44 <ringbuffer_get+0x34>
     c1e:	2001      	movs	r0, #1
     c20:	2240      	movs	r2, #64	; 0x40
     c22:	490c      	ldr	r1, [pc, #48]	; (c54 <ringbuffer_get+0x44>)
     c24:	4b0c      	ldr	r3, [pc, #48]	; (c58 <ringbuffer_get+0x48>)
     c26:	4798      	blx	r3

	if (rb->write_index != rb->read_index) {
     c28:	68a3      	ldr	r3, [r4, #8]
     c2a:	68e2      	ldr	r2, [r4, #12]
     c2c:	429a      	cmp	r2, r3
     c2e:	d00d      	beq.n	c4c <ringbuffer_get+0x3c>
		*data = rb->buf[rb->read_index & rb->size];
     c30:	6862      	ldr	r2, [r4, #4]
     c32:	4013      	ands	r3, r2
     c34:	6822      	ldr	r2, [r4, #0]
     c36:	5cd3      	ldrb	r3, [r2, r3]
     c38:	702b      	strb	r3, [r5, #0]
		rb->read_index++;
     c3a:	68a3      	ldr	r3, [r4, #8]
     c3c:	3301      	adds	r3, #1
     c3e:	60a3      	str	r3, [r4, #8]
		return ERR_NONE;
     c40:	2000      	movs	r0, #0
	}

	return ERR_NOT_FOUND;
}
     c42:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(rb && data);
     c44:	2000      	movs	r0, #0
     c46:	e7eb      	b.n	c20 <ringbuffer_get+0x10>
     c48:	2000      	movs	r0, #0
     c4a:	e7e9      	b.n	c20 <ringbuffer_get+0x10>
	return ERR_NOT_FOUND;
     c4c:	200a      	movs	r0, #10
     c4e:	4240      	negs	r0, r0
     c50:	e7f7      	b.n	c42 <ringbuffer_get+0x32>
     c52:	46c0      	nop			; (mov r8, r8)
     c54:	000057e8 	.word	0x000057e8
     c58:	00000bbd 	.word	0x00000bbd

00000c5c <ringbuffer_put>:
/**
 * \brief Put one byte to ringbuffer
 *
 */
int32_t ringbuffer_put(struct ringbuffer *const rb, uint8_t data)
{
     c5c:	b570      	push	{r4, r5, r6, lr}
     c5e:	0004      	movs	r4, r0
     c60:	000d      	movs	r5, r1
	ASSERT(rb);
     c62:	1e43      	subs	r3, r0, #1
     c64:	4198      	sbcs	r0, r3
     c66:	b2c0      	uxtb	r0, r0
     c68:	2251      	movs	r2, #81	; 0x51
     c6a:	490a      	ldr	r1, [pc, #40]	; (c94 <ringbuffer_put+0x38>)
     c6c:	4b0a      	ldr	r3, [pc, #40]	; (c98 <ringbuffer_put+0x3c>)
     c6e:	4798      	blx	r3

	rb->buf[rb->write_index & rb->size] = data;
     c70:	6863      	ldr	r3, [r4, #4]
     c72:	68e2      	ldr	r2, [r4, #12]
     c74:	4013      	ands	r3, r2
     c76:	6822      	ldr	r2, [r4, #0]
     c78:	54d5      	strb	r5, [r2, r3]

	/*
	 * buffer full strategy: new data will overwrite the oldest data in
	 * the buffer
	 */
	if ((rb->write_index - rb->read_index) > rb->size) {
     c7a:	68e3      	ldr	r3, [r4, #12]
     c7c:	68a2      	ldr	r2, [r4, #8]
     c7e:	1a9a      	subs	r2, r3, r2
     c80:	6861      	ldr	r1, [r4, #4]
     c82:	428a      	cmp	r2, r1
     c84:	d901      	bls.n	c8a <ringbuffer_put+0x2e>
		rb->read_index = rb->write_index - rb->size;
     c86:	1a59      	subs	r1, r3, r1
     c88:	60a1      	str	r1, [r4, #8]
	}

	rb->write_index++;
     c8a:	3301      	adds	r3, #1
     c8c:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
}
     c8e:	2000      	movs	r0, #0
     c90:	bd70      	pop	{r4, r5, r6, pc}
     c92:	46c0      	nop			; (mov r8, r8)
     c94:	000057e8 	.word	0x000057e8
     c98:	00000bbd 	.word	0x00000bbd

00000c9c <ringbuffer_num>:

/**
 * \brief Return the element number of ringbuffer
 */
uint32_t ringbuffer_num(const struct ringbuffer *const rb)
{
     c9c:	b510      	push	{r4, lr}
     c9e:	0004      	movs	r4, r0
	ASSERT(rb);
     ca0:	1e43      	subs	r3, r0, #1
     ca2:	4198      	sbcs	r0, r3
     ca4:	b2c0      	uxtb	r0, r0
     ca6:	2267      	movs	r2, #103	; 0x67
     ca8:	4903      	ldr	r1, [pc, #12]	; (cb8 <ringbuffer_num+0x1c>)
     caa:	4b04      	ldr	r3, [pc, #16]	; (cbc <ringbuffer_num+0x20>)
     cac:	4798      	blx	r3

	return rb->write_index - rb->read_index;
     cae:	68e0      	ldr	r0, [r4, #12]
     cb0:	68a3      	ldr	r3, [r4, #8]
     cb2:	1ac0      	subs	r0, r0, r3
}
     cb4:	bd10      	pop	{r4, pc}
     cb6:	46c0      	nop			; (mov r8, r8)
     cb8:	000057e8 	.word	0x000057e8
     cbc:	00000bbd 	.word	0x00000bbd

00000cc0 <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
     cc0:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
     cc2:	4a06      	ldr	r2, [pc, #24]	; (cdc <_sbrk+0x1c>)
     cc4:	6812      	ldr	r2, [r2, #0]
     cc6:	2a00      	cmp	r2, #0
     cc8:	d004      	beq.n	cd4 <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
     cca:	4a04      	ldr	r2, [pc, #16]	; (cdc <_sbrk+0x1c>)
     ccc:	6810      	ldr	r0, [r2, #0]

	heap += incr;
     cce:	18c3      	adds	r3, r0, r3
     cd0:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
     cd2:	4770      	bx	lr
		heap = (unsigned char *)&_end;
     cd4:	4902      	ldr	r1, [pc, #8]	; (ce0 <_sbrk+0x20>)
     cd6:	4a01      	ldr	r2, [pc, #4]	; (cdc <_sbrk+0x1c>)
     cd8:	6011      	str	r1, [r2, #0]
     cda:	e7f6      	b.n	cca <_sbrk+0xa>
     cdc:	20000200 	.word	0x20000200
     ce0:	200023b8 	.word	0x200023b8

00000ce4 <_get_cycles_for_ms>:

/**
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
     ce4:	b510      	push	{r4, lr}
     ce6:	0003      	movs	r3, r0
		return (ms * (freq / 10000) + 2) / 3 * 10;
     ce8:	2064      	movs	r0, #100	; 0x64
     cea:	4358      	muls	r0, r3
     cec:	3002      	adds	r0, #2
     cee:	2103      	movs	r1, #3
     cf0:	4b02      	ldr	r3, [pc, #8]	; (cfc <_get_cycles_for_ms+0x18>)
     cf2:	4798      	blx	r3
     cf4:	0083      	lsls	r3, r0, #2
     cf6:	181b      	adds	r3, r3, r0
     cf8:	0058      	lsls	r0, r3, #1
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
     cfa:	bd10      	pop	{r4, pc}
     cfc:	00001695 	.word	0x00001695

00000d00 <_delay_cycles>:
{
#ifndef _UNIT_TEST_
	(void)hw;
	(void)cycles;
#if defined __GNUC__
	__asm(".syntax unified\n"
     d00:	3901      	subs	r1, #1
     d02:	d8fd      	bhi.n	d00 <_delay_cycles>
	__asm("__delay:\n"
	      "subs r1, r1, #1\n"
	      "bhi __delay\n");
#endif
#endif
}
     d04:	4770      	bx	lr
	...

00000d08 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
     d08:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
     d0a:	4b06      	ldr	r3, [pc, #24]	; (d24 <_init_chip+0x1c>)
     d0c:	685a      	ldr	r2, [r3, #4]
     d0e:	605a      	str	r2, [r3, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_pm_init();
     d10:	4b05      	ldr	r3, [pc, #20]	; (d28 <_init_chip+0x20>)
     d12:	4798      	blx	r3
	_sysctrl_init_sources();
     d14:	4b05      	ldr	r3, [pc, #20]	; (d2c <_init_chip+0x24>)
     d16:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_sysctrl_init_referenced_generators();
     d18:	4b05      	ldr	r3, [pc, #20]	; (d30 <_init_chip+0x28>)
     d1a:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
     d1c:	20ff      	movs	r0, #255	; 0xff
     d1e:	4b05      	ldr	r3, [pc, #20]	; (d34 <_init_chip+0x2c>)
     d20:	4798      	blx	r3
#if CONF_DMAC_ENABLE
	_pm_enable_bus_clock(PM_BUS_AHB, DMAC);
	_pm_enable_bus_clock(PM_BUS_APBB, DMAC);
	_dma_init();
#endif
}
     d22:	bd10      	pop	{r4, pc}
     d24:	41004000 	.word	0x41004000
     d28:	00000d75 	.word	0x00000d75
     d2c:	000011a1 	.word	0x000011a1
     d30:	000011ed 	.word	0x000011ed
     d34:	00000d39 	.word	0x00000d39

00000d38 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
     d38:	07c3      	lsls	r3, r0, #31
     d3a:	d50a      	bpl.n	d52 <_gclk_init_generators_by_fref+0x1a>
}

static inline void hri_gclk_write_GENDIV_reg(const void *const hw, hri_gclk_gendiv_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->GENDIV.reg = data;
     d3c:	4b0b      	ldr	r3, [pc, #44]	; (d6c <_gclk_init_generators_by_fref+0x34>)
     d3e:	2280      	movs	r2, #128	; 0x80
     d40:	0052      	lsls	r2, r2, #1
     d42:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     d44:	2283      	movs	r2, #131	; 0x83
     d46:	0252      	lsls	r2, r2, #9
     d48:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     d4a:	4b08      	ldr	r3, [pc, #32]	; (d6c <_gclk_init_generators_by_fref+0x34>)
     d4c:	785b      	ldrb	r3, [r3, #1]
     d4e:	09db      	lsrs	r3, r3, #7
     d50:	d1fb      	bne.n	d4a <_gclk_init_generators_by_fref+0x12>
		        | (CONF_GCLK_GENERATOR_2_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_2_SRC | GCLK_GENCTRL_ID(2));
	}
#endif

#if CONF_GCLK_GENERATOR_3_CONFIG == 1
	if (bm & (1ul << 3)) {
     d52:	0703      	lsls	r3, r0, #28
     d54:	d509      	bpl.n	d6a <_gclk_init_generators_by_fref+0x32>
	((Gclk *)hw)->GENDIV.reg = data;
     d56:	4b05      	ldr	r3, [pc, #20]	; (d6c <_gclk_init_generators_by_fref+0x34>)
     d58:	2204      	movs	r2, #4
     d5a:	32ff      	adds	r2, #255	; 0xff
     d5c:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     d5e:	4a04      	ldr	r2, [pc, #16]	; (d70 <_gclk_init_generators_by_fref+0x38>)
     d60:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     d62:	4b02      	ldr	r3, [pc, #8]	; (d6c <_gclk_init_generators_by_fref+0x34>)
     d64:	785b      	ldrb	r3, [r3, #1]
     d66:	09db      	lsrs	r3, r3, #7
     d68:	d1fb      	bne.n	d62 <_gclk_init_generators_by_fref+0x2a>
		        | (CONF_GCLK_GEN_8_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_8_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_8_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_8_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_8_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_8_SRC | GCLK_GENCTRL_ID(8));
	}
#endif
}
     d6a:	4770      	bx	lr
     d6c:	40000c00 	.word	0x40000c00
     d70:	00010303 	.word	0x00010303

00000d74 <_pm_init>:
}

static inline void hri_pm_set_CPUSEL_CPUDIV_bf(const void *const hw, hri_pm_cpusel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->CPUSEL.reg |= PM_CPUSEL_CPUDIV(mask);
     d74:	4b06      	ldr	r3, [pc, #24]	; (d90 <_pm_init+0x1c>)
     d76:	7a1a      	ldrb	r2, [r3, #8]
     d78:	b2d2      	uxtb	r2, r2
     d7a:	721a      	strb	r2, [r3, #8]
}

static inline void hri_pm_set_APBASEL_APBADIV_bf(const void *const hw, hri_pm_apbasel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBASEL.reg |= PM_APBASEL_APBADIV(mask);
     d7c:	7a5a      	ldrb	r2, [r3, #9]
     d7e:	b2d2      	uxtb	r2, r2
     d80:	725a      	strb	r2, [r3, #9]
}

static inline void hri_pm_set_APBBSEL_APBBDIV_bf(const void *const hw, hri_pm_apbbsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBBSEL.reg |= PM_APBBSEL_APBBDIV(mask);
     d82:	7a9a      	ldrb	r2, [r3, #10]
     d84:	b2d2      	uxtb	r2, r2
     d86:	729a      	strb	r2, [r3, #10]
}

static inline void hri_pm_set_APBCSEL_APBCDIV_bf(const void *const hw, hri_pm_apbcsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBCSEL.reg |= PM_APBCSEL_APBCDIV(mask);
     d88:	7ada      	ldrb	r2, [r3, #11]
     d8a:	b2d2      	uxtb	r2, r2
     d8c:	72da      	strb	r2, [r3, #11]
{
	hri_pm_set_CPUSEL_CPUDIV_bf(PM, CONF_CPU_DIV);
	hri_pm_set_APBASEL_APBADIV_bf(PM, CONF_APBA_DIV);
	hri_pm_set_APBBSEL_APBBDIV_bf(PM, CONF_APBB_DIV);
	hri_pm_set_APBCSEL_APBCDIV_bf(PM, CONF_APBC_DIV);
}
     d8e:	4770      	bx	lr
     d90:	40000400 	.word	0x40000400

00000d94 <_rtc_interrupt_handler>:
 * \brief RTC interrupt handler
 *
 * \param[in] dev The pointer to calendar device struct
 */
static void _rtc_interrupt_handler(struct calendar_dev *dev)
{
     d94:	b510      	push	{r4, lr}
     d96:	0004      	movs	r4, r0
	return ((Rtc *)hw)->MODE0.INTFLAG.reg;
     d98:	6803      	ldr	r3, [r0, #0]
     d9a:	7a1b      	ldrb	r3, [r3, #8]
	/* Read and mask interrupt flag register */
	uint16_t interrupt_status = hri_rtcmode0_read_INTFLAG_reg(dev->hw);

	if (interrupt_status & RTC_MODE0_INTFLAG_CMP0) {
     d9c:	07db      	lsls	r3, r3, #31
     d9e:	d400      	bmi.n	da2 <_rtc_interrupt_handler+0xe>
		dev->callback(dev);

		/* Clear interrupt flag */
		hri_rtcmode0_clear_interrupt_CMP0_bit(dev->hw);
	}
}
     da0:	bd10      	pop	{r4, pc}
		dev->callback(dev);
     da2:	6843      	ldr	r3, [r0, #4]
     da4:	4798      	blx	r3
		hri_rtcmode0_clear_interrupt_CMP0_bit(dev->hw);
     da6:	6823      	ldr	r3, [r4, #0]
	((Rtc *)hw)->MODE0.INTFLAG.reg = RTC_MODE0_INTFLAG_CMP0;
     da8:	2201      	movs	r2, #1
     daa:	721a      	strb	r2, [r3, #8]
}
     dac:	e7f8      	b.n	da0 <_rtc_interrupt_handler+0xc>
	...

00000db0 <_calendar_init>:

/**
 * \brief Initializes the RTC module with given configurations.
 */
int32_t _calendar_init(struct calendar_dev *const dev)
{
     db0:	b510      	push	{r4, lr}
     db2:	1e04      	subs	r4, r0, #0
	uint16_t register_value;

	/* Sanity check arguments */
	ASSERT(dev && dev->hw);
     db4:	d039      	beq.n	e2a <_calendar_init+0x7a>
     db6:	6803      	ldr	r3, [r0, #0]
     db8:	2b00      	cmp	r3, #0
     dba:	d034      	beq.n	e26 <_calendar_init+0x76>
     dbc:	2001      	movs	r0, #1
     dbe:	2278      	movs	r2, #120	; 0x78
     dc0:	491b      	ldr	r1, [pc, #108]	; (e30 <_calendar_init+0x80>)
     dc2:	4b1c      	ldr	r3, [pc, #112]	; (e34 <_calendar_init+0x84>)
     dc4:	4798      	blx	r3

	_rtc_dev = dev;
     dc6:	4b1c      	ldr	r3, [pc, #112]	; (e38 <_calendar_init+0x88>)
     dc8:	601c      	str	r4, [r3, #0]

	hri_rtcmode0_wait_for_sync(dev->hw);
     dca:	6822      	ldr	r2, [r4, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     dcc:	7a93      	ldrb	r3, [r2, #10]
     dce:	09db      	lsrs	r3, r3, #7
     dd0:	d1fc      	bne.n	dcc <_calendar_init+0x1c>
     dd2:	7a93      	ldrb	r3, [r2, #10]
     dd4:	09db      	lsrs	r3, r3, #7
     dd6:	d1fc      	bne.n	dd2 <_calendar_init+0x22>
	tmp = ((Rtc *)hw)->MODE0.CTRL.reg;
     dd8:	8813      	ldrh	r3, [r2, #0]
	if (hri_rtcmode0_get_CTRL_ENABLE_bit(dev->hw)) {
     dda:	079b      	lsls	r3, r3, #30
     ddc:	d50a      	bpl.n	df4 <_calendar_init+0x44>
	((Rtc *)hw)->MODE0.CTRL.reg &= ~RTC_MODE0_CTRL_ENABLE;
     dde:	8813      	ldrh	r3, [r2, #0]
     de0:	2102      	movs	r1, #2
     de2:	438b      	bics	r3, r1
     de4:	8013      	strh	r3, [r2, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     de6:	7a93      	ldrb	r3, [r2, #10]
     de8:	09db      	lsrs	r3, r3, #7
     dea:	d1fc      	bne.n	de6 <_calendar_init+0x36>
#if !CONF_RTC_INIT_RESET
		return ERR_DENIED;
#else
		hri_rtcmode0_clear_CTRL_ENABLE_bit(dev->hw);
		hri_rtcmode0_wait_for_sync(dev->hw);
     dec:	6822      	ldr	r2, [r4, #0]
     dee:	7a93      	ldrb	r3, [r2, #10]
     df0:	09db      	lsrs	r3, r3, #7
     df2:	d1fc      	bne.n	dee <_calendar_init+0x3e>
#endif
	}
	hri_rtcmode0_set_CTRL_SWRST_bit(dev->hw);
     df4:	6822      	ldr	r2, [r4, #0]
	((Rtc *)hw)->MODE0.CTRL.reg |= RTC_MODE0_CTRL_SWRST;
     df6:	8813      	ldrh	r3, [r2, #0]
     df8:	2101      	movs	r1, #1
     dfa:	430b      	orrs	r3, r1
     dfc:	b29b      	uxth	r3, r3
     dfe:	8013      	strh	r3, [r2, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     e00:	7a93      	ldrb	r3, [r2, #10]
     e02:	09db      	lsrs	r3, r3, #7
     e04:	d1fc      	bne.n	e00 <_calendar_init+0x50>
	hri_rtcmode0_wait_for_sync(dev->hw);
     e06:	6822      	ldr	r2, [r4, #0]
     e08:	7a93      	ldrb	r3, [r2, #10]
     e0a:	09db      	lsrs	r3, r3, #7
     e0c:	d1fc      	bne.n	e08 <_calendar_init+0x58>
	((Rtc *)hw)->MODE0.CTRL.reg = data;
     e0e:	8013      	strh	r3, [r2, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     e10:	7a93      	ldrb	r3, [r2, #10]
     e12:	09db      	lsrs	r3, r3, #7
     e14:	d1fc      	bne.n	e10 <_calendar_init+0x60>
	register_value &= (~RTC_MODE0_CTRL_MATCHCLR);

	hri_rtcmode0_write_CTRL_reg(dev->hw, register_value);

	/* set continuously clock read update mode */
	hri_rtcmode0_set_READREQ_RCONT_bit(dev->hw);
     e16:	6822      	ldr	r2, [r4, #0]
	((Rtc *)hw)->MODE0.READREQ.reg |= RTC_READREQ_RCONT;
     e18:	8853      	ldrh	r3, [r2, #2]
     e1a:	2180      	movs	r1, #128	; 0x80
     e1c:	01c9      	lsls	r1, r1, #7
     e1e:	430b      	orrs	r3, r1
     e20:	8053      	strh	r3, [r2, #2]
	        | (CONF_RTC_PEREO6 << RTC_MODE0_EVCTRL_PEREO6_Pos) | (CONF_RTC_PEREO7 << RTC_MODE0_EVCTRL_PEREO7_Pos)
	        | (CONF_RTC_COMPE0 << RTC_MODE0_EVCTRL_CMPEO_Pos) | (CONF_RTC_OVFEO << RTC_MODE0_EVCTRL_OVFEO_Pos));
#endif

	return ERR_NONE;
}
     e22:	2000      	movs	r0, #0
     e24:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->hw);
     e26:	2000      	movs	r0, #0
     e28:	e7c9      	b.n	dbe <_calendar_init+0xe>
     e2a:	2000      	movs	r0, #0
     e2c:	e7c7      	b.n	dbe <_calendar_init+0xe>
     e2e:	46c0      	nop			; (mov r8, r8)
     e30:	0000580c 	.word	0x0000580c
     e34:	00000bbd 	.word	0x00000bbd
     e38:	20000204 	.word	0x20000204

00000e3c <_calendar_enable>:

/**
 * \brief Enable the RTC module
 */
int32_t _calendar_enable(struct calendar_dev *const dev)
{
     e3c:	b510      	push	{r4, lr}
     e3e:	1e04      	subs	r4, r0, #0
	/* Sanity check arguments */
	ASSERT(dev && dev->hw);
     e40:	d014      	beq.n	e6c <_calendar_enable+0x30>
     e42:	6803      	ldr	r3, [r0, #0]
     e44:	2b00      	cmp	r3, #0
     e46:	d00f      	beq.n	e68 <_calendar_enable+0x2c>
     e48:	2001      	movs	r0, #1
     e4a:	22aa      	movs	r2, #170	; 0xaa
     e4c:	4908      	ldr	r1, [pc, #32]	; (e70 <_calendar_enable+0x34>)
     e4e:	4b09      	ldr	r3, [pc, #36]	; (e74 <_calendar_enable+0x38>)
     e50:	4798      	blx	r3

	/* Enable rtc */
	hri_rtcmode0_set_CTRL_ENABLE_bit(dev->hw);
     e52:	6822      	ldr	r2, [r4, #0]
	((Rtc *)hw)->MODE0.CTRL.reg |= RTC_MODE0_CTRL_ENABLE;
     e54:	8813      	ldrh	r3, [r2, #0]
     e56:	2102      	movs	r1, #2
     e58:	430b      	orrs	r3, r1
     e5a:	b29b      	uxth	r3, r3
     e5c:	8013      	strh	r3, [r2, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     e5e:	7a93      	ldrb	r3, [r2, #10]
     e60:	09db      	lsrs	r3, r3, #7
     e62:	d1fc      	bne.n	e5e <_calendar_enable+0x22>

	return ERR_NONE;
}
     e64:	2000      	movs	r0, #0
     e66:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->hw);
     e68:	2000      	movs	r0, #0
     e6a:	e7ee      	b.n	e4a <_calendar_enable+0xe>
     e6c:	2000      	movs	r0, #0
     e6e:	e7ec      	b.n	e4a <_calendar_enable+0xe>
     e70:	0000580c 	.word	0x0000580c
     e74:	00000bbd 	.word	0x00000bbd

00000e78 <RTC_Handler>:

/**
 * \brief Rtc interrupt handler
 */
void RTC_Handler(void)
{
     e78:	b510      	push	{r4, lr}
	_rtc_interrupt_handler(_rtc_dev);
     e7a:	4b02      	ldr	r3, [pc, #8]	; (e84 <RTC_Handler+0xc>)
     e7c:	6818      	ldr	r0, [r3, #0]
     e7e:	4b02      	ldr	r3, [pc, #8]	; (e88 <RTC_Handler+0x10>)
     e80:	4798      	blx	r3
}
     e82:	bd10      	pop	{r4, pc}
     e84:	20000204 	.word	0x20000204
     e88:	00000d95 	.word	0x00000d95

00000e8c <_sercom_get_hardware_index>:
{
#ifdef _UNIT_TEST_
	return ((uint32_t)hw - (uint32_t)SERCOM0) / sizeof(Sercom);
#endif

	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
     e8c:	4b02      	ldr	r3, [pc, #8]	; (e98 <_sercom_get_hardware_index+0xc>)
     e8e:	469c      	mov	ip, r3
     e90:	4460      	add	r0, ip
     e92:	0a80      	lsrs	r0, r0, #10
     e94:	b2c0      	uxtb	r0, r0
}
     e96:	4770      	bx	lr
     e98:	bdfff800 	.word	0xbdfff800

00000e9c <_sercom_usart_interrupt_handler>:
 * \internal Sercom interrupt handler
 *
 * \param[in] p The pointer to interrupt parameter
 */
static void _sercom_usart_interrupt_handler(struct _usart_async_device *device)
{
     e9c:	b510      	push	{r4, lr}
	void *hw = device->hw;
     e9e:	6984      	ldr	r4, [r0, #24]
	((Sercom *)hw)->USART.INTFLAG.reg = SERCOM_USART_INTFLAG_ERROR;
}

static inline bool hri_sercomusart_get_interrupt_DRE_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
     ea0:	7e23      	ldrb	r3, [r4, #24]

	if (hri_sercomusart_get_interrupt_DRE_bit(hw) && hri_sercomusart_get_INTEN_DRE_bit(hw)) {
     ea2:	07db      	lsls	r3, r3, #31
     ea4:	d502      	bpl.n	eac <_sercom_usart_interrupt_handler+0x10>
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
}

static inline bool hri_sercomusart_get_INTEN_DRE_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_DRE) >> SERCOM_USART_INTENSET_DRE_Pos;
     ea6:	7da3      	ldrb	r3, [r4, #22]
     ea8:	07db      	lsls	r3, r3, #31
     eaa:	d40f      	bmi.n	ecc <_sercom_usart_interrupt_handler+0x30>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
     eac:	7e23      	ldrb	r3, [r4, #24]
		hri_sercomusart_clear_INTEN_DRE_bit(hw);
		device->usart_cb.tx_byte_sent(device);
	} else if (hri_sercomusart_get_interrupt_TXC_bit(hw) && hri_sercomusart_get_INTEN_TXC_bit(hw)) {
     eae:	079b      	lsls	r3, r3, #30
     eb0:	d502      	bpl.n	eb8 <_sercom_usart_interrupt_handler+0x1c>
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
}

static inline bool hri_sercomusart_get_INTEN_TXC_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_TXC) >> SERCOM_USART_INTENSET_TXC_Pos;
     eb2:	7da3      	ldrb	r3, [r4, #22]
     eb4:	079b      	lsls	r3, r3, #30
     eb6:	d40e      	bmi.n	ed6 <_sercom_usart_interrupt_handler+0x3a>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
     eb8:	7e23      	ldrb	r3, [r4, #24]
		hri_sercomusart_clear_INTEN_TXC_bit(hw);
		device->usart_cb.tx_done_cb(device);
	} else if (hri_sercomusart_get_interrupt_RXC_bit(hw)) {
     eba:	075b      	lsls	r3, r3, #29
     ebc:	d515      	bpl.n	eea <_sercom_usart_interrupt_handler+0x4e>
	SERCOM_CRITICAL_SECTION_LEAVE();
}

static inline hri_sercomusart_status_reg_t hri_sercomusart_read_STATUS_reg(const void *const hw)
{
	return ((Sercom *)hw)->USART.STATUS.reg;
     ebe:	8b62      	ldrh	r2, [r4, #26]
		if (hri_sercomusart_read_STATUS_reg(hw)
     ec0:	2337      	movs	r3, #55	; 0x37
     ec2:	421a      	tst	r2, r3
     ec4:	d00c      	beq.n	ee0 <_sercom_usart_interrupt_handler+0x44>
	((Sercom *)hw)->USART.STATUS.reg = mask;
     ec6:	3308      	adds	r3, #8
     ec8:	8363      	strh	r3, [r4, #26]
		hri_sercomusart_clear_interrupt_ERROR_bit(hw);
		device->usart_cb.error_cb(device);
		status = hri_sercomusart_read_STATUS_reg(hw);
		hri_sercomusart_clear_STATUS_reg(hw, status);
	}
}
     eca:	bd10      	pop	{r4, pc}
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_DRE;
     ecc:	2301      	movs	r3, #1
     ece:	7523      	strb	r3, [r4, #20]
		device->usart_cb.tx_byte_sent(device);
     ed0:	6803      	ldr	r3, [r0, #0]
     ed2:	4798      	blx	r3
     ed4:	e7f9      	b.n	eca <_sercom_usart_interrupt_handler+0x2e>
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_TXC;
     ed6:	2302      	movs	r3, #2
     ed8:	7523      	strb	r3, [r4, #20]
		device->usart_cb.tx_done_cb(device);
     eda:	6883      	ldr	r3, [r0, #8]
     edc:	4798      	blx	r3
     ede:	e7f4      	b.n	eca <_sercom_usart_interrupt_handler+0x2e>
		device->usart_cb.rx_done_cb(device, hri_sercomusart_read_DATA_reg(hw));
     ee0:	6843      	ldr	r3, [r0, #4]
	return ((Sercom *)hw)->USART.DATA.reg;
     ee2:	8d21      	ldrh	r1, [r4, #40]	; 0x28
     ee4:	b2c9      	uxtb	r1, r1
     ee6:	4798      	blx	r3
     ee8:	e7ef      	b.n	eca <_sercom_usart_interrupt_handler+0x2e>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_ERROR) >> SERCOM_USART_INTFLAG_ERROR_Pos;
     eea:	7e23      	ldrb	r3, [r4, #24]
	} else if (hri_sercomusart_get_interrupt_ERROR_bit(hw)) {
     eec:	09db      	lsrs	r3, r3, #7
     eee:	d0ec      	beq.n	eca <_sercom_usart_interrupt_handler+0x2e>
	((Sercom *)hw)->USART.INTFLAG.reg = SERCOM_USART_INTFLAG_ERROR;
     ef0:	2380      	movs	r3, #128	; 0x80
     ef2:	7623      	strb	r3, [r4, #24]
		device->usart_cb.error_cb(device);
     ef4:	68c3      	ldr	r3, [r0, #12]
     ef6:	4798      	blx	r3
	return ((Sercom *)hw)->USART.STATUS.reg;
     ef8:	8b63      	ldrh	r3, [r4, #26]
     efa:	b29b      	uxth	r3, r3
	((Sercom *)hw)->USART.STATUS.reg = mask;
     efc:	8363      	strh	r3, [r4, #26]
     efe:	e7e4      	b.n	eca <_sercom_usart_interrupt_handler+0x2e>

00000f00 <_sercom_init_irq_param>:
 * \brief Init irq param with the given sercom hardware instance
 */
static void _sercom_init_irq_param(const void *const hw, void *dev)
{

	if (hw == SERCOM3) {
     f00:	4b03      	ldr	r3, [pc, #12]	; (f10 <_sercom_init_irq_param+0x10>)
     f02:	4298      	cmp	r0, r3
     f04:	d000      	beq.n	f08 <_sercom_init_irq_param+0x8>
		_sercom3_dev = (struct _usart_async_device *)dev;
	}
}
     f06:	4770      	bx	lr
		_sercom3_dev = (struct _usart_async_device *)dev;
     f08:	4b02      	ldr	r3, [pc, #8]	; (f14 <_sercom_init_irq_param+0x14>)
     f0a:	6019      	str	r1, [r3, #0]
}
     f0c:	e7fb      	b.n	f06 <_sercom_init_irq_param+0x6>
     f0e:	46c0      	nop			; (mov r8, r8)
     f10:	42001400 	.word	0x42001400
     f14:	20000208 	.word	0x20000208

00000f18 <_sercom_get_irq_num>:

/**
 * \brief Retrieve IRQ number for the given hardware instance
 */
static uint8_t _sercom_get_irq_num(const void *const hw)
{
     f18:	b510      	push	{r4, lr}
	return SERCOM0_IRQn + _sercom_get_hardware_index(hw);
     f1a:	4b02      	ldr	r3, [pc, #8]	; (f24 <_sercom_get_irq_num+0xc>)
     f1c:	4798      	blx	r3
     f1e:	3009      	adds	r0, #9
     f20:	b2c0      	uxtb	r0, r0
}
     f22:	bd10      	pop	{r4, pc}
     f24:	00000e8d 	.word	0x00000e8d

00000f28 <_get_sercom_index>:
{
     f28:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
     f2a:	4b0b      	ldr	r3, [pc, #44]	; (f58 <_get_sercom_index+0x30>)
     f2c:	4798      	blx	r3
     f2e:	0002      	movs	r2, r0
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
     f30:	2000      	movs	r0, #0
     f32:	2800      	cmp	r0, #0
     f34:	d006      	beq.n	f44 <_get_sercom_index+0x1c>
	ASSERT(false);
     f36:	4a09      	ldr	r2, [pc, #36]	; (f5c <_get_sercom_index+0x34>)
     f38:	4909      	ldr	r1, [pc, #36]	; (f60 <_get_sercom_index+0x38>)
     f3a:	2000      	movs	r0, #0
     f3c:	4b09      	ldr	r3, [pc, #36]	; (f64 <_get_sercom_index+0x3c>)
     f3e:	4798      	blx	r3
	return 0;
     f40:	2000      	movs	r0, #0
}
     f42:	bd10      	pop	{r4, pc}
		if (_usarts[i].number == sercom_offset) {
     f44:	0083      	lsls	r3, r0, #2
     f46:	181b      	adds	r3, r3, r0
     f48:	0099      	lsls	r1, r3, #2
     f4a:	4b07      	ldr	r3, [pc, #28]	; (f68 <_get_sercom_index+0x40>)
     f4c:	5ccb      	ldrb	r3, [r1, r3]
     f4e:	429a      	cmp	r2, r3
     f50:	d0f7      	beq.n	f42 <_get_sercom_index+0x1a>
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
     f52:	3001      	adds	r0, #1
     f54:	b2c0      	uxtb	r0, r0
     f56:	e7ec      	b.n	f32 <_get_sercom_index+0xa>
     f58:	00000e8d 	.word	0x00000e8d
     f5c:	0000025e 	.word	0x0000025e
     f60:	00005874 	.word	0x00005874
     f64:	00000bbd 	.word	0x00000bbd
     f68:	00005824 	.word	0x00005824

00000f6c <_usart_init>:
{
     f6c:	b570      	push	{r4, r5, r6, lr}
     f6e:	0004      	movs	r4, r0
	uint8_t i = _get_sercom_index(hw);
     f70:	4b38      	ldr	r3, [pc, #224]	; (1054 <_usart_init+0xe8>)
     f72:	4798      	blx	r3
	return ((Sercom *)hw)->USART.SYNCBUSY.reg & reg;
     f74:	69e3      	ldr	r3, [r4, #28]
	if (!hri_sercomusart_is_syncing(hw, SERCOM_USART_SYNCBUSY_SWRST)) {
     f76:	07db      	lsls	r3, r3, #31
     f78:	d41d      	bmi.n	fb6 <_usart_init+0x4a>
		uint32_t mode = _usarts[i].ctrl_a & SERCOM_USART_CTRLA_MODE_Msk;
     f7a:	0083      	lsls	r3, r0, #2
     f7c:	181b      	adds	r3, r3, r0
     f7e:	009a      	lsls	r2, r3, #2
     f80:	4b35      	ldr	r3, [pc, #212]	; (1058 <_usart_init+0xec>)
     f82:	189b      	adds	r3, r3, r2
     f84:	685a      	ldr	r2, [r3, #4]
     f86:	231c      	movs	r3, #28
     f88:	401a      	ands	r2, r3
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     f8a:	69e3      	ldr	r3, [r4, #28]
     f8c:	079b      	lsls	r3, r3, #30
     f8e:	d1fc      	bne.n	f8a <_usart_init+0x1e>
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
     f90:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
     f92:	079b      	lsls	r3, r3, #30
     f94:	d509      	bpl.n	faa <_usart_init+0x3e>
	((Sercom *)hw)->USART.CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
     f96:	6823      	ldr	r3, [r4, #0]
     f98:	2102      	movs	r1, #2
     f9a:	438b      	bics	r3, r1
     f9c:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     f9e:	69e3      	ldr	r3, [r4, #28]
     fa0:	079b      	lsls	r3, r3, #30
     fa2:	d1fc      	bne.n	f9e <_usart_init+0x32>
     fa4:	69e3      	ldr	r3, [r4, #28]
     fa6:	079b      	lsls	r3, r3, #30
     fa8:	d4fc      	bmi.n	fa4 <_usart_init+0x38>
		hri_sercomusart_write_CTRLA_reg(hw, SERCOM_USART_CTRLA_SWRST | mode);
     faa:	2301      	movs	r3, #1
     fac:	4313      	orrs	r3, r2
	((Sercom *)hw)->USART.CTRLA.reg = data;
     fae:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     fb0:	69e3      	ldr	r3, [r4, #28]
     fb2:	079b      	lsls	r3, r3, #30
     fb4:	d1fc      	bne.n	fb0 <_usart_init+0x44>
     fb6:	69e3      	ldr	r3, [r4, #28]
     fb8:	07db      	lsls	r3, r3, #31
     fba:	d4fc      	bmi.n	fb6 <_usart_init+0x4a>
	hri_sercomusart_write_CTRLA_reg(hw, _usarts[i].ctrl_a);
     fbc:	0083      	lsls	r3, r0, #2
     fbe:	181b      	adds	r3, r3, r0
     fc0:	009a      	lsls	r2, r3, #2
     fc2:	4b25      	ldr	r3, [pc, #148]	; (1058 <_usart_init+0xec>)
     fc4:	189b      	adds	r3, r3, r2
     fc6:	685b      	ldr	r3, [r3, #4]
	((Sercom *)hw)->USART.CTRLA.reg = data;
     fc8:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     fca:	69e3      	ldr	r3, [r4, #28]
     fcc:	079b      	lsls	r3, r3, #30
     fce:	d1fc      	bne.n	fca <_usart_init+0x5e>
	hri_sercomusart_write_CTRLB_reg(hw, _usarts[i].ctrl_b);
     fd0:	0083      	lsls	r3, r0, #2
     fd2:	181b      	adds	r3, r3, r0
     fd4:	009a      	lsls	r2, r3, #2
     fd6:	4b20      	ldr	r3, [pc, #128]	; (1058 <_usart_init+0xec>)
     fd8:	189b      	adds	r3, r3, r2
     fda:	689b      	ldr	r3, [r3, #8]
	((Sercom *)hw)->USART.CTRLB.reg = data;
     fdc:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     fde:	69e3      	ldr	r3, [r4, #28]
     fe0:	075b      	lsls	r3, r3, #29
     fe2:	d1fc      	bne.n	fde <_usart_init+0x72>
	if ((_usarts[i].ctrl_a & SERCOM_USART_CTRLA_SAMPR(0x1)) || (_usarts[i].ctrl_a & SERCOM_USART_CTRLA_SAMPR(0x3))) {
     fe4:	0083      	lsls	r3, r0, #2
     fe6:	181b      	adds	r3, r3, r0
     fe8:	009a      	lsls	r2, r3, #2
     fea:	4b1b      	ldr	r3, [pc, #108]	; (1058 <_usart_init+0xec>)
     fec:	189b      	adds	r3, r3, r2
     fee:	685b      	ldr	r3, [r3, #4]
     ff0:	049a      	lsls	r2, r3, #18
     ff2:	d40b      	bmi.n	100c <_usart_init+0xa0>
     ff4:	22c0      	movs	r2, #192	; 0xc0
     ff6:	01d2      	lsls	r2, r2, #7
     ff8:	4213      	tst	r3, r2
     ffa:	d107      	bne.n	100c <_usart_init+0xa0>
		hri_sercomusart_write_BAUD_reg(hw, _usarts[i].baud);
     ffc:	0083      	lsls	r3, r0, #2
     ffe:	181b      	adds	r3, r3, r0
    1000:	009a      	lsls	r2, r3, #2
    1002:	4b15      	ldr	r3, [pc, #84]	; (1058 <_usart_init+0xec>)
    1004:	189b      	adds	r3, r3, r2
    1006:	899b      	ldrh	r3, [r3, #12]
	((Sercom *)hw)->USART.BAUD.reg = data;
    1008:	81a3      	strh	r3, [r4, #12]
    100a:	e015      	b.n	1038 <_usart_init+0xcc>
		((Sercom *)hw)->USART.BAUD.FRAC.BAUD = _usarts[i].baud;
    100c:	0083      	lsls	r3, r0, #2
    100e:	181b      	adds	r3, r3, r0
    1010:	009a      	lsls	r2, r3, #2
    1012:	4911      	ldr	r1, [pc, #68]	; (1058 <_usart_init+0xec>)
    1014:	1889      	adds	r1, r1, r2
    1016:	898a      	ldrh	r2, [r1, #12]
    1018:	89a3      	ldrh	r3, [r4, #12]
    101a:	04d2      	lsls	r2, r2, #19
    101c:	0cd2      	lsrs	r2, r2, #19
    101e:	0b5b      	lsrs	r3, r3, #13
    1020:	035b      	lsls	r3, r3, #13
    1022:	4313      	orrs	r3, r2
    1024:	81a3      	strh	r3, [r4, #12]
		((Sercom *)hw)->USART.BAUD.FRAC.FP   = _usarts[i].fractional;
    1026:	7b8b      	ldrb	r3, [r1, #14]
    1028:	2207      	movs	r2, #7
    102a:	401a      	ands	r2, r3
    102c:	89a3      	ldrh	r3, [r4, #12]
    102e:	0352      	lsls	r2, r2, #13
    1030:	04db      	lsls	r3, r3, #19
    1032:	0cdb      	lsrs	r3, r3, #19
    1034:	4313      	orrs	r3, r2
    1036:	81a3      	strh	r3, [r4, #12]
	hri_sercomusart_write_RXPL_reg(hw, _usarts[i].rxpl);
    1038:	4a07      	ldr	r2, [pc, #28]	; (1058 <_usart_init+0xec>)
    103a:	0083      	lsls	r3, r0, #2
    103c:	181d      	adds	r5, r3, r0
    103e:	00a9      	lsls	r1, r5, #2
    1040:	000d      	movs	r5, r1
    1042:	1851      	adds	r1, r2, r1
    1044:	7bc9      	ldrb	r1, [r1, #15]
	((Sercom *)hw)->USART.RXPL.reg = data;
    1046:	73a1      	strb	r1, [r4, #14]
	hri_sercomusart_write_DBGCTRL_reg(hw, _usarts[i].debug_ctrl);
    1048:	1952      	adds	r2, r2, r5
    104a:	7c12      	ldrb	r2, [r2, #16]
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
    104c:	2330      	movs	r3, #48	; 0x30
    104e:	54e2      	strb	r2, [r4, r3]
}
    1050:	2000      	movs	r0, #0
    1052:	bd70      	pop	{r4, r5, r6, pc}
    1054:	00000f29 	.word	0x00000f29
    1058:	00005824 	.word	0x00005824

0000105c <_usart_async_init>:
{
    105c:	b570      	push	{r4, r5, r6, lr}
    105e:	0006      	movs	r6, r0
    1060:	000c      	movs	r4, r1
	ASSERT(device);
    1062:	1e43      	subs	r3, r0, #1
    1064:	4198      	sbcs	r0, r3
    1066:	b2c0      	uxtb	r0, r0
    1068:	22c4      	movs	r2, #196	; 0xc4
    106a:	4919      	ldr	r1, [pc, #100]	; (10d0 <_usart_async_init+0x74>)
    106c:	4b19      	ldr	r3, [pc, #100]	; (10d4 <_usart_async_init+0x78>)
    106e:	4798      	blx	r3
	init_status = _usart_init(hw);
    1070:	0020      	movs	r0, r4
    1072:	4b19      	ldr	r3, [pc, #100]	; (10d8 <_usart_async_init+0x7c>)
    1074:	4798      	blx	r3
    1076:	1e05      	subs	r5, r0, #0
	if (init_status) {
    1078:	d001      	beq.n	107e <_usart_async_init+0x22>
}
    107a:	0028      	movs	r0, r5
    107c:	bd70      	pop	{r4, r5, r6, pc}
	device->hw = hw;
    107e:	61b4      	str	r4, [r6, #24]
	_sercom_init_irq_param(hw, (void *)device);
    1080:	0031      	movs	r1, r6
    1082:	0020      	movs	r0, r4
    1084:	4b15      	ldr	r3, [pc, #84]	; (10dc <_usart_async_init+0x80>)
    1086:	4798      	blx	r3
	NVIC_DisableIRQ((IRQn_Type)_sercom_get_irq_num(hw));
    1088:	0020      	movs	r0, r4
    108a:	4b15      	ldr	r3, [pc, #84]	; (10e0 <_usart_async_init+0x84>)
    108c:	4798      	blx	r3
    108e:	b243      	sxtb	r3, r0
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
    1090:	2b00      	cmp	r3, #0
    1092:	db0a      	blt.n	10aa <_usart_async_init+0x4e>
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1094:	211f      	movs	r1, #31
    1096:	4001      	ands	r1, r0
    1098:	2201      	movs	r2, #1
    109a:	408a      	lsls	r2, r1
    109c:	2180      	movs	r1, #128	; 0x80
    109e:	4c11      	ldr	r4, [pc, #68]	; (10e4 <_usart_async_init+0x88>)
    10a0:	5062      	str	r2, [r4, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    10a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    10a6:	f3bf 8f6f 	isb	sy
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
    10aa:	2b00      	cmp	r3, #0
    10ac:	db07      	blt.n	10be <_usart_async_init+0x62>
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    10ae:	211f      	movs	r1, #31
    10b0:	4001      	ands	r1, r0
    10b2:	2201      	movs	r2, #1
    10b4:	408a      	lsls	r2, r1
    10b6:	21c0      	movs	r1, #192	; 0xc0
    10b8:	0049      	lsls	r1, r1, #1
    10ba:	4c0a      	ldr	r4, [pc, #40]	; (10e4 <_usart_async_init+0x88>)
    10bc:	5062      	str	r2, [r4, r1]
  if ((int32_t)(IRQn) >= 0)
    10be:	2b00      	cmp	r3, #0
    10c0:	dbdb      	blt.n	107a <_usart_async_init+0x1e>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    10c2:	231f      	movs	r3, #31
    10c4:	4018      	ands	r0, r3
    10c6:	3b1e      	subs	r3, #30
    10c8:	4083      	lsls	r3, r0
    10ca:	4a06      	ldr	r2, [pc, #24]	; (10e4 <_usart_async_init+0x88>)
    10cc:	6013      	str	r3, [r2, #0]
    10ce:	e7d4      	b.n	107a <_usart_async_init+0x1e>
    10d0:	00005874 	.word	0x00005874
    10d4:	00000bbd 	.word	0x00000bbd
    10d8:	00000f6d 	.word	0x00000f6d
    10dc:	00000f01 	.word	0x00000f01
    10e0:	00000f19 	.word	0x00000f19
    10e4:	e000e100 	.word	0xe000e100

000010e8 <_usart_async_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
    10e8:	6982      	ldr	r2, [r0, #24]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    10ea:	6813      	ldr	r3, [r2, #0]
    10ec:	2102      	movs	r1, #2
    10ee:	430b      	orrs	r3, r1
    10f0:	6013      	str	r3, [r2, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    10f2:	69d3      	ldr	r3, [r2, #28]
    10f4:	079b      	lsls	r3, r3, #30
    10f6:	d1fc      	bne.n	10f2 <_usart_async_enable+0xa>
}
    10f8:	4770      	bx	lr

000010fa <_usart_async_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
    10fa:	6983      	ldr	r3, [r0, #24]
    10fc:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
    10fe:	8519      	strh	r1, [r3, #40]	; 0x28
}
    1100:	4770      	bx	lr

00001102 <_usart_async_enable_byte_sent_irq>:
	hri_sercomusart_set_INTEN_DRE_bit(device->hw);
    1102:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
    1104:	2201      	movs	r2, #1
    1106:	759a      	strb	r2, [r3, #22]
}
    1108:	4770      	bx	lr

0000110a <_usart_async_enable_tx_done_irq>:
	hri_sercomusart_set_INTEN_TXC_bit(device->hw);
    110a:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
    110c:	2202      	movs	r2, #2
    110e:	759a      	strb	r2, [r3, #22]
}
    1110:	4770      	bx	lr
	...

00001114 <_usart_async_set_irq_state>:
{
    1114:	b570      	push	{r4, r5, r6, lr}
    1116:	0004      	movs	r4, r0
    1118:	000d      	movs	r5, r1
    111a:	0016      	movs	r6, r2
	ASSERT(device);
    111c:	1e43      	subs	r3, r0, #1
    111e:	4198      	sbcs	r0, r3
    1120:	b2c0      	uxtb	r0, r0
    1122:	4a17      	ldr	r2, [pc, #92]	; (1180 <_usart_async_set_irq_state+0x6c>)
    1124:	4917      	ldr	r1, [pc, #92]	; (1184 <_usart_async_set_irq_state+0x70>)
    1126:	4b18      	ldr	r3, [pc, #96]	; (1188 <_usart_async_set_irq_state+0x74>)
    1128:	4798      	blx	r3
	if (USART_ASYNC_BYTE_SENT == type || USART_ASYNC_TX_DONE == type) {
    112a:	2d00      	cmp	r5, #0
    112c:	d00b      	beq.n	1146 <_usart_async_set_irq_state+0x32>
    112e:	2d02      	cmp	r5, #2
    1130:	d009      	beq.n	1146 <_usart_async_set_irq_state+0x32>
	} else if (USART_ASYNC_RX_DONE == type) {
    1132:	2d01      	cmp	r5, #1
    1134:	d018      	beq.n	1168 <_usart_async_set_irq_state+0x54>
	} else if (USART_ASYNC_ERROR == type) {
    1136:	2d03      	cmp	r5, #3
    1138:	d10f      	bne.n	115a <_usart_async_set_irq_state+0x46>
		hri_sercomusart_write_INTEN_ERROR_bit(device->hw, state);
    113a:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    113c:	2e00      	cmp	r6, #0
    113e:	d01c      	beq.n	117a <_usart_async_set_irq_state+0x66>
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_ERROR;
    1140:	2280      	movs	r2, #128	; 0x80
    1142:	759a      	strb	r2, [r3, #22]
}
    1144:	e009      	b.n	115a <_usart_async_set_irq_state+0x46>
		hri_sercomusart_write_INTEN_DRE_bit(device->hw, state);
    1146:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    1148:	2e00      	cmp	r6, #0
    114a:	d107      	bne.n	115c <_usart_async_set_irq_state+0x48>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_DRE;
    114c:	2201      	movs	r2, #1
    114e:	751a      	strb	r2, [r3, #20]
		hri_sercomusart_write_INTEN_TXC_bit(device->hw, state);
    1150:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    1152:	2e00      	cmp	r6, #0
    1154:	d105      	bne.n	1162 <_usart_async_set_irq_state+0x4e>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_TXC;
    1156:	2202      	movs	r2, #2
    1158:	751a      	strb	r2, [r3, #20]
}
    115a:	bd70      	pop	{r4, r5, r6, pc}
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
    115c:	2201      	movs	r2, #1
    115e:	759a      	strb	r2, [r3, #22]
    1160:	e7f6      	b.n	1150 <_usart_async_set_irq_state+0x3c>
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
    1162:	2202      	movs	r2, #2
    1164:	759a      	strb	r2, [r3, #22]
    1166:	e7f8      	b.n	115a <_usart_async_set_irq_state+0x46>
		hri_sercomusart_write_INTEN_RXC_bit(device->hw, state);
    1168:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    116a:	2e00      	cmp	r6, #0
    116c:	d102      	bne.n	1174 <_usart_async_set_irq_state+0x60>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_RXC;
    116e:	2204      	movs	r2, #4
    1170:	751a      	strb	r2, [r3, #20]
    1172:	e7f2      	b.n	115a <_usart_async_set_irq_state+0x46>
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_RXC;
    1174:	2204      	movs	r2, #4
    1176:	759a      	strb	r2, [r3, #22]
    1178:	e7ef      	b.n	115a <_usart_async_set_irq_state+0x46>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_ERROR;
    117a:	2280      	movs	r2, #128	; 0x80
    117c:	751a      	strb	r2, [r3, #20]
    117e:	e7ec      	b.n	115a <_usart_async_set_irq_state+0x46>
    1180:	0000021e 	.word	0x0000021e
    1184:	00005874 	.word	0x00005874
    1188:	00000bbd 	.word	0x00000bbd

0000118c <SERCOM3_Handler>:

	return NULL;
}

void SERCOM3_Handler(void)
{
    118c:	b510      	push	{r4, lr}
	_sercom_usart_interrupt_handler(_sercom3_dev);
    118e:	4b02      	ldr	r3, [pc, #8]	; (1198 <SERCOM3_Handler+0xc>)
    1190:	6818      	ldr	r0, [r3, #0]
    1192:	4b02      	ldr	r3, [pc, #8]	; (119c <SERCOM3_Handler+0x10>)
    1194:	4798      	blx	r3
}
    1196:	bd10      	pop	{r4, pc}
    1198:	20000208 	.word	0x20000208
    119c:	00000e9d 	.word	0x00000e9d

000011a0 <_sysctrl_init_sources>:
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    11a0:	4b0f      	ldr	r3, [pc, #60]	; (11e0 <_sysctrl_init_sources+0x40>)
    11a2:	6a19      	ldr	r1, [r3, #32]
	tmp = (tmp & SYSCTRL_OSC8M_CALIB_Msk) >> SYSCTRL_OSC8M_CALIB_Pos;
    11a4:	0c09      	lsrs	r1, r1, #16
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_FRANGE_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    11a6:	6a1a      	ldr	r2, [r3, #32]

#if CONF_OSC8M_CONFIG == 1
	calib = hri_sysctrl_read_OSC8M_CALIB_bf(hw);

	hri_sysctrl_write_OSC8M_reg(hw,
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    11a8:	0f92      	lsrs	r2, r2, #30
    11aa:	0792      	lsls	r2, r2, #30
#if CONF_OSC8M_OVERWRITE_CALIBRATION == 1
	                                SYSCTRL_OSC8M_CALIB(CONF_OSC8M_CALIB) |
#else
	                                SYSCTRL_OSC8M_CALIB(calib) |
    11ac:	0409      	lsls	r1, r1, #16
    11ae:	480d      	ldr	r0, [pc, #52]	; (11e4 <_sysctrl_init_sources+0x44>)
    11b0:	4001      	ands	r1, r0
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    11b2:	430a      	orrs	r2, r1
	hri_sysctrl_write_OSC8M_reg(hw,
    11b4:	490c      	ldr	r1, [pc, #48]	; (11e8 <_sysctrl_init_sources+0x48>)
    11b6:	430a      	orrs	r2, r1
}

static inline void hri_sysctrl_write_OSC8M_reg(const void *const hw, hri_sysctrl_osc8m_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSC8M.reg = data;
    11b8:	621a      	str	r2, [r3, #32]
	((Sysctrl *)hw)->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
    11ba:	699a      	ldr	r2, [r3, #24]
    11bc:	2102      	movs	r1, #2
    11be:	430a      	orrs	r2, r1
    11c0:	619a      	str	r2, [r3, #24]
	tmp = ((Sysctrl *)hw)->OSCULP32K.reg;
    11c2:	7f1a      	ldrb	r2, [r3, #28]
	tmp = (tmp & SYSCTRL_OSCULP32K_CALIB_Msk) >> SYSCTRL_OSCULP32K_CALIB_Pos;
    11c4:	311d      	adds	r1, #29
    11c6:	400a      	ands	r2, r1
	((Sysctrl *)hw)->OSCULP32K.reg = data;
    11c8:	771a      	strb	r2, [r3, #28]
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_OSC8MRDY) >> SYSCTRL_PCLKSR_OSC8MRDY_Pos;
    11ca:	4b05      	ldr	r3, [pc, #20]	; (11e0 <_sysctrl_init_sources+0x40>)
    11cc:	68db      	ldr	r3, [r3, #12]
#endif
#endif

#if CONF_OSC8M_CONFIG == 1
#if CONF_OSC8M_ENABLE == 1
	while (!hri_sysctrl_get_PCLKSR_OSC8MRDY_bit(hw))
    11ce:	071b      	lsls	r3, r3, #28
    11d0:	d5fb      	bpl.n	11ca <_sysctrl_init_sources+0x2a>
	((Sysctrl *)hw)->OSC8M.reg |= SYSCTRL_OSC8M_ONDEMAND;
    11d2:	4a03      	ldr	r2, [pc, #12]	; (11e0 <_sysctrl_init_sources+0x40>)
    11d4:	6a13      	ldr	r3, [r2, #32]
    11d6:	2180      	movs	r1, #128	; 0x80
    11d8:	430b      	orrs	r3, r1
    11da:	6213      	str	r3, [r2, #32]
	hri_sysctrl_set_OSC8M_ONDEMAND_bit(hw);
#endif
#endif

	(void)calib, (void)hw;
}
    11dc:	4770      	bx	lr
    11de:	46c0      	nop			; (mov r8, r8)
    11e0:	40000800 	.word	0x40000800
    11e4:	0fff0000 	.word	0x0fff0000
    11e8:	00000302 	.word	0x00000302

000011ec <_sysctrl_init_referenced_generators>:
	((Sysctrl *)hw)->OSC32K.reg &= ~SYSCTRL_OSC32K_ENABLE;
    11ec:	4a02      	ldr	r2, [pc, #8]	; (11f8 <_sysctrl_init_referenced_generators+0xc>)
    11ee:	6993      	ldr	r3, [r2, #24]
    11f0:	2102      	movs	r1, #2
    11f2:	438b      	bics	r3, r1
    11f4:	6193      	str	r3, [r2, #24]
	/* Disable after all possible configurations needs sync written. */
	hri_sysctrl_clear_OSC32K_ENABLE_bit(hw);
#endif

	(void)hw;
}
    11f6:	4770      	bx	lr
    11f8:	40000800 	.word	0x40000800

000011fc <serial_tx_cb>:
  mu_sched_from_isr(&s_sched, &s_console_event);
}

static void serial_tx_cb(const struct usart_async_descriptor *const descr) {
  (void)descr;
  asm("nop");
    11fc:	46c0      	nop			; (mov r8, r8)
}
    11fe:	4770      	bx	lr

00001200 <serial_err_cb>:

static void serial_err_cb(const struct usart_async_descriptor *const descr) {
  (void)descr;
  asm("nop");
    1200:	46c0      	nop			; (mov r8, r8)
}
    1202:	4770      	bx	lr

00001204 <serial_rx_cb>:
static void serial_rx_cb(const struct usart_async_descriptor *const descr) {
    1204:	b510      	push	{r4, lr}
  mu_sched_from_isr(&s_sched, &s_console_event);
    1206:	4903      	ldr	r1, [pc, #12]	; (1214 <serial_rx_cb+0x10>)
    1208:	0008      	movs	r0, r1
    120a:	3024      	adds	r0, #36	; 0x24
    120c:	4b02      	ldr	r3, [pc, #8]	; (1218 <serial_rx_cb+0x14>)
    120e:	4798      	blx	r3
}
    1210:	bd10      	pop	{r4, pc}
    1212:	46c0      	nop			; (mov r8, r8)
    1214:	2000020c 	.word	0x2000020c
    1218:	000004fd 	.word	0x000004fd

0000121c <char_read>:
static char char_read(void) {
    121c:	b500      	push	{lr}
    121e:	b083      	sub	sp, #12
  while (ERR_TIMEOUT == io_read(&EDBG_COM.io, &tmp, 1)) {
    1220:	2201      	movs	r2, #1
    1222:	466b      	mov	r3, sp
    1224:	1dd9      	adds	r1, r3, #7
    1226:	4804      	ldr	r0, [pc, #16]	; (1238 <char_read+0x1c>)
    1228:	4b04      	ldr	r3, [pc, #16]	; (123c <char_read+0x20>)
    122a:	4798      	blx	r3
    122c:	3008      	adds	r0, #8
    122e:	d0f7      	beq.n	1220 <char_read+0x4>
  return (char)tmp;
    1230:	466b      	mov	r3, sp
    1232:	79d8      	ldrb	r0, [r3, #7]
}
    1234:	b003      	add	sp, #12
    1236:	bd00      	pop	{pc}
    1238:	20000344 	.word	0x20000344
    123c:	000008a9 	.word	0x000008a9

00001240 <str_write>:
static void str_write(const char *s) {
    1240:	b510      	push	{r4, lr}
    1242:	0004      	movs	r4, r0
  io_write(s_usart_io, (const uint8_t *)s, strlen(s));
    1244:	4b05      	ldr	r3, [pc, #20]	; (125c <str_write+0x1c>)
    1246:	4798      	blx	r3
    1248:	b282      	uxth	r2, r0
    124a:	4b05      	ldr	r3, [pc, #20]	; (1260 <str_write+0x20>)
    124c:	6c58      	ldr	r0, [r3, #68]	; 0x44
    124e:	0021      	movs	r1, r4
    1250:	4b04      	ldr	r3, [pc, #16]	; (1264 <str_write+0x24>)
    1252:	4798      	blx	r3
  delay_ms(10);  // use sync output instead?
    1254:	200a      	movs	r0, #10
    1256:	4b04      	ldr	r3, [pc, #16]	; (1268 <str_write+0x28>)
    1258:	4798      	blx	r3
}
    125a:	bd10      	pop	{r4, pc}
    125c:	00003735 	.word	0x00003735
    1260:	2000020c 	.word	0x2000020c
    1264:	00000871 	.word	0x00000871
    1268:	00000851 	.word	0x00000851

0000126c <char_is_available>:
static bool char_is_available(void) {
    126c:	b510      	push	{r4, lr}
  return ringbuffer_num(&EDBG_COM.rx) != 0;
    126e:	4803      	ldr	r0, [pc, #12]	; (127c <char_is_available+0x10>)
    1270:	4b03      	ldr	r3, [pc, #12]	; (1280 <char_is_available+0x14>)
    1272:	4798      	blx	r3
    1274:	1e43      	subs	r3, r0, #1
    1276:	4198      	sbcs	r0, r3
    1278:	b2c0      	uxtb	r0, r0
}
    127a:	bd10      	pop	{r4, pc}
    127c:	20000378 	.word	0x20000378
    1280:	00000c9d 	.word	0x00000c9d

00001284 <task_led_pause>:
static void task_led_pause(bool pause) {
    1284:	b530      	push	{r4, r5, lr}
    1286:	b083      	sub	sp, #12
  if (pause) {
    1288:	2800      	cmp	r0, #0
    128a:	d119      	bne.n	12c0 <task_led_pause+0x3c>
  } else if (!mu_sched_has_event(&s_sched, &s_led_event)) {
    128c:	4810      	ldr	r0, [pc, #64]	; (12d0 <task_led_pause+0x4c>)
    128e:	0001      	movs	r1, r0
    1290:	3148      	adds	r1, #72	; 0x48
    1292:	3024      	adds	r0, #36	; 0x24
    1294:	4b0f      	ldr	r3, [pc, #60]	; (12d4 <task_led_pause+0x50>)
    1296:	4798      	blx	r3
    1298:	2800      	cmp	r0, #0
    129a:	d117      	bne.n	12cc <task_led_pause+0x48>
    mu_time_t now = mu_time_now();
    129c:	4b0e      	ldr	r3, [pc, #56]	; (12d8 <task_led_pause+0x54>)
    129e:	4798      	blx	r3
    12a0:	0001      	movs	r1, r0
    mu_sched_add(&s_sched,
    12a2:	4c0b      	ldr	r4, [pc, #44]	; (12d0 <task_led_pause+0x4c>)
    12a4:	0020      	movs	r0, r4
    12a6:	3048      	adds	r0, #72	; 0x48
    12a8:	4b0c      	ldr	r3, [pc, #48]	; (12dc <task_led_pause+0x58>)
    12aa:	9300      	str	r3, [sp, #0]
    12ac:	2300      	movs	r3, #0
    12ae:	4a0c      	ldr	r2, [pc, #48]	; (12e0 <task_led_pause+0x5c>)
    12b0:	4d0c      	ldr	r5, [pc, #48]	; (12e4 <task_led_pause+0x60>)
    12b2:	47a8      	blx	r5
    12b4:	0001      	movs	r1, r0
    12b6:	0020      	movs	r0, r4
    12b8:	3024      	adds	r0, #36	; 0x24
    12ba:	4b0b      	ldr	r3, [pc, #44]	; (12e8 <task_led_pause+0x64>)
    12bc:	4798      	blx	r3
}
    12be:	e005      	b.n	12cc <task_led_pause+0x48>
    mu_sched_remove(&s_sched, &s_led_event);
    12c0:	4803      	ldr	r0, [pc, #12]	; (12d0 <task_led_pause+0x4c>)
    12c2:	0001      	movs	r1, r0
    12c4:	3148      	adds	r1, #72	; 0x48
    12c6:	3024      	adds	r0, #36	; 0x24
    12c8:	4b08      	ldr	r3, [pc, #32]	; (12ec <task_led_pause+0x68>)
    12ca:	4798      	blx	r3
}
    12cc:	b003      	add	sp, #12
    12ce:	bd30      	pop	{r4, r5, pc}
    12d0:	2000020c 	.word	0x2000020c
    12d4:	000003c5 	.word	0x000003c5
    12d8:	0000058d 	.word	0x0000058d
    12dc:	0000589c 	.word	0x0000589c
    12e0:	000013ed 	.word	0x000013ed
    12e4:	000001e1 	.word	0x000001e1
    12e8:	00000409 	.word	0x00000409
    12ec:	000004cd 	.word	0x000004cd

000012f0 <task_monitor_pause>:
static void task_monitor_pause(bool pause) {
    12f0:	b530      	push	{r4, r5, lr}
    12f2:	b083      	sub	sp, #12
  if (pause) {
    12f4:	2800      	cmp	r0, #0
    12f6:	d119      	bne.n	132c <task_monitor_pause+0x3c>
  } else if (!mu_sched_has_event(&s_sched, &s_monitor_event)) {
    12f8:	4810      	ldr	r0, [pc, #64]	; (133c <task_monitor_pause+0x4c>)
    12fa:	0001      	movs	r1, r0
    12fc:	316c      	adds	r1, #108	; 0x6c
    12fe:	3024      	adds	r0, #36	; 0x24
    1300:	4b0f      	ldr	r3, [pc, #60]	; (1340 <task_monitor_pause+0x50>)
    1302:	4798      	blx	r3
    1304:	2800      	cmp	r0, #0
    1306:	d117      	bne.n	1338 <task_monitor_pause+0x48>
    mu_time_t now = mu_time_now();
    1308:	4b0e      	ldr	r3, [pc, #56]	; (1344 <task_monitor_pause+0x54>)
    130a:	4798      	blx	r3
    130c:	0001      	movs	r1, r0
    mu_sched_add(&s_sched,
    130e:	4c0b      	ldr	r4, [pc, #44]	; (133c <task_monitor_pause+0x4c>)
    1310:	0020      	movs	r0, r4
    1312:	306c      	adds	r0, #108	; 0x6c
    1314:	4b0c      	ldr	r3, [pc, #48]	; (1348 <task_monitor_pause+0x58>)
    1316:	9300      	str	r3, [sp, #0]
    1318:	2300      	movs	r3, #0
    131a:	4a0c      	ldr	r2, [pc, #48]	; (134c <task_monitor_pause+0x5c>)
    131c:	4d0c      	ldr	r5, [pc, #48]	; (1350 <task_monitor_pause+0x60>)
    131e:	47a8      	blx	r5
    1320:	0001      	movs	r1, r0
    1322:	0020      	movs	r0, r4
    1324:	3024      	adds	r0, #36	; 0x24
    1326:	4b0b      	ldr	r3, [pc, #44]	; (1354 <task_monitor_pause+0x64>)
    1328:	4798      	blx	r3
}
    132a:	e005      	b.n	1338 <task_monitor_pause+0x48>
    mu_sched_remove(&s_sched, &s_monitor_event);
    132c:	4803      	ldr	r0, [pc, #12]	; (133c <task_monitor_pause+0x4c>)
    132e:	0001      	movs	r1, r0
    1330:	316c      	adds	r1, #108	; 0x6c
    1332:	3024      	adds	r0, #36	; 0x24
    1334:	4b08      	ldr	r3, [pc, #32]	; (1358 <task_monitor_pause+0x68>)
    1336:	4798      	blx	r3
}
    1338:	b003      	add	sp, #12
    133a:	bd30      	pop	{r4, r5, pc}
    133c:	2000020c 	.word	0x2000020c
    1340:	000003c5 	.word	0x000003c5
    1344:	0000058d 	.word	0x0000058d
    1348:	000058a0 	.word	0x000058a0
    134c:	00001591 	.word	0x00001591
    1350:	000001e1 	.word	0x000001e1
    1354:	00000409 	.word	0x00000409
    1358:	000004cd 	.word	0x000004cd

0000135c <task_console>:
static void task_console(void *self, void *arg) {
    135c:	b510      	push	{r4, lr}
    135e:	b082      	sub	sp, #8
  while(char_is_available()) {
    1360:	e00c      	b.n	137c <task_console+0x20>
    switch (ch[0]) {
    1362:	284d      	cmp	r0, #77	; 0x4d
    1364:	d12c      	bne.n	13c0 <task_console+0x64>
      task_monitor_pause(true);
    1366:	2001      	movs	r0, #1
    1368:	4b17      	ldr	r3, [pc, #92]	; (13c8 <task_console+0x6c>)
    136a:	4798      	blx	r3
      str = ("- Monitor task suspended.\r\n");
    136c:	4817      	ldr	r0, [pc, #92]	; (13cc <task_console+0x70>)
      break;
    136e:	e003      	b.n	1378 <task_console+0x1c>
      task_led_pause(false);
    1370:	2000      	movs	r0, #0
    1372:	4b17      	ldr	r3, [pc, #92]	; (13d0 <task_console+0x74>)
    1374:	4798      	blx	r3
      str = ("- LED blink task active.\r\n");
    1376:	4817      	ldr	r0, [pc, #92]	; (13d4 <task_console+0x78>)
    str_write(str);
    1378:	4b17      	ldr	r3, [pc, #92]	; (13d8 <task_console+0x7c>)
    137a:	4798      	blx	r3
  while(char_is_available()) {
    137c:	4b17      	ldr	r3, [pc, #92]	; (13dc <task_console+0x80>)
    137e:	4798      	blx	r3
    1380:	2800      	cmp	r0, #0
    1382:	d01f      	beq.n	13c4 <task_console+0x68>
    char ch[2] = {0, 0};
    1384:	ac01      	add	r4, sp, #4
    1386:	2300      	movs	r3, #0
    1388:	7023      	strb	r3, [r4, #0]
    138a:	7063      	strb	r3, [r4, #1]
    ch[0] = char_read();
    138c:	4b14      	ldr	r3, [pc, #80]	; (13e0 <task_console+0x84>)
    138e:	4798      	blx	r3
    1390:	7020      	strb	r0, [r4, #0]
    switch (ch[0]) {
    1392:	2861      	cmp	r0, #97	; 0x61
    1394:	d0ec      	beq.n	1370 <task_console+0x14>
    1396:	d9e4      	bls.n	1362 <task_console+0x6>
    1398:	286d      	cmp	r0, #109	; 0x6d
    139a:	d00c      	beq.n	13b6 <task_console+0x5a>
    139c:	2873      	cmp	r0, #115	; 0x73
    139e:	d10f      	bne.n	13c0 <task_console+0x64>
      task_led_pause(true);
    13a0:	2001      	movs	r0, #1
    13a2:	4b0b      	ldr	r3, [pc, #44]	; (13d0 <task_console+0x74>)
    13a4:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    13a6:	2180      	movs	r1, #128	; 0x80
    13a8:	05c9      	lsls	r1, r1, #23
    13aa:	2398      	movs	r3, #152	; 0x98
    13ac:	22c0      	movs	r2, #192	; 0xc0
    13ae:	05d2      	lsls	r2, r2, #23
    13b0:	50d1      	str	r1, [r2, r3]
      str = ("- LED OFF and blink task suspended.\r\n");
    13b2:	480c      	ldr	r0, [pc, #48]	; (13e4 <task_console+0x88>)
    13b4:	e7e0      	b.n	1378 <task_console+0x1c>
      task_monitor_pause(false);
    13b6:	2000      	movs	r0, #0
    13b8:	4b03      	ldr	r3, [pc, #12]	; (13c8 <task_console+0x6c>)
    13ba:	4798      	blx	r3
      str = ("- Monitor task active.\r\n");
    13bc:	480a      	ldr	r0, [pc, #40]	; (13e8 <task_console+0x8c>)
      break;
    13be:	e7db      	b.n	1378 <task_console+0x1c>
      str = ch;
    13c0:	a801      	add	r0, sp, #4
    13c2:	e7d9      	b.n	1378 <task_console+0x1c>
}
    13c4:	b002      	add	sp, #8
    13c6:	bd10      	pop	{r4, pc}
    13c8:	000012f1 	.word	0x000012f1
    13cc:	00005908 	.word	0x00005908
    13d0:	00001285 	.word	0x00001285
    13d4:	000058a8 	.word	0x000058a8
    13d8:	00001241 	.word	0x00001241
    13dc:	0000126d 	.word	0x0000126d
    13e0:	0000121d 	.word	0x0000121d
    13e4:	000058c4 	.word	0x000058c4
    13e8:	000058ec 	.word	0x000058ec

000013ec <task_led>:
static void task_led(void *self, void *arg) {
    13ec:	b570      	push	{r4, r5, r6, lr}
	((Port *)hw)->Group[submodule_index].OUTTGL.reg = mask;
    13ee:	2180      	movs	r1, #128	; 0x80
    13f0:	05c9      	lsls	r1, r1, #23
    13f2:	239c      	movs	r3, #156	; 0x9c
    13f4:	22c0      	movs	r2, #192	; 0xc0
    13f6:	05d2      	lsls	r2, r2, #23
    13f8:	50d1      	str	r1, [r2, r3]
  s_led_event.time = mu_time_offset(s_led_event.time,
    13fa:	4c09      	ldr	r4, [pc, #36]	; (1420 <task_led+0x34>)
    13fc:	6e65      	ldr	r5, [r4, #100]	; 0x64
    13fe:	2000      	movs	r0, #0
    1400:	4908      	ldr	r1, [pc, #32]	; (1424 <task_led+0x38>)
    1402:	4b09      	ldr	r3, [pc, #36]	; (1428 <task_led+0x3c>)
    1404:	4798      	blx	r3
    1406:	0001      	movs	r1, r0
    1408:	0028      	movs	r0, r5
    140a:	4b08      	ldr	r3, [pc, #32]	; (142c <task_led+0x40>)
    140c:	4798      	blx	r3
    140e:	6660      	str	r0, [r4, #100]	; 0x64
  mu_sched_add(&s_sched, &s_led_event);
    1410:	0021      	movs	r1, r4
    1412:	3148      	adds	r1, #72	; 0x48
    1414:	0020      	movs	r0, r4
    1416:	3024      	adds	r0, #36	; 0x24
    1418:	4b05      	ldr	r3, [pc, #20]	; (1430 <task_led+0x44>)
    141a:	4798      	blx	r3
}
    141c:	bd70      	pop	{r4, r5, r6, pc}
    141e:	46c0      	nop			; (mov r8, r8)
    1420:	2000020c 	.word	0x2000020c
    1424:	3fe00000 	.word	0x3fe00000
    1428:	000005bd 	.word	0x000005bd
    142c:	00000599 	.word	0x00000599
    1430:	00000409 	.word	0x00000409

00001434 <event_status>:
static char event_status(mu_evt_t *evt) {
    1434:	b510      	push	{r4, lr}
    1436:	0004      	movs	r4, r0
  if (mu_sched_current_event(&s_sched) == evt) {
    1438:	480e      	ldr	r0, [pc, #56]	; (1474 <event_status+0x40>)
    143a:	3024      	adds	r0, #36	; 0x24
    143c:	4b0e      	ldr	r3, [pc, #56]	; (1478 <event_status+0x44>)
    143e:	4798      	blx	r3
    1440:	42a0      	cmp	r0, r4
    1442:	d014      	beq.n	146e <event_status+0x3a>
  } else if (!mu_sched_has_event(&s_sched, evt)) {
    1444:	0021      	movs	r1, r4
    1446:	480b      	ldr	r0, [pc, #44]	; (1474 <event_status+0x40>)
    1448:	3024      	adds	r0, #36	; 0x24
    144a:	4b0c      	ldr	r3, [pc, #48]	; (147c <event_status+0x48>)
    144c:	4798      	blx	r3
    144e:	2800      	cmp	r0, #0
    1450:	d101      	bne.n	1456 <event_status+0x22>
    return 'I';   // this event is not scheduled
    1452:	2049      	movs	r0, #73	; 0x49
}
    1454:	bd10      	pop	{r4, pc}
  } else if (mu_evt_is_runnable(evt, mu_time_now())) {
    1456:	4b0a      	ldr	r3, [pc, #40]	; (1480 <event_status+0x4c>)
    1458:	4798      	blx	r3
    145a:	0001      	movs	r1, r0
    145c:	0020      	movs	r0, r4
    145e:	4b09      	ldr	r3, [pc, #36]	; (1484 <event_status+0x50>)
    1460:	4798      	blx	r3
    1462:	2800      	cmp	r0, #0
    1464:	d101      	bne.n	146a <event_status+0x36>
    return 'P';   // this event is in the schedule but its time hasn't arrived
    1466:	2050      	movs	r0, #80	; 0x50
    1468:	e7f4      	b.n	1454 <event_status+0x20>
    return 'R';   // this event is ready to run
    146a:	2052      	movs	r0, #82	; 0x52
    146c:	e7f2      	b.n	1454 <event_status+0x20>
    return 'A';   // this event is currently running
    146e:	2041      	movs	r0, #65	; 0x41
    1470:	e7f0      	b.n	1454 <event_status+0x20>
    1472:	46c0      	nop			; (mov r8, r8)
    1474:	2000020c 	.word	0x2000020c
    1478:	00000405 	.word	0x00000405
    147c:	000003c5 	.word	0x000003c5
    1480:	0000058d 	.word	0x0000058d
    1484:	0000024d 	.word	0x0000024d

00001488 <_os_show_statistics>:
static void _os_show_statistics(void) {
    1488:	b5f0      	push	{r4, r5, r6, r7, lr}
    148a:	46ce      	mov	lr, r9
    148c:	b500      	push	{lr}
    148e:	b08a      	sub	sp, #40	; 0x28
  sprintf(szList, "%c%s%c%s", 0x1B, "[1;1H", 0x1B, "[2J");
    1490:	4c2a      	ldr	r4, [pc, #168]	; (153c <_os_show_statistics+0xb4>)
    1492:	3410      	adds	r4, #16
    1494:	4b2a      	ldr	r3, [pc, #168]	; (1540 <_os_show_statistics+0xb8>)
    1496:	9301      	str	r3, [sp, #4]
    1498:	231b      	movs	r3, #27
    149a:	9300      	str	r3, [sp, #0]
    149c:	4b29      	ldr	r3, [pc, #164]	; (1544 <_os_show_statistics+0xbc>)
    149e:	221b      	movs	r2, #27
    14a0:	4929      	ldr	r1, [pc, #164]	; (1548 <_os_show_statistics+0xc0>)
    14a2:	0020      	movs	r0, r4
    14a4:	4e29      	ldr	r6, [pc, #164]	; (154c <_os_show_statistics+0xc4>)
    14a6:	47b0      	blx	r6
  str_write(szList);
    14a8:	0020      	movs	r0, r4
    14aa:	4d29      	ldr	r5, [pc, #164]	; (1550 <_os_show_statistics+0xc8>)
    14ac:	47a8      	blx	r5
          mu_sched_task_count(&s_sched) + 1);   // + 1 to account for current event
    14ae:	4829      	ldr	r0, [pc, #164]	; (1554 <_os_show_statistics+0xcc>)
    14b0:	3024      	adds	r0, #36	; 0x24
    14b2:	4b29      	ldr	r3, [pc, #164]	; (1558 <_os_show_statistics+0xd0>)
    14b4:	4798      	blx	r3
  sprintf(szList,
    14b6:	1c42      	adds	r2, r0, #1
    14b8:	4928      	ldr	r1, [pc, #160]	; (155c <_os_show_statistics+0xd4>)
    14ba:	0020      	movs	r0, r4
    14bc:	47b0      	blx	r6
  str_write("\r\n>     Task  State Calls Max Latency     Runtime");
    14be:	4828      	ldr	r0, [pc, #160]	; (1560 <_os_show_statistics+0xd8>)
    14c0:	47a8      	blx	r5
  str_write("\r\n***********************************************");
    14c2:	4828      	ldr	r0, [pc, #160]	; (1564 <_os_show_statistics+0xdc>)
    14c4:	47a8      	blx	r5
  for (int i=0; i<N_EVENTS; i++) {
    14c6:	2700      	movs	r7, #0
    14c8:	e02e      	b.n	1528 <_os_show_statistics+0xa0>
    evt = s_events[i];
    14ca:	00ba      	lsls	r2, r7, #2
    14cc:	4b26      	ldr	r3, [pc, #152]	; (1568 <_os_show_statistics+0xe0>)
    14ce:	58d6      	ldr	r6, [r2, r3]
    mu_task_t *task = &evt->task;
    14d0:	1d34      	adds	r4, r6, #4
    str_write("\r\n");
    14d2:	4826      	ldr	r0, [pc, #152]	; (156c <_os_show_statistics+0xe4>)
    14d4:	4b1e      	ldr	r3, [pc, #120]	; (1550 <_os_show_statistics+0xc8>)
    14d6:	4699      	mov	r9, r3
    14d8:	4798      	blx	r3
    snprintf(szList, 128, "%10s:     %c%6d  %10f  %10f",
    14da:	0020      	movs	r0, r4
    14dc:	4b24      	ldr	r3, [pc, #144]	; (1570 <_os_show_statistics+0xe8>)
    14de:	4798      	blx	r3
    14e0:	9007      	str	r0, [sp, #28]
             event_status(evt),
    14e2:	0030      	movs	r0, r6
    14e4:	4b23      	ldr	r3, [pc, #140]	; (1574 <_os_show_statistics+0xec>)
    14e6:	4798      	blx	r3
    14e8:	0006      	movs	r6, r0
    snprintf(szList, 128, "%10s:     %c%6d  %10f  %10f",
    14ea:	0020      	movs	r0, r4
    14ec:	4b22      	ldr	r3, [pc, #136]	; (1578 <_os_show_statistics+0xf0>)
    14ee:	4798      	blx	r3
    14f0:	0005      	movs	r5, r0
    14f2:	0020      	movs	r0, r4
    14f4:	4b21      	ldr	r3, [pc, #132]	; (157c <_os_show_statistics+0xf4>)
    14f6:	4798      	blx	r3
    14f8:	9008      	str	r0, [sp, #32]
    14fa:	9109      	str	r1, [sp, #36]	; 0x24
    14fc:	0020      	movs	r0, r4
    14fe:	4b20      	ldr	r3, [pc, #128]	; (1580 <_os_show_statistics+0xf8>)
    1500:	4798      	blx	r3
    1502:	4c0e      	ldr	r4, [pc, #56]	; (153c <_os_show_statistics+0xb4>)
    1504:	3410      	adds	r4, #16
    1506:	9004      	str	r0, [sp, #16]
    1508:	9105      	str	r1, [sp, #20]
    150a:	9a08      	ldr	r2, [sp, #32]
    150c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    150e:	9202      	str	r2, [sp, #8]
    1510:	9303      	str	r3, [sp, #12]
    1512:	9501      	str	r5, [sp, #4]
    1514:	9600      	str	r6, [sp, #0]
    1516:	9b07      	ldr	r3, [sp, #28]
    1518:	4a1a      	ldr	r2, [pc, #104]	; (1584 <_os_show_statistics+0xfc>)
    151a:	2180      	movs	r1, #128	; 0x80
    151c:	0020      	movs	r0, r4
    151e:	4d1a      	ldr	r5, [pc, #104]	; (1588 <_os_show_statistics+0x100>)
    1520:	47a8      	blx	r5
    str_write(szList);
    1522:	0020      	movs	r0, r4
    1524:	47c8      	blx	r9
  for (int i=0; i<N_EVENTS; i++) {
    1526:	3701      	adds	r7, #1
    1528:	2f02      	cmp	r7, #2
    152a:	ddce      	ble.n	14ca <_os_show_statistics+0x42>
  str_write("\r\n--- Press a Key:"
    152c:	4817      	ldr	r0, [pc, #92]	; (158c <_os_show_statistics+0x104>)
    152e:	4b08      	ldr	r3, [pc, #32]	; (1550 <_os_show_statistics+0xc8>)
    1530:	4798      	blx	r3
}
    1532:	b00a      	add	sp, #40	; 0x28
    1534:	bc04      	pop	{r2}
    1536:	4691      	mov	r9, r2
    1538:	bdf0      	pop	{r4, r5, r6, r7, pc}
    153a:	46c0      	nop			; (mov r8, r8)
    153c:	2000028c 	.word	0x2000028c
    1540:	00005938 	.word	0x00005938
    1544:	00005924 	.word	0x00005924
    1548:	0000592c 	.word	0x0000592c
    154c:	000036f1 	.word	0x000036f1
    1550:	00001241 	.word	0x00001241
    1554:	2000020c 	.word	0x2000020c
    1558:	000003e1 	.word	0x000003e1
    155c:	0000593c 	.word	0x0000593c
    1560:	00005958 	.word	0x00005958
    1564:	0000598c 	.word	0x0000598c
    1568:	00005890 	.word	0x00005890
    156c:	000058c0 	.word	0x000058c0
    1570:	00000565 	.word	0x00000565
    1574:	00001435 	.word	0x00001435
    1578:	00000569 	.word	0x00000569
    157c:	0000057d 	.word	0x0000057d
    1580:	0000056d 	.word	0x0000056d
    1584:	000059c0 	.word	0x000059c0
    1588:	0000368d 	.word	0x0000368d
    158c:	000059dc 	.word	0x000059dc

00001590 <task_monitor>:
static void task_monitor(void *self, void *arg) {
    1590:	b570      	push	{r4, r5, r6, lr}
  _os_show_statistics();
    1592:	4b0a      	ldr	r3, [pc, #40]	; (15bc <task_monitor+0x2c>)
    1594:	4798      	blx	r3
  s_monitor_event.time = mu_time_offset(s_monitor_event.time,
    1596:	4c0a      	ldr	r4, [pc, #40]	; (15c0 <task_monitor+0x30>)
    1598:	2588      	movs	r5, #136	; 0x88
    159a:	5966      	ldr	r6, [r4, r5]
    159c:	2000      	movs	r0, #0
    159e:	4909      	ldr	r1, [pc, #36]	; (15c4 <task_monitor+0x34>)
    15a0:	4b09      	ldr	r3, [pc, #36]	; (15c8 <task_monitor+0x38>)
    15a2:	4798      	blx	r3
    15a4:	0001      	movs	r1, r0
    15a6:	0030      	movs	r0, r6
    15a8:	4b08      	ldr	r3, [pc, #32]	; (15cc <task_monitor+0x3c>)
    15aa:	4798      	blx	r3
    15ac:	5160      	str	r0, [r4, r5]
  mu_sched_add(&s_sched, &s_monitor_event);
    15ae:	0021      	movs	r1, r4
    15b0:	316c      	adds	r1, #108	; 0x6c
    15b2:	0020      	movs	r0, r4
    15b4:	3024      	adds	r0, #36	; 0x24
    15b6:	4b06      	ldr	r3, [pc, #24]	; (15d0 <task_monitor+0x40>)
    15b8:	4798      	blx	r3
}
    15ba:	bd70      	pop	{r4, r5, r6, pc}
    15bc:	00001489 	.word	0x00001489
    15c0:	2000020c 	.word	0x2000020c
    15c4:	40140000 	.word	0x40140000
    15c8:	000005bd 	.word	0x000005bd
    15cc:	00000599 	.word	0x00000599
    15d0:	00000409 	.word	0x00000409

000015d4 <main>:
int main(void) {
    15d4:	b570      	push	{r4, r5, r6, lr}
  atmel_start_init();
    15d6:	4b1c      	ldr	r3, [pc, #112]	; (1648 <main+0x74>)
    15d8:	4798      	blx	r3
  port_init();          // set up rtc, etc.
    15da:	4b1c      	ldr	r3, [pc, #112]	; (164c <main+0x78>)
    15dc:	4798      	blx	r3
  mu_sched_init(&s_sched, s_isr_queue_pool, ISR_QUEUE_POOL_SIZE);
    15de:	4d1c      	ldr	r5, [pc, #112]	; (1650 <main+0x7c>)
    15e0:	002c      	movs	r4, r5
    15e2:	3424      	adds	r4, #36	; 0x24
    15e4:	2208      	movs	r2, #8
    15e6:	491b      	ldr	r1, [pc, #108]	; (1654 <main+0x80>)
    15e8:	3110      	adds	r1, #16
    15ea:	0020      	movs	r0, r4
    15ec:	4b1a      	ldr	r3, [pc, #104]	; (1658 <main+0x84>)
    15ee:	4798      	blx	r3
  task_led_pause(false);
    15f0:	2000      	movs	r0, #0
    15f2:	4b1a      	ldr	r3, [pc, #104]	; (165c <main+0x88>)
    15f4:	4798      	blx	r3
  task_monitor_pause(false);
    15f6:	2000      	movs	r0, #0
    15f8:	4b19      	ldr	r3, [pc, #100]	; (1660 <main+0x8c>)
    15fa:	4798      	blx	r3
  mu_sched_add(&s_sched,
    15fc:	4b19      	ldr	r3, [pc, #100]	; (1664 <main+0x90>)
    15fe:	2200      	movs	r2, #0
    1600:	4919      	ldr	r1, [pc, #100]	; (1668 <main+0x94>)
    1602:	0028      	movs	r0, r5
    1604:	4e19      	ldr	r6, [pc, #100]	; (166c <main+0x98>)
    1606:	47b0      	blx	r6
    1608:	0001      	movs	r1, r0
    160a:	0020      	movs	r0, r4
    160c:	4b18      	ldr	r3, [pc, #96]	; (1670 <main+0x9c>)
    160e:	4798      	blx	r3
  usart_async_register_callback(&EDBG_COM, USART_ASYNC_TXC_CB, serial_tx_cb);
    1610:	4c18      	ldr	r4, [pc, #96]	; (1674 <main+0xa0>)
    1612:	4a19      	ldr	r2, [pc, #100]	; (1678 <main+0xa4>)
    1614:	2101      	movs	r1, #1
    1616:	0020      	movs	r0, r4
    1618:	4e18      	ldr	r6, [pc, #96]	; (167c <main+0xa8>)
    161a:	47b0      	blx	r6
  usart_async_register_callback(&EDBG_COM, USART_ASYNC_RXC_CB, serial_rx_cb);
    161c:	4a18      	ldr	r2, [pc, #96]	; (1680 <main+0xac>)
    161e:	2100      	movs	r1, #0
    1620:	0020      	movs	r0, r4
    1622:	47b0      	blx	r6
  usart_async_register_callback(&EDBG_COM, USART_ASYNC_ERROR_CB, serial_err_cb);
    1624:	4a17      	ldr	r2, [pc, #92]	; (1684 <main+0xb0>)
    1626:	2102      	movs	r1, #2
    1628:	0020      	movs	r0, r4
    162a:	47b0      	blx	r6
  usart_async_get_io_descriptor(&EDBG_COM, &s_usart_io);
    162c:	0029      	movs	r1, r5
    162e:	3144      	adds	r1, #68	; 0x44
    1630:	0020      	movs	r0, r4
    1632:	4b15      	ldr	r3, [pc, #84]	; (1688 <main+0xb4>)
    1634:	4798      	blx	r3
  usart_async_enable(&EDBG_COM);
    1636:	0020      	movs	r0, r4
    1638:	4b14      	ldr	r3, [pc, #80]	; (168c <main+0xb8>)
    163a:	4798      	blx	r3
    mu_sched_step(&s_sched);
    163c:	4804      	ldr	r0, [pc, #16]	; (1650 <main+0x7c>)
    163e:	3024      	adds	r0, #36	; 0x24
    1640:	4b13      	ldr	r3, [pc, #76]	; (1690 <main+0xbc>)
    1642:	4798      	blx	r3
    1644:	e7fa      	b.n	163c <main+0x68>
    1646:	46c0      	nop			; (mov r8, r8)
    1648:	000005c9 	.word	0x000005c9
    164c:	00000115 	.word	0x00000115
    1650:	2000020c 	.word	0x2000020c
    1654:	2000030c 	.word	0x2000030c
    1658:	00000399 	.word	0x00000399
    165c:	00001285 	.word	0x00001285
    1660:	000012f1 	.word	0x000012f1
    1664:	00005a7c 	.word	0x00005a7c
    1668:	0000135d 	.word	0x0000135d
    166c:	000001c5 	.word	0x000001c5
    1670:	00000409 	.word	0x00000409
    1674:	20000344 	.word	0x20000344
    1678:	000011fd 	.word	0x000011fd
    167c:	00000b45 	.word	0x00000b45
    1680:	00001205 	.word	0x00001205
    1684:	00001201 	.word	0x00001201
    1688:	00000b15 	.word	0x00000b15
    168c:	00000ae9 	.word	0x00000ae9
    1690:	00000481 	.word	0x00000481

00001694 <__udivsi3>:
    1694:	2200      	movs	r2, #0
    1696:	0843      	lsrs	r3, r0, #1
    1698:	428b      	cmp	r3, r1
    169a:	d374      	bcc.n	1786 <__udivsi3+0xf2>
    169c:	0903      	lsrs	r3, r0, #4
    169e:	428b      	cmp	r3, r1
    16a0:	d35f      	bcc.n	1762 <__udivsi3+0xce>
    16a2:	0a03      	lsrs	r3, r0, #8
    16a4:	428b      	cmp	r3, r1
    16a6:	d344      	bcc.n	1732 <__udivsi3+0x9e>
    16a8:	0b03      	lsrs	r3, r0, #12
    16aa:	428b      	cmp	r3, r1
    16ac:	d328      	bcc.n	1700 <__udivsi3+0x6c>
    16ae:	0c03      	lsrs	r3, r0, #16
    16b0:	428b      	cmp	r3, r1
    16b2:	d30d      	bcc.n	16d0 <__udivsi3+0x3c>
    16b4:	22ff      	movs	r2, #255	; 0xff
    16b6:	0209      	lsls	r1, r1, #8
    16b8:	ba12      	rev	r2, r2
    16ba:	0c03      	lsrs	r3, r0, #16
    16bc:	428b      	cmp	r3, r1
    16be:	d302      	bcc.n	16c6 <__udivsi3+0x32>
    16c0:	1212      	asrs	r2, r2, #8
    16c2:	0209      	lsls	r1, r1, #8
    16c4:	d065      	beq.n	1792 <__udivsi3+0xfe>
    16c6:	0b03      	lsrs	r3, r0, #12
    16c8:	428b      	cmp	r3, r1
    16ca:	d319      	bcc.n	1700 <__udivsi3+0x6c>
    16cc:	e000      	b.n	16d0 <__udivsi3+0x3c>
    16ce:	0a09      	lsrs	r1, r1, #8
    16d0:	0bc3      	lsrs	r3, r0, #15
    16d2:	428b      	cmp	r3, r1
    16d4:	d301      	bcc.n	16da <__udivsi3+0x46>
    16d6:	03cb      	lsls	r3, r1, #15
    16d8:	1ac0      	subs	r0, r0, r3
    16da:	4152      	adcs	r2, r2
    16dc:	0b83      	lsrs	r3, r0, #14
    16de:	428b      	cmp	r3, r1
    16e0:	d301      	bcc.n	16e6 <__udivsi3+0x52>
    16e2:	038b      	lsls	r3, r1, #14
    16e4:	1ac0      	subs	r0, r0, r3
    16e6:	4152      	adcs	r2, r2
    16e8:	0b43      	lsrs	r3, r0, #13
    16ea:	428b      	cmp	r3, r1
    16ec:	d301      	bcc.n	16f2 <__udivsi3+0x5e>
    16ee:	034b      	lsls	r3, r1, #13
    16f0:	1ac0      	subs	r0, r0, r3
    16f2:	4152      	adcs	r2, r2
    16f4:	0b03      	lsrs	r3, r0, #12
    16f6:	428b      	cmp	r3, r1
    16f8:	d301      	bcc.n	16fe <__udivsi3+0x6a>
    16fa:	030b      	lsls	r3, r1, #12
    16fc:	1ac0      	subs	r0, r0, r3
    16fe:	4152      	adcs	r2, r2
    1700:	0ac3      	lsrs	r3, r0, #11
    1702:	428b      	cmp	r3, r1
    1704:	d301      	bcc.n	170a <__udivsi3+0x76>
    1706:	02cb      	lsls	r3, r1, #11
    1708:	1ac0      	subs	r0, r0, r3
    170a:	4152      	adcs	r2, r2
    170c:	0a83      	lsrs	r3, r0, #10
    170e:	428b      	cmp	r3, r1
    1710:	d301      	bcc.n	1716 <__udivsi3+0x82>
    1712:	028b      	lsls	r3, r1, #10
    1714:	1ac0      	subs	r0, r0, r3
    1716:	4152      	adcs	r2, r2
    1718:	0a43      	lsrs	r3, r0, #9
    171a:	428b      	cmp	r3, r1
    171c:	d301      	bcc.n	1722 <__udivsi3+0x8e>
    171e:	024b      	lsls	r3, r1, #9
    1720:	1ac0      	subs	r0, r0, r3
    1722:	4152      	adcs	r2, r2
    1724:	0a03      	lsrs	r3, r0, #8
    1726:	428b      	cmp	r3, r1
    1728:	d301      	bcc.n	172e <__udivsi3+0x9a>
    172a:	020b      	lsls	r3, r1, #8
    172c:	1ac0      	subs	r0, r0, r3
    172e:	4152      	adcs	r2, r2
    1730:	d2cd      	bcs.n	16ce <__udivsi3+0x3a>
    1732:	09c3      	lsrs	r3, r0, #7
    1734:	428b      	cmp	r3, r1
    1736:	d301      	bcc.n	173c <__udivsi3+0xa8>
    1738:	01cb      	lsls	r3, r1, #7
    173a:	1ac0      	subs	r0, r0, r3
    173c:	4152      	adcs	r2, r2
    173e:	0983      	lsrs	r3, r0, #6
    1740:	428b      	cmp	r3, r1
    1742:	d301      	bcc.n	1748 <__udivsi3+0xb4>
    1744:	018b      	lsls	r3, r1, #6
    1746:	1ac0      	subs	r0, r0, r3
    1748:	4152      	adcs	r2, r2
    174a:	0943      	lsrs	r3, r0, #5
    174c:	428b      	cmp	r3, r1
    174e:	d301      	bcc.n	1754 <__udivsi3+0xc0>
    1750:	014b      	lsls	r3, r1, #5
    1752:	1ac0      	subs	r0, r0, r3
    1754:	4152      	adcs	r2, r2
    1756:	0903      	lsrs	r3, r0, #4
    1758:	428b      	cmp	r3, r1
    175a:	d301      	bcc.n	1760 <__udivsi3+0xcc>
    175c:	010b      	lsls	r3, r1, #4
    175e:	1ac0      	subs	r0, r0, r3
    1760:	4152      	adcs	r2, r2
    1762:	08c3      	lsrs	r3, r0, #3
    1764:	428b      	cmp	r3, r1
    1766:	d301      	bcc.n	176c <__udivsi3+0xd8>
    1768:	00cb      	lsls	r3, r1, #3
    176a:	1ac0      	subs	r0, r0, r3
    176c:	4152      	adcs	r2, r2
    176e:	0883      	lsrs	r3, r0, #2
    1770:	428b      	cmp	r3, r1
    1772:	d301      	bcc.n	1778 <__udivsi3+0xe4>
    1774:	008b      	lsls	r3, r1, #2
    1776:	1ac0      	subs	r0, r0, r3
    1778:	4152      	adcs	r2, r2
    177a:	0843      	lsrs	r3, r0, #1
    177c:	428b      	cmp	r3, r1
    177e:	d301      	bcc.n	1784 <__udivsi3+0xf0>
    1780:	004b      	lsls	r3, r1, #1
    1782:	1ac0      	subs	r0, r0, r3
    1784:	4152      	adcs	r2, r2
    1786:	1a41      	subs	r1, r0, r1
    1788:	d200      	bcs.n	178c <__udivsi3+0xf8>
    178a:	4601      	mov	r1, r0
    178c:	4152      	adcs	r2, r2
    178e:	4610      	mov	r0, r2
    1790:	4770      	bx	lr
    1792:	e7ff      	b.n	1794 <__udivsi3+0x100>
    1794:	b501      	push	{r0, lr}
    1796:	2000      	movs	r0, #0
    1798:	f000 f806 	bl	17a8 <__aeabi_idiv0>
    179c:	bd02      	pop	{r1, pc}
    179e:	46c0      	nop			; (mov r8, r8)

000017a0 <__aeabi_uidivmod>:
    17a0:	2900      	cmp	r1, #0
    17a2:	d0f7      	beq.n	1794 <__udivsi3+0x100>
    17a4:	e776      	b.n	1694 <__udivsi3>
    17a6:	4770      	bx	lr

000017a8 <__aeabi_idiv0>:
    17a8:	4770      	bx	lr
    17aa:	46c0      	nop			; (mov r8, r8)

000017ac <__aeabi_ddiv>:
    17ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    17ae:	4657      	mov	r7, sl
    17b0:	4645      	mov	r5, r8
    17b2:	46de      	mov	lr, fp
    17b4:	464e      	mov	r6, r9
    17b6:	b5e0      	push	{r5, r6, r7, lr}
    17b8:	004c      	lsls	r4, r1, #1
    17ba:	030e      	lsls	r6, r1, #12
    17bc:	b087      	sub	sp, #28
    17be:	4683      	mov	fp, r0
    17c0:	4692      	mov	sl, r2
    17c2:	001d      	movs	r5, r3
    17c4:	4680      	mov	r8, r0
    17c6:	0b36      	lsrs	r6, r6, #12
    17c8:	0d64      	lsrs	r4, r4, #21
    17ca:	0fcf      	lsrs	r7, r1, #31
    17cc:	2c00      	cmp	r4, #0
    17ce:	d04f      	beq.n	1870 <__aeabi_ddiv+0xc4>
    17d0:	4b6f      	ldr	r3, [pc, #444]	; (1990 <__aeabi_ddiv+0x1e4>)
    17d2:	429c      	cmp	r4, r3
    17d4:	d035      	beq.n	1842 <__aeabi_ddiv+0x96>
    17d6:	2380      	movs	r3, #128	; 0x80
    17d8:	0f42      	lsrs	r2, r0, #29
    17da:	041b      	lsls	r3, r3, #16
    17dc:	00f6      	lsls	r6, r6, #3
    17de:	4313      	orrs	r3, r2
    17e0:	4333      	orrs	r3, r6
    17e2:	4699      	mov	r9, r3
    17e4:	00c3      	lsls	r3, r0, #3
    17e6:	4698      	mov	r8, r3
    17e8:	4b6a      	ldr	r3, [pc, #424]	; (1994 <__aeabi_ddiv+0x1e8>)
    17ea:	2600      	movs	r6, #0
    17ec:	469c      	mov	ip, r3
    17ee:	2300      	movs	r3, #0
    17f0:	4464      	add	r4, ip
    17f2:	9303      	str	r3, [sp, #12]
    17f4:	032b      	lsls	r3, r5, #12
    17f6:	0b1b      	lsrs	r3, r3, #12
    17f8:	469b      	mov	fp, r3
    17fa:	006b      	lsls	r3, r5, #1
    17fc:	0fed      	lsrs	r5, r5, #31
    17fe:	4650      	mov	r0, sl
    1800:	0d5b      	lsrs	r3, r3, #21
    1802:	9501      	str	r5, [sp, #4]
    1804:	d05e      	beq.n	18c4 <__aeabi_ddiv+0x118>
    1806:	4a62      	ldr	r2, [pc, #392]	; (1990 <__aeabi_ddiv+0x1e4>)
    1808:	4293      	cmp	r3, r2
    180a:	d053      	beq.n	18b4 <__aeabi_ddiv+0x108>
    180c:	465a      	mov	r2, fp
    180e:	00d1      	lsls	r1, r2, #3
    1810:	2280      	movs	r2, #128	; 0x80
    1812:	0f40      	lsrs	r0, r0, #29
    1814:	0412      	lsls	r2, r2, #16
    1816:	4302      	orrs	r2, r0
    1818:	430a      	orrs	r2, r1
    181a:	4693      	mov	fp, r2
    181c:	4652      	mov	r2, sl
    181e:	00d1      	lsls	r1, r2, #3
    1820:	4a5c      	ldr	r2, [pc, #368]	; (1994 <__aeabi_ddiv+0x1e8>)
    1822:	4694      	mov	ip, r2
    1824:	2200      	movs	r2, #0
    1826:	4463      	add	r3, ip
    1828:	0038      	movs	r0, r7
    182a:	4068      	eors	r0, r5
    182c:	4684      	mov	ip, r0
    182e:	9002      	str	r0, [sp, #8]
    1830:	1ae4      	subs	r4, r4, r3
    1832:	4316      	orrs	r6, r2
    1834:	2e0f      	cmp	r6, #15
    1836:	d900      	bls.n	183a <__aeabi_ddiv+0x8e>
    1838:	e0b4      	b.n	19a4 <__aeabi_ddiv+0x1f8>
    183a:	4b57      	ldr	r3, [pc, #348]	; (1998 <__aeabi_ddiv+0x1ec>)
    183c:	00b6      	lsls	r6, r6, #2
    183e:	599b      	ldr	r3, [r3, r6]
    1840:	469f      	mov	pc, r3
    1842:	0003      	movs	r3, r0
    1844:	4333      	orrs	r3, r6
    1846:	4699      	mov	r9, r3
    1848:	d16c      	bne.n	1924 <__aeabi_ddiv+0x178>
    184a:	2300      	movs	r3, #0
    184c:	4698      	mov	r8, r3
    184e:	3302      	adds	r3, #2
    1850:	2608      	movs	r6, #8
    1852:	9303      	str	r3, [sp, #12]
    1854:	e7ce      	b.n	17f4 <__aeabi_ddiv+0x48>
    1856:	46cb      	mov	fp, r9
    1858:	4641      	mov	r1, r8
    185a:	9a03      	ldr	r2, [sp, #12]
    185c:	9701      	str	r7, [sp, #4]
    185e:	2a02      	cmp	r2, #2
    1860:	d165      	bne.n	192e <__aeabi_ddiv+0x182>
    1862:	9b01      	ldr	r3, [sp, #4]
    1864:	4c4a      	ldr	r4, [pc, #296]	; (1990 <__aeabi_ddiv+0x1e4>)
    1866:	469c      	mov	ip, r3
    1868:	2300      	movs	r3, #0
    186a:	2200      	movs	r2, #0
    186c:	4698      	mov	r8, r3
    186e:	e06b      	b.n	1948 <__aeabi_ddiv+0x19c>
    1870:	0003      	movs	r3, r0
    1872:	4333      	orrs	r3, r6
    1874:	4699      	mov	r9, r3
    1876:	d04e      	beq.n	1916 <__aeabi_ddiv+0x16a>
    1878:	2e00      	cmp	r6, #0
    187a:	d100      	bne.n	187e <__aeabi_ddiv+0xd2>
    187c:	e1bc      	b.n	1bf8 <__aeabi_ddiv+0x44c>
    187e:	0030      	movs	r0, r6
    1880:	f001 f94a 	bl	2b18 <__clzsi2>
    1884:	0003      	movs	r3, r0
    1886:	3b0b      	subs	r3, #11
    1888:	2b1c      	cmp	r3, #28
    188a:	dd00      	ble.n	188e <__aeabi_ddiv+0xe2>
    188c:	e1ac      	b.n	1be8 <__aeabi_ddiv+0x43c>
    188e:	221d      	movs	r2, #29
    1890:	1ad3      	subs	r3, r2, r3
    1892:	465a      	mov	r2, fp
    1894:	0001      	movs	r1, r0
    1896:	40da      	lsrs	r2, r3
    1898:	3908      	subs	r1, #8
    189a:	408e      	lsls	r6, r1
    189c:	0013      	movs	r3, r2
    189e:	4333      	orrs	r3, r6
    18a0:	4699      	mov	r9, r3
    18a2:	465b      	mov	r3, fp
    18a4:	408b      	lsls	r3, r1
    18a6:	4698      	mov	r8, r3
    18a8:	2300      	movs	r3, #0
    18aa:	4c3c      	ldr	r4, [pc, #240]	; (199c <__aeabi_ddiv+0x1f0>)
    18ac:	2600      	movs	r6, #0
    18ae:	1a24      	subs	r4, r4, r0
    18b0:	9303      	str	r3, [sp, #12]
    18b2:	e79f      	b.n	17f4 <__aeabi_ddiv+0x48>
    18b4:	4651      	mov	r1, sl
    18b6:	465a      	mov	r2, fp
    18b8:	4311      	orrs	r1, r2
    18ba:	d129      	bne.n	1910 <__aeabi_ddiv+0x164>
    18bc:	2200      	movs	r2, #0
    18be:	4693      	mov	fp, r2
    18c0:	3202      	adds	r2, #2
    18c2:	e7b1      	b.n	1828 <__aeabi_ddiv+0x7c>
    18c4:	4659      	mov	r1, fp
    18c6:	4301      	orrs	r1, r0
    18c8:	d01e      	beq.n	1908 <__aeabi_ddiv+0x15c>
    18ca:	465b      	mov	r3, fp
    18cc:	2b00      	cmp	r3, #0
    18ce:	d100      	bne.n	18d2 <__aeabi_ddiv+0x126>
    18d0:	e19e      	b.n	1c10 <__aeabi_ddiv+0x464>
    18d2:	4658      	mov	r0, fp
    18d4:	f001 f920 	bl	2b18 <__clzsi2>
    18d8:	0003      	movs	r3, r0
    18da:	3b0b      	subs	r3, #11
    18dc:	2b1c      	cmp	r3, #28
    18de:	dd00      	ble.n	18e2 <__aeabi_ddiv+0x136>
    18e0:	e18f      	b.n	1c02 <__aeabi_ddiv+0x456>
    18e2:	0002      	movs	r2, r0
    18e4:	4659      	mov	r1, fp
    18e6:	3a08      	subs	r2, #8
    18e8:	4091      	lsls	r1, r2
    18ea:	468b      	mov	fp, r1
    18ec:	211d      	movs	r1, #29
    18ee:	1acb      	subs	r3, r1, r3
    18f0:	4651      	mov	r1, sl
    18f2:	40d9      	lsrs	r1, r3
    18f4:	000b      	movs	r3, r1
    18f6:	4659      	mov	r1, fp
    18f8:	430b      	orrs	r3, r1
    18fa:	4651      	mov	r1, sl
    18fc:	469b      	mov	fp, r3
    18fe:	4091      	lsls	r1, r2
    1900:	4b26      	ldr	r3, [pc, #152]	; (199c <__aeabi_ddiv+0x1f0>)
    1902:	2200      	movs	r2, #0
    1904:	1a1b      	subs	r3, r3, r0
    1906:	e78f      	b.n	1828 <__aeabi_ddiv+0x7c>
    1908:	2300      	movs	r3, #0
    190a:	2201      	movs	r2, #1
    190c:	469b      	mov	fp, r3
    190e:	e78b      	b.n	1828 <__aeabi_ddiv+0x7c>
    1910:	4651      	mov	r1, sl
    1912:	2203      	movs	r2, #3
    1914:	e788      	b.n	1828 <__aeabi_ddiv+0x7c>
    1916:	2300      	movs	r3, #0
    1918:	4698      	mov	r8, r3
    191a:	3301      	adds	r3, #1
    191c:	2604      	movs	r6, #4
    191e:	2400      	movs	r4, #0
    1920:	9303      	str	r3, [sp, #12]
    1922:	e767      	b.n	17f4 <__aeabi_ddiv+0x48>
    1924:	2303      	movs	r3, #3
    1926:	46b1      	mov	r9, r6
    1928:	9303      	str	r3, [sp, #12]
    192a:	260c      	movs	r6, #12
    192c:	e762      	b.n	17f4 <__aeabi_ddiv+0x48>
    192e:	2a03      	cmp	r2, #3
    1930:	d100      	bne.n	1934 <__aeabi_ddiv+0x188>
    1932:	e25c      	b.n	1dee <__aeabi_ddiv+0x642>
    1934:	9b01      	ldr	r3, [sp, #4]
    1936:	2a01      	cmp	r2, #1
    1938:	d000      	beq.n	193c <__aeabi_ddiv+0x190>
    193a:	e1e4      	b.n	1d06 <__aeabi_ddiv+0x55a>
    193c:	4013      	ands	r3, r2
    193e:	469c      	mov	ip, r3
    1940:	2300      	movs	r3, #0
    1942:	2400      	movs	r4, #0
    1944:	2200      	movs	r2, #0
    1946:	4698      	mov	r8, r3
    1948:	2100      	movs	r1, #0
    194a:	0312      	lsls	r2, r2, #12
    194c:	0b13      	lsrs	r3, r2, #12
    194e:	0d0a      	lsrs	r2, r1, #20
    1950:	0512      	lsls	r2, r2, #20
    1952:	431a      	orrs	r2, r3
    1954:	0523      	lsls	r3, r4, #20
    1956:	4c12      	ldr	r4, [pc, #72]	; (19a0 <__aeabi_ddiv+0x1f4>)
    1958:	4640      	mov	r0, r8
    195a:	4022      	ands	r2, r4
    195c:	4313      	orrs	r3, r2
    195e:	4662      	mov	r2, ip
    1960:	005b      	lsls	r3, r3, #1
    1962:	07d2      	lsls	r2, r2, #31
    1964:	085b      	lsrs	r3, r3, #1
    1966:	4313      	orrs	r3, r2
    1968:	0019      	movs	r1, r3
    196a:	b007      	add	sp, #28
    196c:	bc3c      	pop	{r2, r3, r4, r5}
    196e:	4690      	mov	r8, r2
    1970:	4699      	mov	r9, r3
    1972:	46a2      	mov	sl, r4
    1974:	46ab      	mov	fp, r5
    1976:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1978:	2300      	movs	r3, #0
    197a:	2280      	movs	r2, #128	; 0x80
    197c:	469c      	mov	ip, r3
    197e:	0312      	lsls	r2, r2, #12
    1980:	4698      	mov	r8, r3
    1982:	4c03      	ldr	r4, [pc, #12]	; (1990 <__aeabi_ddiv+0x1e4>)
    1984:	e7e0      	b.n	1948 <__aeabi_ddiv+0x19c>
    1986:	2300      	movs	r3, #0
    1988:	4c01      	ldr	r4, [pc, #4]	; (1990 <__aeabi_ddiv+0x1e4>)
    198a:	2200      	movs	r2, #0
    198c:	4698      	mov	r8, r3
    198e:	e7db      	b.n	1948 <__aeabi_ddiv+0x19c>
    1990:	000007ff 	.word	0x000007ff
    1994:	fffffc01 	.word	0xfffffc01
    1998:	00005a84 	.word	0x00005a84
    199c:	fffffc0d 	.word	0xfffffc0d
    19a0:	800fffff 	.word	0x800fffff
    19a4:	45d9      	cmp	r9, fp
    19a6:	d900      	bls.n	19aa <__aeabi_ddiv+0x1fe>
    19a8:	e139      	b.n	1c1e <__aeabi_ddiv+0x472>
    19aa:	d100      	bne.n	19ae <__aeabi_ddiv+0x202>
    19ac:	e134      	b.n	1c18 <__aeabi_ddiv+0x46c>
    19ae:	2300      	movs	r3, #0
    19b0:	4646      	mov	r6, r8
    19b2:	464d      	mov	r5, r9
    19b4:	469a      	mov	sl, r3
    19b6:	3c01      	subs	r4, #1
    19b8:	465b      	mov	r3, fp
    19ba:	0e0a      	lsrs	r2, r1, #24
    19bc:	021b      	lsls	r3, r3, #8
    19be:	431a      	orrs	r2, r3
    19c0:	020b      	lsls	r3, r1, #8
    19c2:	0c17      	lsrs	r7, r2, #16
    19c4:	9303      	str	r3, [sp, #12]
    19c6:	0413      	lsls	r3, r2, #16
    19c8:	0c1b      	lsrs	r3, r3, #16
    19ca:	0039      	movs	r1, r7
    19cc:	0028      	movs	r0, r5
    19ce:	4690      	mov	r8, r2
    19d0:	9301      	str	r3, [sp, #4]
    19d2:	f7ff fe5f 	bl	1694 <__udivsi3>
    19d6:	0002      	movs	r2, r0
    19d8:	9b01      	ldr	r3, [sp, #4]
    19da:	4683      	mov	fp, r0
    19dc:	435a      	muls	r2, r3
    19de:	0028      	movs	r0, r5
    19e0:	0039      	movs	r1, r7
    19e2:	4691      	mov	r9, r2
    19e4:	f7ff fedc 	bl	17a0 <__aeabi_uidivmod>
    19e8:	0c35      	lsrs	r5, r6, #16
    19ea:	0409      	lsls	r1, r1, #16
    19ec:	430d      	orrs	r5, r1
    19ee:	45a9      	cmp	r9, r5
    19f0:	d90d      	bls.n	1a0e <__aeabi_ddiv+0x262>
    19f2:	465b      	mov	r3, fp
    19f4:	4445      	add	r5, r8
    19f6:	3b01      	subs	r3, #1
    19f8:	45a8      	cmp	r8, r5
    19fa:	d900      	bls.n	19fe <__aeabi_ddiv+0x252>
    19fc:	e13a      	b.n	1c74 <__aeabi_ddiv+0x4c8>
    19fe:	45a9      	cmp	r9, r5
    1a00:	d800      	bhi.n	1a04 <__aeabi_ddiv+0x258>
    1a02:	e137      	b.n	1c74 <__aeabi_ddiv+0x4c8>
    1a04:	2302      	movs	r3, #2
    1a06:	425b      	negs	r3, r3
    1a08:	469c      	mov	ip, r3
    1a0a:	4445      	add	r5, r8
    1a0c:	44e3      	add	fp, ip
    1a0e:	464b      	mov	r3, r9
    1a10:	1aeb      	subs	r3, r5, r3
    1a12:	0039      	movs	r1, r7
    1a14:	0018      	movs	r0, r3
    1a16:	9304      	str	r3, [sp, #16]
    1a18:	f7ff fe3c 	bl	1694 <__udivsi3>
    1a1c:	9b01      	ldr	r3, [sp, #4]
    1a1e:	0005      	movs	r5, r0
    1a20:	4343      	muls	r3, r0
    1a22:	0039      	movs	r1, r7
    1a24:	9804      	ldr	r0, [sp, #16]
    1a26:	4699      	mov	r9, r3
    1a28:	f7ff feba 	bl	17a0 <__aeabi_uidivmod>
    1a2c:	0433      	lsls	r3, r6, #16
    1a2e:	0409      	lsls	r1, r1, #16
    1a30:	0c1b      	lsrs	r3, r3, #16
    1a32:	430b      	orrs	r3, r1
    1a34:	4599      	cmp	r9, r3
    1a36:	d909      	bls.n	1a4c <__aeabi_ddiv+0x2a0>
    1a38:	4443      	add	r3, r8
    1a3a:	1e6a      	subs	r2, r5, #1
    1a3c:	4598      	cmp	r8, r3
    1a3e:	d900      	bls.n	1a42 <__aeabi_ddiv+0x296>
    1a40:	e11a      	b.n	1c78 <__aeabi_ddiv+0x4cc>
    1a42:	4599      	cmp	r9, r3
    1a44:	d800      	bhi.n	1a48 <__aeabi_ddiv+0x29c>
    1a46:	e117      	b.n	1c78 <__aeabi_ddiv+0x4cc>
    1a48:	3d02      	subs	r5, #2
    1a4a:	4443      	add	r3, r8
    1a4c:	464a      	mov	r2, r9
    1a4e:	1a9b      	subs	r3, r3, r2
    1a50:	465a      	mov	r2, fp
    1a52:	0412      	lsls	r2, r2, #16
    1a54:	432a      	orrs	r2, r5
    1a56:	9903      	ldr	r1, [sp, #12]
    1a58:	4693      	mov	fp, r2
    1a5a:	0c10      	lsrs	r0, r2, #16
    1a5c:	0c0a      	lsrs	r2, r1, #16
    1a5e:	4691      	mov	r9, r2
    1a60:	0409      	lsls	r1, r1, #16
    1a62:	465a      	mov	r2, fp
    1a64:	0c09      	lsrs	r1, r1, #16
    1a66:	464e      	mov	r6, r9
    1a68:	000d      	movs	r5, r1
    1a6a:	0412      	lsls	r2, r2, #16
    1a6c:	0c12      	lsrs	r2, r2, #16
    1a6e:	4345      	muls	r5, r0
    1a70:	9105      	str	r1, [sp, #20]
    1a72:	4351      	muls	r1, r2
    1a74:	4372      	muls	r2, r6
    1a76:	4370      	muls	r0, r6
    1a78:	1952      	adds	r2, r2, r5
    1a7a:	0c0e      	lsrs	r6, r1, #16
    1a7c:	18b2      	adds	r2, r6, r2
    1a7e:	4295      	cmp	r5, r2
    1a80:	d903      	bls.n	1a8a <__aeabi_ddiv+0x2de>
    1a82:	2580      	movs	r5, #128	; 0x80
    1a84:	026d      	lsls	r5, r5, #9
    1a86:	46ac      	mov	ip, r5
    1a88:	4460      	add	r0, ip
    1a8a:	0c15      	lsrs	r5, r2, #16
    1a8c:	0409      	lsls	r1, r1, #16
    1a8e:	0412      	lsls	r2, r2, #16
    1a90:	0c09      	lsrs	r1, r1, #16
    1a92:	1828      	adds	r0, r5, r0
    1a94:	1852      	adds	r2, r2, r1
    1a96:	4283      	cmp	r3, r0
    1a98:	d200      	bcs.n	1a9c <__aeabi_ddiv+0x2f0>
    1a9a:	e0ce      	b.n	1c3a <__aeabi_ddiv+0x48e>
    1a9c:	d100      	bne.n	1aa0 <__aeabi_ddiv+0x2f4>
    1a9e:	e0c8      	b.n	1c32 <__aeabi_ddiv+0x486>
    1aa0:	1a1d      	subs	r5, r3, r0
    1aa2:	4653      	mov	r3, sl
    1aa4:	1a9e      	subs	r6, r3, r2
    1aa6:	45b2      	cmp	sl, r6
    1aa8:	4192      	sbcs	r2, r2
    1aaa:	4252      	negs	r2, r2
    1aac:	1aab      	subs	r3, r5, r2
    1aae:	469a      	mov	sl, r3
    1ab0:	4598      	cmp	r8, r3
    1ab2:	d100      	bne.n	1ab6 <__aeabi_ddiv+0x30a>
    1ab4:	e117      	b.n	1ce6 <__aeabi_ddiv+0x53a>
    1ab6:	0039      	movs	r1, r7
    1ab8:	0018      	movs	r0, r3
    1aba:	f7ff fdeb 	bl	1694 <__udivsi3>
    1abe:	9b01      	ldr	r3, [sp, #4]
    1ac0:	0005      	movs	r5, r0
    1ac2:	4343      	muls	r3, r0
    1ac4:	0039      	movs	r1, r7
    1ac6:	4650      	mov	r0, sl
    1ac8:	9304      	str	r3, [sp, #16]
    1aca:	f7ff fe69 	bl	17a0 <__aeabi_uidivmod>
    1ace:	9804      	ldr	r0, [sp, #16]
    1ad0:	040b      	lsls	r3, r1, #16
    1ad2:	0c31      	lsrs	r1, r6, #16
    1ad4:	4319      	orrs	r1, r3
    1ad6:	4288      	cmp	r0, r1
    1ad8:	d909      	bls.n	1aee <__aeabi_ddiv+0x342>
    1ada:	4441      	add	r1, r8
    1adc:	1e6b      	subs	r3, r5, #1
    1ade:	4588      	cmp	r8, r1
    1ae0:	d900      	bls.n	1ae4 <__aeabi_ddiv+0x338>
    1ae2:	e107      	b.n	1cf4 <__aeabi_ddiv+0x548>
    1ae4:	4288      	cmp	r0, r1
    1ae6:	d800      	bhi.n	1aea <__aeabi_ddiv+0x33e>
    1ae8:	e104      	b.n	1cf4 <__aeabi_ddiv+0x548>
    1aea:	3d02      	subs	r5, #2
    1aec:	4441      	add	r1, r8
    1aee:	9b04      	ldr	r3, [sp, #16]
    1af0:	1acb      	subs	r3, r1, r3
    1af2:	0018      	movs	r0, r3
    1af4:	0039      	movs	r1, r7
    1af6:	9304      	str	r3, [sp, #16]
    1af8:	f7ff fdcc 	bl	1694 <__udivsi3>
    1afc:	9b01      	ldr	r3, [sp, #4]
    1afe:	4682      	mov	sl, r0
    1b00:	4343      	muls	r3, r0
    1b02:	0039      	movs	r1, r7
    1b04:	9804      	ldr	r0, [sp, #16]
    1b06:	9301      	str	r3, [sp, #4]
    1b08:	f7ff fe4a 	bl	17a0 <__aeabi_uidivmod>
    1b0c:	9801      	ldr	r0, [sp, #4]
    1b0e:	040b      	lsls	r3, r1, #16
    1b10:	0431      	lsls	r1, r6, #16
    1b12:	0c09      	lsrs	r1, r1, #16
    1b14:	4319      	orrs	r1, r3
    1b16:	4288      	cmp	r0, r1
    1b18:	d90d      	bls.n	1b36 <__aeabi_ddiv+0x38a>
    1b1a:	4653      	mov	r3, sl
    1b1c:	4441      	add	r1, r8
    1b1e:	3b01      	subs	r3, #1
    1b20:	4588      	cmp	r8, r1
    1b22:	d900      	bls.n	1b26 <__aeabi_ddiv+0x37a>
    1b24:	e0e8      	b.n	1cf8 <__aeabi_ddiv+0x54c>
    1b26:	4288      	cmp	r0, r1
    1b28:	d800      	bhi.n	1b2c <__aeabi_ddiv+0x380>
    1b2a:	e0e5      	b.n	1cf8 <__aeabi_ddiv+0x54c>
    1b2c:	2302      	movs	r3, #2
    1b2e:	425b      	negs	r3, r3
    1b30:	469c      	mov	ip, r3
    1b32:	4441      	add	r1, r8
    1b34:	44e2      	add	sl, ip
    1b36:	9b01      	ldr	r3, [sp, #4]
    1b38:	042d      	lsls	r5, r5, #16
    1b3a:	1ace      	subs	r6, r1, r3
    1b3c:	4651      	mov	r1, sl
    1b3e:	4329      	orrs	r1, r5
    1b40:	9d05      	ldr	r5, [sp, #20]
    1b42:	464f      	mov	r7, r9
    1b44:	002a      	movs	r2, r5
    1b46:	040b      	lsls	r3, r1, #16
    1b48:	0c08      	lsrs	r0, r1, #16
    1b4a:	0c1b      	lsrs	r3, r3, #16
    1b4c:	435a      	muls	r2, r3
    1b4e:	4345      	muls	r5, r0
    1b50:	437b      	muls	r3, r7
    1b52:	4378      	muls	r0, r7
    1b54:	195b      	adds	r3, r3, r5
    1b56:	0c17      	lsrs	r7, r2, #16
    1b58:	18fb      	adds	r3, r7, r3
    1b5a:	429d      	cmp	r5, r3
    1b5c:	d903      	bls.n	1b66 <__aeabi_ddiv+0x3ba>
    1b5e:	2580      	movs	r5, #128	; 0x80
    1b60:	026d      	lsls	r5, r5, #9
    1b62:	46ac      	mov	ip, r5
    1b64:	4460      	add	r0, ip
    1b66:	0c1d      	lsrs	r5, r3, #16
    1b68:	0412      	lsls	r2, r2, #16
    1b6a:	041b      	lsls	r3, r3, #16
    1b6c:	0c12      	lsrs	r2, r2, #16
    1b6e:	1828      	adds	r0, r5, r0
    1b70:	189b      	adds	r3, r3, r2
    1b72:	4286      	cmp	r6, r0
    1b74:	d200      	bcs.n	1b78 <__aeabi_ddiv+0x3cc>
    1b76:	e093      	b.n	1ca0 <__aeabi_ddiv+0x4f4>
    1b78:	d100      	bne.n	1b7c <__aeabi_ddiv+0x3d0>
    1b7a:	e08e      	b.n	1c9a <__aeabi_ddiv+0x4ee>
    1b7c:	2301      	movs	r3, #1
    1b7e:	4319      	orrs	r1, r3
    1b80:	4ba0      	ldr	r3, [pc, #640]	; (1e04 <__aeabi_ddiv+0x658>)
    1b82:	18e3      	adds	r3, r4, r3
    1b84:	2b00      	cmp	r3, #0
    1b86:	dc00      	bgt.n	1b8a <__aeabi_ddiv+0x3de>
    1b88:	e099      	b.n	1cbe <__aeabi_ddiv+0x512>
    1b8a:	074a      	lsls	r2, r1, #29
    1b8c:	d000      	beq.n	1b90 <__aeabi_ddiv+0x3e4>
    1b8e:	e09e      	b.n	1cce <__aeabi_ddiv+0x522>
    1b90:	465a      	mov	r2, fp
    1b92:	01d2      	lsls	r2, r2, #7
    1b94:	d506      	bpl.n	1ba4 <__aeabi_ddiv+0x3f8>
    1b96:	465a      	mov	r2, fp
    1b98:	4b9b      	ldr	r3, [pc, #620]	; (1e08 <__aeabi_ddiv+0x65c>)
    1b9a:	401a      	ands	r2, r3
    1b9c:	2380      	movs	r3, #128	; 0x80
    1b9e:	4693      	mov	fp, r2
    1ba0:	00db      	lsls	r3, r3, #3
    1ba2:	18e3      	adds	r3, r4, r3
    1ba4:	4a99      	ldr	r2, [pc, #612]	; (1e0c <__aeabi_ddiv+0x660>)
    1ba6:	4293      	cmp	r3, r2
    1ba8:	dd68      	ble.n	1c7c <__aeabi_ddiv+0x4d0>
    1baa:	2301      	movs	r3, #1
    1bac:	9a02      	ldr	r2, [sp, #8]
    1bae:	4c98      	ldr	r4, [pc, #608]	; (1e10 <__aeabi_ddiv+0x664>)
    1bb0:	401a      	ands	r2, r3
    1bb2:	2300      	movs	r3, #0
    1bb4:	4694      	mov	ip, r2
    1bb6:	4698      	mov	r8, r3
    1bb8:	2200      	movs	r2, #0
    1bba:	e6c5      	b.n	1948 <__aeabi_ddiv+0x19c>
    1bbc:	2280      	movs	r2, #128	; 0x80
    1bbe:	464b      	mov	r3, r9
    1bc0:	0312      	lsls	r2, r2, #12
    1bc2:	4213      	tst	r3, r2
    1bc4:	d00a      	beq.n	1bdc <__aeabi_ddiv+0x430>
    1bc6:	465b      	mov	r3, fp
    1bc8:	4213      	tst	r3, r2
    1bca:	d106      	bne.n	1bda <__aeabi_ddiv+0x42e>
    1bcc:	431a      	orrs	r2, r3
    1bce:	0312      	lsls	r2, r2, #12
    1bd0:	0b12      	lsrs	r2, r2, #12
    1bd2:	46ac      	mov	ip, r5
    1bd4:	4688      	mov	r8, r1
    1bd6:	4c8e      	ldr	r4, [pc, #568]	; (1e10 <__aeabi_ddiv+0x664>)
    1bd8:	e6b6      	b.n	1948 <__aeabi_ddiv+0x19c>
    1bda:	464b      	mov	r3, r9
    1bdc:	431a      	orrs	r2, r3
    1bde:	0312      	lsls	r2, r2, #12
    1be0:	0b12      	lsrs	r2, r2, #12
    1be2:	46bc      	mov	ip, r7
    1be4:	4c8a      	ldr	r4, [pc, #552]	; (1e10 <__aeabi_ddiv+0x664>)
    1be6:	e6af      	b.n	1948 <__aeabi_ddiv+0x19c>
    1be8:	0003      	movs	r3, r0
    1bea:	465a      	mov	r2, fp
    1bec:	3b28      	subs	r3, #40	; 0x28
    1bee:	409a      	lsls	r2, r3
    1bf0:	2300      	movs	r3, #0
    1bf2:	4691      	mov	r9, r2
    1bf4:	4698      	mov	r8, r3
    1bf6:	e657      	b.n	18a8 <__aeabi_ddiv+0xfc>
    1bf8:	4658      	mov	r0, fp
    1bfa:	f000 ff8d 	bl	2b18 <__clzsi2>
    1bfe:	3020      	adds	r0, #32
    1c00:	e640      	b.n	1884 <__aeabi_ddiv+0xd8>
    1c02:	0003      	movs	r3, r0
    1c04:	4652      	mov	r2, sl
    1c06:	3b28      	subs	r3, #40	; 0x28
    1c08:	409a      	lsls	r2, r3
    1c0a:	2100      	movs	r1, #0
    1c0c:	4693      	mov	fp, r2
    1c0e:	e677      	b.n	1900 <__aeabi_ddiv+0x154>
    1c10:	f000 ff82 	bl	2b18 <__clzsi2>
    1c14:	3020      	adds	r0, #32
    1c16:	e65f      	b.n	18d8 <__aeabi_ddiv+0x12c>
    1c18:	4588      	cmp	r8, r1
    1c1a:	d200      	bcs.n	1c1e <__aeabi_ddiv+0x472>
    1c1c:	e6c7      	b.n	19ae <__aeabi_ddiv+0x202>
    1c1e:	464b      	mov	r3, r9
    1c20:	07de      	lsls	r6, r3, #31
    1c22:	085d      	lsrs	r5, r3, #1
    1c24:	4643      	mov	r3, r8
    1c26:	085b      	lsrs	r3, r3, #1
    1c28:	431e      	orrs	r6, r3
    1c2a:	4643      	mov	r3, r8
    1c2c:	07db      	lsls	r3, r3, #31
    1c2e:	469a      	mov	sl, r3
    1c30:	e6c2      	b.n	19b8 <__aeabi_ddiv+0x20c>
    1c32:	2500      	movs	r5, #0
    1c34:	4592      	cmp	sl, r2
    1c36:	d300      	bcc.n	1c3a <__aeabi_ddiv+0x48e>
    1c38:	e733      	b.n	1aa2 <__aeabi_ddiv+0x2f6>
    1c3a:	9e03      	ldr	r6, [sp, #12]
    1c3c:	4659      	mov	r1, fp
    1c3e:	46b4      	mov	ip, r6
    1c40:	44e2      	add	sl, ip
    1c42:	45b2      	cmp	sl, r6
    1c44:	41ad      	sbcs	r5, r5
    1c46:	426d      	negs	r5, r5
    1c48:	4445      	add	r5, r8
    1c4a:	18eb      	adds	r3, r5, r3
    1c4c:	3901      	subs	r1, #1
    1c4e:	4598      	cmp	r8, r3
    1c50:	d207      	bcs.n	1c62 <__aeabi_ddiv+0x4b6>
    1c52:	4298      	cmp	r0, r3
    1c54:	d900      	bls.n	1c58 <__aeabi_ddiv+0x4ac>
    1c56:	e07f      	b.n	1d58 <__aeabi_ddiv+0x5ac>
    1c58:	d100      	bne.n	1c5c <__aeabi_ddiv+0x4b0>
    1c5a:	e0bc      	b.n	1dd6 <__aeabi_ddiv+0x62a>
    1c5c:	1a1d      	subs	r5, r3, r0
    1c5e:	468b      	mov	fp, r1
    1c60:	e71f      	b.n	1aa2 <__aeabi_ddiv+0x2f6>
    1c62:	4598      	cmp	r8, r3
    1c64:	d1fa      	bne.n	1c5c <__aeabi_ddiv+0x4b0>
    1c66:	9d03      	ldr	r5, [sp, #12]
    1c68:	4555      	cmp	r5, sl
    1c6a:	d9f2      	bls.n	1c52 <__aeabi_ddiv+0x4a6>
    1c6c:	4643      	mov	r3, r8
    1c6e:	468b      	mov	fp, r1
    1c70:	1a1d      	subs	r5, r3, r0
    1c72:	e716      	b.n	1aa2 <__aeabi_ddiv+0x2f6>
    1c74:	469b      	mov	fp, r3
    1c76:	e6ca      	b.n	1a0e <__aeabi_ddiv+0x262>
    1c78:	0015      	movs	r5, r2
    1c7a:	e6e7      	b.n	1a4c <__aeabi_ddiv+0x2a0>
    1c7c:	465a      	mov	r2, fp
    1c7e:	08c9      	lsrs	r1, r1, #3
    1c80:	0752      	lsls	r2, r2, #29
    1c82:	430a      	orrs	r2, r1
    1c84:	055b      	lsls	r3, r3, #21
    1c86:	4690      	mov	r8, r2
    1c88:	0d5c      	lsrs	r4, r3, #21
    1c8a:	465a      	mov	r2, fp
    1c8c:	2301      	movs	r3, #1
    1c8e:	9902      	ldr	r1, [sp, #8]
    1c90:	0252      	lsls	r2, r2, #9
    1c92:	4019      	ands	r1, r3
    1c94:	0b12      	lsrs	r2, r2, #12
    1c96:	468c      	mov	ip, r1
    1c98:	e656      	b.n	1948 <__aeabi_ddiv+0x19c>
    1c9a:	2b00      	cmp	r3, #0
    1c9c:	d100      	bne.n	1ca0 <__aeabi_ddiv+0x4f4>
    1c9e:	e76f      	b.n	1b80 <__aeabi_ddiv+0x3d4>
    1ca0:	4446      	add	r6, r8
    1ca2:	1e4a      	subs	r2, r1, #1
    1ca4:	45b0      	cmp	r8, r6
    1ca6:	d929      	bls.n	1cfc <__aeabi_ddiv+0x550>
    1ca8:	0011      	movs	r1, r2
    1caa:	4286      	cmp	r6, r0
    1cac:	d000      	beq.n	1cb0 <__aeabi_ddiv+0x504>
    1cae:	e765      	b.n	1b7c <__aeabi_ddiv+0x3d0>
    1cb0:	9a03      	ldr	r2, [sp, #12]
    1cb2:	4293      	cmp	r3, r2
    1cb4:	d000      	beq.n	1cb8 <__aeabi_ddiv+0x50c>
    1cb6:	e761      	b.n	1b7c <__aeabi_ddiv+0x3d0>
    1cb8:	e762      	b.n	1b80 <__aeabi_ddiv+0x3d4>
    1cba:	2101      	movs	r1, #1
    1cbc:	4249      	negs	r1, r1
    1cbe:	2001      	movs	r0, #1
    1cc0:	1ac2      	subs	r2, r0, r3
    1cc2:	2a38      	cmp	r2, #56	; 0x38
    1cc4:	dd21      	ble.n	1d0a <__aeabi_ddiv+0x55e>
    1cc6:	9b02      	ldr	r3, [sp, #8]
    1cc8:	4003      	ands	r3, r0
    1cca:	469c      	mov	ip, r3
    1ccc:	e638      	b.n	1940 <__aeabi_ddiv+0x194>
    1cce:	220f      	movs	r2, #15
    1cd0:	400a      	ands	r2, r1
    1cd2:	2a04      	cmp	r2, #4
    1cd4:	d100      	bne.n	1cd8 <__aeabi_ddiv+0x52c>
    1cd6:	e75b      	b.n	1b90 <__aeabi_ddiv+0x3e4>
    1cd8:	000a      	movs	r2, r1
    1cda:	1d11      	adds	r1, r2, #4
    1cdc:	4291      	cmp	r1, r2
    1cde:	4192      	sbcs	r2, r2
    1ce0:	4252      	negs	r2, r2
    1ce2:	4493      	add	fp, r2
    1ce4:	e754      	b.n	1b90 <__aeabi_ddiv+0x3e4>
    1ce6:	4b47      	ldr	r3, [pc, #284]	; (1e04 <__aeabi_ddiv+0x658>)
    1ce8:	18e3      	adds	r3, r4, r3
    1cea:	2b00      	cmp	r3, #0
    1cec:	dde5      	ble.n	1cba <__aeabi_ddiv+0x50e>
    1cee:	2201      	movs	r2, #1
    1cf0:	4252      	negs	r2, r2
    1cf2:	e7f2      	b.n	1cda <__aeabi_ddiv+0x52e>
    1cf4:	001d      	movs	r5, r3
    1cf6:	e6fa      	b.n	1aee <__aeabi_ddiv+0x342>
    1cf8:	469a      	mov	sl, r3
    1cfa:	e71c      	b.n	1b36 <__aeabi_ddiv+0x38a>
    1cfc:	42b0      	cmp	r0, r6
    1cfe:	d839      	bhi.n	1d74 <__aeabi_ddiv+0x5c8>
    1d00:	d06e      	beq.n	1de0 <__aeabi_ddiv+0x634>
    1d02:	0011      	movs	r1, r2
    1d04:	e73a      	b.n	1b7c <__aeabi_ddiv+0x3d0>
    1d06:	9302      	str	r3, [sp, #8]
    1d08:	e73a      	b.n	1b80 <__aeabi_ddiv+0x3d4>
    1d0a:	2a1f      	cmp	r2, #31
    1d0c:	dc3c      	bgt.n	1d88 <__aeabi_ddiv+0x5dc>
    1d0e:	2320      	movs	r3, #32
    1d10:	1a9b      	subs	r3, r3, r2
    1d12:	000c      	movs	r4, r1
    1d14:	4658      	mov	r0, fp
    1d16:	4099      	lsls	r1, r3
    1d18:	4098      	lsls	r0, r3
    1d1a:	1e4b      	subs	r3, r1, #1
    1d1c:	4199      	sbcs	r1, r3
    1d1e:	465b      	mov	r3, fp
    1d20:	40d4      	lsrs	r4, r2
    1d22:	40d3      	lsrs	r3, r2
    1d24:	4320      	orrs	r0, r4
    1d26:	4308      	orrs	r0, r1
    1d28:	001a      	movs	r2, r3
    1d2a:	0743      	lsls	r3, r0, #29
    1d2c:	d009      	beq.n	1d42 <__aeabi_ddiv+0x596>
    1d2e:	230f      	movs	r3, #15
    1d30:	4003      	ands	r3, r0
    1d32:	2b04      	cmp	r3, #4
    1d34:	d005      	beq.n	1d42 <__aeabi_ddiv+0x596>
    1d36:	0001      	movs	r1, r0
    1d38:	1d08      	adds	r0, r1, #4
    1d3a:	4288      	cmp	r0, r1
    1d3c:	419b      	sbcs	r3, r3
    1d3e:	425b      	negs	r3, r3
    1d40:	18d2      	adds	r2, r2, r3
    1d42:	0213      	lsls	r3, r2, #8
    1d44:	d53a      	bpl.n	1dbc <__aeabi_ddiv+0x610>
    1d46:	2301      	movs	r3, #1
    1d48:	9a02      	ldr	r2, [sp, #8]
    1d4a:	2401      	movs	r4, #1
    1d4c:	401a      	ands	r2, r3
    1d4e:	2300      	movs	r3, #0
    1d50:	4694      	mov	ip, r2
    1d52:	4698      	mov	r8, r3
    1d54:	2200      	movs	r2, #0
    1d56:	e5f7      	b.n	1948 <__aeabi_ddiv+0x19c>
    1d58:	2102      	movs	r1, #2
    1d5a:	4249      	negs	r1, r1
    1d5c:	468c      	mov	ip, r1
    1d5e:	9d03      	ldr	r5, [sp, #12]
    1d60:	44e3      	add	fp, ip
    1d62:	46ac      	mov	ip, r5
    1d64:	44e2      	add	sl, ip
    1d66:	45aa      	cmp	sl, r5
    1d68:	41ad      	sbcs	r5, r5
    1d6a:	426d      	negs	r5, r5
    1d6c:	4445      	add	r5, r8
    1d6e:	18ed      	adds	r5, r5, r3
    1d70:	1a2d      	subs	r5, r5, r0
    1d72:	e696      	b.n	1aa2 <__aeabi_ddiv+0x2f6>
    1d74:	1e8a      	subs	r2, r1, #2
    1d76:	9903      	ldr	r1, [sp, #12]
    1d78:	004d      	lsls	r5, r1, #1
    1d7a:	428d      	cmp	r5, r1
    1d7c:	4189      	sbcs	r1, r1
    1d7e:	4249      	negs	r1, r1
    1d80:	4441      	add	r1, r8
    1d82:	1876      	adds	r6, r6, r1
    1d84:	9503      	str	r5, [sp, #12]
    1d86:	e78f      	b.n	1ca8 <__aeabi_ddiv+0x4fc>
    1d88:	201f      	movs	r0, #31
    1d8a:	4240      	negs	r0, r0
    1d8c:	1ac3      	subs	r3, r0, r3
    1d8e:	4658      	mov	r0, fp
    1d90:	40d8      	lsrs	r0, r3
    1d92:	0003      	movs	r3, r0
    1d94:	2a20      	cmp	r2, #32
    1d96:	d028      	beq.n	1dea <__aeabi_ddiv+0x63e>
    1d98:	2040      	movs	r0, #64	; 0x40
    1d9a:	465d      	mov	r5, fp
    1d9c:	1a82      	subs	r2, r0, r2
    1d9e:	4095      	lsls	r5, r2
    1da0:	4329      	orrs	r1, r5
    1da2:	1e4a      	subs	r2, r1, #1
    1da4:	4191      	sbcs	r1, r2
    1da6:	4319      	orrs	r1, r3
    1da8:	2307      	movs	r3, #7
    1daa:	2200      	movs	r2, #0
    1dac:	400b      	ands	r3, r1
    1dae:	d009      	beq.n	1dc4 <__aeabi_ddiv+0x618>
    1db0:	230f      	movs	r3, #15
    1db2:	2200      	movs	r2, #0
    1db4:	400b      	ands	r3, r1
    1db6:	0008      	movs	r0, r1
    1db8:	2b04      	cmp	r3, #4
    1dba:	d1bd      	bne.n	1d38 <__aeabi_ddiv+0x58c>
    1dbc:	0001      	movs	r1, r0
    1dbe:	0753      	lsls	r3, r2, #29
    1dc0:	0252      	lsls	r2, r2, #9
    1dc2:	0b12      	lsrs	r2, r2, #12
    1dc4:	08c9      	lsrs	r1, r1, #3
    1dc6:	4319      	orrs	r1, r3
    1dc8:	2301      	movs	r3, #1
    1dca:	4688      	mov	r8, r1
    1dcc:	9902      	ldr	r1, [sp, #8]
    1dce:	2400      	movs	r4, #0
    1dd0:	4019      	ands	r1, r3
    1dd2:	468c      	mov	ip, r1
    1dd4:	e5b8      	b.n	1948 <__aeabi_ddiv+0x19c>
    1dd6:	4552      	cmp	r2, sl
    1dd8:	d8be      	bhi.n	1d58 <__aeabi_ddiv+0x5ac>
    1dda:	468b      	mov	fp, r1
    1ddc:	2500      	movs	r5, #0
    1dde:	e660      	b.n	1aa2 <__aeabi_ddiv+0x2f6>
    1de0:	9d03      	ldr	r5, [sp, #12]
    1de2:	429d      	cmp	r5, r3
    1de4:	d3c6      	bcc.n	1d74 <__aeabi_ddiv+0x5c8>
    1de6:	0011      	movs	r1, r2
    1de8:	e762      	b.n	1cb0 <__aeabi_ddiv+0x504>
    1dea:	2500      	movs	r5, #0
    1dec:	e7d8      	b.n	1da0 <__aeabi_ddiv+0x5f4>
    1dee:	2280      	movs	r2, #128	; 0x80
    1df0:	465b      	mov	r3, fp
    1df2:	0312      	lsls	r2, r2, #12
    1df4:	431a      	orrs	r2, r3
    1df6:	9b01      	ldr	r3, [sp, #4]
    1df8:	0312      	lsls	r2, r2, #12
    1dfa:	0b12      	lsrs	r2, r2, #12
    1dfc:	469c      	mov	ip, r3
    1dfe:	4688      	mov	r8, r1
    1e00:	4c03      	ldr	r4, [pc, #12]	; (1e10 <__aeabi_ddiv+0x664>)
    1e02:	e5a1      	b.n	1948 <__aeabi_ddiv+0x19c>
    1e04:	000003ff 	.word	0x000003ff
    1e08:	feffffff 	.word	0xfeffffff
    1e0c:	000007fe 	.word	0x000007fe
    1e10:	000007ff 	.word	0x000007ff

00001e14 <__aeabi_dmul>:
    1e14:	b5f0      	push	{r4, r5, r6, r7, lr}
    1e16:	4657      	mov	r7, sl
    1e18:	4645      	mov	r5, r8
    1e1a:	46de      	mov	lr, fp
    1e1c:	464e      	mov	r6, r9
    1e1e:	b5e0      	push	{r5, r6, r7, lr}
    1e20:	030c      	lsls	r4, r1, #12
    1e22:	4698      	mov	r8, r3
    1e24:	004e      	lsls	r6, r1, #1
    1e26:	0b23      	lsrs	r3, r4, #12
    1e28:	b087      	sub	sp, #28
    1e2a:	0007      	movs	r7, r0
    1e2c:	4692      	mov	sl, r2
    1e2e:	469b      	mov	fp, r3
    1e30:	0d76      	lsrs	r6, r6, #21
    1e32:	0fcd      	lsrs	r5, r1, #31
    1e34:	2e00      	cmp	r6, #0
    1e36:	d06b      	beq.n	1f10 <__aeabi_dmul+0xfc>
    1e38:	4b6d      	ldr	r3, [pc, #436]	; (1ff0 <__aeabi_dmul+0x1dc>)
    1e3a:	429e      	cmp	r6, r3
    1e3c:	d035      	beq.n	1eaa <__aeabi_dmul+0x96>
    1e3e:	2480      	movs	r4, #128	; 0x80
    1e40:	465b      	mov	r3, fp
    1e42:	0f42      	lsrs	r2, r0, #29
    1e44:	0424      	lsls	r4, r4, #16
    1e46:	00db      	lsls	r3, r3, #3
    1e48:	4314      	orrs	r4, r2
    1e4a:	431c      	orrs	r4, r3
    1e4c:	00c3      	lsls	r3, r0, #3
    1e4e:	4699      	mov	r9, r3
    1e50:	4b68      	ldr	r3, [pc, #416]	; (1ff4 <__aeabi_dmul+0x1e0>)
    1e52:	46a3      	mov	fp, r4
    1e54:	469c      	mov	ip, r3
    1e56:	2300      	movs	r3, #0
    1e58:	2700      	movs	r7, #0
    1e5a:	4466      	add	r6, ip
    1e5c:	9302      	str	r3, [sp, #8]
    1e5e:	4643      	mov	r3, r8
    1e60:	031c      	lsls	r4, r3, #12
    1e62:	005a      	lsls	r2, r3, #1
    1e64:	0fdb      	lsrs	r3, r3, #31
    1e66:	4650      	mov	r0, sl
    1e68:	0b24      	lsrs	r4, r4, #12
    1e6a:	0d52      	lsrs	r2, r2, #21
    1e6c:	4698      	mov	r8, r3
    1e6e:	d100      	bne.n	1e72 <__aeabi_dmul+0x5e>
    1e70:	e076      	b.n	1f60 <__aeabi_dmul+0x14c>
    1e72:	4b5f      	ldr	r3, [pc, #380]	; (1ff0 <__aeabi_dmul+0x1dc>)
    1e74:	429a      	cmp	r2, r3
    1e76:	d06d      	beq.n	1f54 <__aeabi_dmul+0x140>
    1e78:	2380      	movs	r3, #128	; 0x80
    1e7a:	0f41      	lsrs	r1, r0, #29
    1e7c:	041b      	lsls	r3, r3, #16
    1e7e:	430b      	orrs	r3, r1
    1e80:	495c      	ldr	r1, [pc, #368]	; (1ff4 <__aeabi_dmul+0x1e0>)
    1e82:	00e4      	lsls	r4, r4, #3
    1e84:	468c      	mov	ip, r1
    1e86:	431c      	orrs	r4, r3
    1e88:	00c3      	lsls	r3, r0, #3
    1e8a:	2000      	movs	r0, #0
    1e8c:	4462      	add	r2, ip
    1e8e:	4641      	mov	r1, r8
    1e90:	18b6      	adds	r6, r6, r2
    1e92:	4069      	eors	r1, r5
    1e94:	1c72      	adds	r2, r6, #1
    1e96:	9101      	str	r1, [sp, #4]
    1e98:	4694      	mov	ip, r2
    1e9a:	4307      	orrs	r7, r0
    1e9c:	2f0f      	cmp	r7, #15
    1e9e:	d900      	bls.n	1ea2 <__aeabi_dmul+0x8e>
    1ea0:	e0b0      	b.n	2004 <STACK_SIZE+0x4>
    1ea2:	4a55      	ldr	r2, [pc, #340]	; (1ff8 <__aeabi_dmul+0x1e4>)
    1ea4:	00bf      	lsls	r7, r7, #2
    1ea6:	59d2      	ldr	r2, [r2, r7]
    1ea8:	4697      	mov	pc, r2
    1eaa:	465b      	mov	r3, fp
    1eac:	4303      	orrs	r3, r0
    1eae:	4699      	mov	r9, r3
    1eb0:	d000      	beq.n	1eb4 <__aeabi_dmul+0xa0>
    1eb2:	e087      	b.n	1fc4 <__aeabi_dmul+0x1b0>
    1eb4:	2300      	movs	r3, #0
    1eb6:	469b      	mov	fp, r3
    1eb8:	3302      	adds	r3, #2
    1eba:	2708      	movs	r7, #8
    1ebc:	9302      	str	r3, [sp, #8]
    1ebe:	e7ce      	b.n	1e5e <__aeabi_dmul+0x4a>
    1ec0:	4642      	mov	r2, r8
    1ec2:	9201      	str	r2, [sp, #4]
    1ec4:	2802      	cmp	r0, #2
    1ec6:	d067      	beq.n	1f98 <__aeabi_dmul+0x184>
    1ec8:	2803      	cmp	r0, #3
    1eca:	d100      	bne.n	1ece <__aeabi_dmul+0xba>
    1ecc:	e20e      	b.n	22ec <STACK_SIZE+0x2ec>
    1ece:	2801      	cmp	r0, #1
    1ed0:	d000      	beq.n	1ed4 <__aeabi_dmul+0xc0>
    1ed2:	e162      	b.n	219a <STACK_SIZE+0x19a>
    1ed4:	2300      	movs	r3, #0
    1ed6:	2400      	movs	r4, #0
    1ed8:	2200      	movs	r2, #0
    1eda:	4699      	mov	r9, r3
    1edc:	9901      	ldr	r1, [sp, #4]
    1ede:	4001      	ands	r1, r0
    1ee0:	b2cd      	uxtb	r5, r1
    1ee2:	2100      	movs	r1, #0
    1ee4:	0312      	lsls	r2, r2, #12
    1ee6:	0d0b      	lsrs	r3, r1, #20
    1ee8:	0b12      	lsrs	r2, r2, #12
    1eea:	051b      	lsls	r3, r3, #20
    1eec:	4313      	orrs	r3, r2
    1eee:	4a43      	ldr	r2, [pc, #268]	; (1ffc <__aeabi_dmul+0x1e8>)
    1ef0:	0524      	lsls	r4, r4, #20
    1ef2:	4013      	ands	r3, r2
    1ef4:	431c      	orrs	r4, r3
    1ef6:	0064      	lsls	r4, r4, #1
    1ef8:	07ed      	lsls	r5, r5, #31
    1efa:	0864      	lsrs	r4, r4, #1
    1efc:	432c      	orrs	r4, r5
    1efe:	4648      	mov	r0, r9
    1f00:	0021      	movs	r1, r4
    1f02:	b007      	add	sp, #28
    1f04:	bc3c      	pop	{r2, r3, r4, r5}
    1f06:	4690      	mov	r8, r2
    1f08:	4699      	mov	r9, r3
    1f0a:	46a2      	mov	sl, r4
    1f0c:	46ab      	mov	fp, r5
    1f0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1f10:	4303      	orrs	r3, r0
    1f12:	4699      	mov	r9, r3
    1f14:	d04f      	beq.n	1fb6 <__aeabi_dmul+0x1a2>
    1f16:	465b      	mov	r3, fp
    1f18:	2b00      	cmp	r3, #0
    1f1a:	d100      	bne.n	1f1e <__aeabi_dmul+0x10a>
    1f1c:	e189      	b.n	2232 <STACK_SIZE+0x232>
    1f1e:	4658      	mov	r0, fp
    1f20:	f000 fdfa 	bl	2b18 <__clzsi2>
    1f24:	0003      	movs	r3, r0
    1f26:	3b0b      	subs	r3, #11
    1f28:	2b1c      	cmp	r3, #28
    1f2a:	dd00      	ble.n	1f2e <__aeabi_dmul+0x11a>
    1f2c:	e17a      	b.n	2224 <STACK_SIZE+0x224>
    1f2e:	221d      	movs	r2, #29
    1f30:	1ad3      	subs	r3, r2, r3
    1f32:	003a      	movs	r2, r7
    1f34:	0001      	movs	r1, r0
    1f36:	465c      	mov	r4, fp
    1f38:	40da      	lsrs	r2, r3
    1f3a:	3908      	subs	r1, #8
    1f3c:	408c      	lsls	r4, r1
    1f3e:	0013      	movs	r3, r2
    1f40:	408f      	lsls	r7, r1
    1f42:	4323      	orrs	r3, r4
    1f44:	469b      	mov	fp, r3
    1f46:	46b9      	mov	r9, r7
    1f48:	2300      	movs	r3, #0
    1f4a:	4e2d      	ldr	r6, [pc, #180]	; (2000 <STACK_SIZE>)
    1f4c:	2700      	movs	r7, #0
    1f4e:	1a36      	subs	r6, r6, r0
    1f50:	9302      	str	r3, [sp, #8]
    1f52:	e784      	b.n	1e5e <__aeabi_dmul+0x4a>
    1f54:	4653      	mov	r3, sl
    1f56:	4323      	orrs	r3, r4
    1f58:	d12a      	bne.n	1fb0 <__aeabi_dmul+0x19c>
    1f5a:	2400      	movs	r4, #0
    1f5c:	2002      	movs	r0, #2
    1f5e:	e796      	b.n	1e8e <__aeabi_dmul+0x7a>
    1f60:	4653      	mov	r3, sl
    1f62:	4323      	orrs	r3, r4
    1f64:	d020      	beq.n	1fa8 <__aeabi_dmul+0x194>
    1f66:	2c00      	cmp	r4, #0
    1f68:	d100      	bne.n	1f6c <__aeabi_dmul+0x158>
    1f6a:	e157      	b.n	221c <STACK_SIZE+0x21c>
    1f6c:	0020      	movs	r0, r4
    1f6e:	f000 fdd3 	bl	2b18 <__clzsi2>
    1f72:	0003      	movs	r3, r0
    1f74:	3b0b      	subs	r3, #11
    1f76:	2b1c      	cmp	r3, #28
    1f78:	dd00      	ble.n	1f7c <__aeabi_dmul+0x168>
    1f7a:	e149      	b.n	2210 <STACK_SIZE+0x210>
    1f7c:	211d      	movs	r1, #29
    1f7e:	1acb      	subs	r3, r1, r3
    1f80:	4651      	mov	r1, sl
    1f82:	0002      	movs	r2, r0
    1f84:	40d9      	lsrs	r1, r3
    1f86:	4653      	mov	r3, sl
    1f88:	3a08      	subs	r2, #8
    1f8a:	4094      	lsls	r4, r2
    1f8c:	4093      	lsls	r3, r2
    1f8e:	430c      	orrs	r4, r1
    1f90:	4a1b      	ldr	r2, [pc, #108]	; (2000 <STACK_SIZE>)
    1f92:	1a12      	subs	r2, r2, r0
    1f94:	2000      	movs	r0, #0
    1f96:	e77a      	b.n	1e8e <__aeabi_dmul+0x7a>
    1f98:	2501      	movs	r5, #1
    1f9a:	9b01      	ldr	r3, [sp, #4]
    1f9c:	4c14      	ldr	r4, [pc, #80]	; (1ff0 <__aeabi_dmul+0x1dc>)
    1f9e:	401d      	ands	r5, r3
    1fa0:	2300      	movs	r3, #0
    1fa2:	2200      	movs	r2, #0
    1fa4:	4699      	mov	r9, r3
    1fa6:	e79c      	b.n	1ee2 <__aeabi_dmul+0xce>
    1fa8:	2400      	movs	r4, #0
    1faa:	2200      	movs	r2, #0
    1fac:	2001      	movs	r0, #1
    1fae:	e76e      	b.n	1e8e <__aeabi_dmul+0x7a>
    1fb0:	4653      	mov	r3, sl
    1fb2:	2003      	movs	r0, #3
    1fb4:	e76b      	b.n	1e8e <__aeabi_dmul+0x7a>
    1fb6:	2300      	movs	r3, #0
    1fb8:	469b      	mov	fp, r3
    1fba:	3301      	adds	r3, #1
    1fbc:	2704      	movs	r7, #4
    1fbe:	2600      	movs	r6, #0
    1fc0:	9302      	str	r3, [sp, #8]
    1fc2:	e74c      	b.n	1e5e <__aeabi_dmul+0x4a>
    1fc4:	2303      	movs	r3, #3
    1fc6:	4681      	mov	r9, r0
    1fc8:	270c      	movs	r7, #12
    1fca:	9302      	str	r3, [sp, #8]
    1fcc:	e747      	b.n	1e5e <__aeabi_dmul+0x4a>
    1fce:	2280      	movs	r2, #128	; 0x80
    1fd0:	2300      	movs	r3, #0
    1fd2:	2500      	movs	r5, #0
    1fd4:	0312      	lsls	r2, r2, #12
    1fd6:	4699      	mov	r9, r3
    1fd8:	4c05      	ldr	r4, [pc, #20]	; (1ff0 <__aeabi_dmul+0x1dc>)
    1fda:	e782      	b.n	1ee2 <__aeabi_dmul+0xce>
    1fdc:	465c      	mov	r4, fp
    1fde:	464b      	mov	r3, r9
    1fe0:	9802      	ldr	r0, [sp, #8]
    1fe2:	e76f      	b.n	1ec4 <__aeabi_dmul+0xb0>
    1fe4:	465c      	mov	r4, fp
    1fe6:	464b      	mov	r3, r9
    1fe8:	9501      	str	r5, [sp, #4]
    1fea:	9802      	ldr	r0, [sp, #8]
    1fec:	e76a      	b.n	1ec4 <__aeabi_dmul+0xb0>
    1fee:	46c0      	nop			; (mov r8, r8)
    1ff0:	000007ff 	.word	0x000007ff
    1ff4:	fffffc01 	.word	0xfffffc01
    1ff8:	00005ac4 	.word	0x00005ac4
    1ffc:	800fffff 	.word	0x800fffff
    2000:	fffffc0d 	.word	0xfffffc0d
    2004:	464a      	mov	r2, r9
    2006:	4649      	mov	r1, r9
    2008:	0c17      	lsrs	r7, r2, #16
    200a:	0c1a      	lsrs	r2, r3, #16
    200c:	041b      	lsls	r3, r3, #16
    200e:	0c1b      	lsrs	r3, r3, #16
    2010:	0408      	lsls	r0, r1, #16
    2012:	0019      	movs	r1, r3
    2014:	0c00      	lsrs	r0, r0, #16
    2016:	4341      	muls	r1, r0
    2018:	0015      	movs	r5, r2
    201a:	4688      	mov	r8, r1
    201c:	0019      	movs	r1, r3
    201e:	437d      	muls	r5, r7
    2020:	4379      	muls	r1, r7
    2022:	9503      	str	r5, [sp, #12]
    2024:	4689      	mov	r9, r1
    2026:	0029      	movs	r1, r5
    2028:	0015      	movs	r5, r2
    202a:	4345      	muls	r5, r0
    202c:	444d      	add	r5, r9
    202e:	9502      	str	r5, [sp, #8]
    2030:	4645      	mov	r5, r8
    2032:	0c2d      	lsrs	r5, r5, #16
    2034:	46aa      	mov	sl, r5
    2036:	9d02      	ldr	r5, [sp, #8]
    2038:	4455      	add	r5, sl
    203a:	45a9      	cmp	r9, r5
    203c:	d906      	bls.n	204c <STACK_SIZE+0x4c>
    203e:	468a      	mov	sl, r1
    2040:	2180      	movs	r1, #128	; 0x80
    2042:	0249      	lsls	r1, r1, #9
    2044:	4689      	mov	r9, r1
    2046:	44ca      	add	sl, r9
    2048:	4651      	mov	r1, sl
    204a:	9103      	str	r1, [sp, #12]
    204c:	0c29      	lsrs	r1, r5, #16
    204e:	9104      	str	r1, [sp, #16]
    2050:	4641      	mov	r1, r8
    2052:	0409      	lsls	r1, r1, #16
    2054:	042d      	lsls	r5, r5, #16
    2056:	0c09      	lsrs	r1, r1, #16
    2058:	4688      	mov	r8, r1
    205a:	0029      	movs	r1, r5
    205c:	0c25      	lsrs	r5, r4, #16
    205e:	0424      	lsls	r4, r4, #16
    2060:	4441      	add	r1, r8
    2062:	0c24      	lsrs	r4, r4, #16
    2064:	9105      	str	r1, [sp, #20]
    2066:	0021      	movs	r1, r4
    2068:	4341      	muls	r1, r0
    206a:	4688      	mov	r8, r1
    206c:	0021      	movs	r1, r4
    206e:	4379      	muls	r1, r7
    2070:	468a      	mov	sl, r1
    2072:	4368      	muls	r0, r5
    2074:	4641      	mov	r1, r8
    2076:	4450      	add	r0, sl
    2078:	4681      	mov	r9, r0
    207a:	0c08      	lsrs	r0, r1, #16
    207c:	4448      	add	r0, r9
    207e:	436f      	muls	r7, r5
    2080:	4582      	cmp	sl, r0
    2082:	d903      	bls.n	208c <STACK_SIZE+0x8c>
    2084:	2180      	movs	r1, #128	; 0x80
    2086:	0249      	lsls	r1, r1, #9
    2088:	4689      	mov	r9, r1
    208a:	444f      	add	r7, r9
    208c:	0c01      	lsrs	r1, r0, #16
    208e:	4689      	mov	r9, r1
    2090:	0039      	movs	r1, r7
    2092:	4449      	add	r1, r9
    2094:	9102      	str	r1, [sp, #8]
    2096:	4641      	mov	r1, r8
    2098:	040f      	lsls	r7, r1, #16
    209a:	9904      	ldr	r1, [sp, #16]
    209c:	0c3f      	lsrs	r7, r7, #16
    209e:	4688      	mov	r8, r1
    20a0:	0400      	lsls	r0, r0, #16
    20a2:	19c0      	adds	r0, r0, r7
    20a4:	4480      	add	r8, r0
    20a6:	4641      	mov	r1, r8
    20a8:	9104      	str	r1, [sp, #16]
    20aa:	4659      	mov	r1, fp
    20ac:	0c0f      	lsrs	r7, r1, #16
    20ae:	0409      	lsls	r1, r1, #16
    20b0:	0c09      	lsrs	r1, r1, #16
    20b2:	4688      	mov	r8, r1
    20b4:	4359      	muls	r1, r3
    20b6:	468a      	mov	sl, r1
    20b8:	0039      	movs	r1, r7
    20ba:	4351      	muls	r1, r2
    20bc:	4689      	mov	r9, r1
    20be:	4641      	mov	r1, r8
    20c0:	434a      	muls	r2, r1
    20c2:	4651      	mov	r1, sl
    20c4:	0c09      	lsrs	r1, r1, #16
    20c6:	468b      	mov	fp, r1
    20c8:	437b      	muls	r3, r7
    20ca:	18d2      	adds	r2, r2, r3
    20cc:	445a      	add	r2, fp
    20ce:	4293      	cmp	r3, r2
    20d0:	d903      	bls.n	20da <STACK_SIZE+0xda>
    20d2:	2380      	movs	r3, #128	; 0x80
    20d4:	025b      	lsls	r3, r3, #9
    20d6:	469b      	mov	fp, r3
    20d8:	44d9      	add	r9, fp
    20da:	4651      	mov	r1, sl
    20dc:	0409      	lsls	r1, r1, #16
    20de:	0c09      	lsrs	r1, r1, #16
    20e0:	468a      	mov	sl, r1
    20e2:	4641      	mov	r1, r8
    20e4:	4361      	muls	r1, r4
    20e6:	437c      	muls	r4, r7
    20e8:	0c13      	lsrs	r3, r2, #16
    20ea:	0412      	lsls	r2, r2, #16
    20ec:	444b      	add	r3, r9
    20ee:	4452      	add	r2, sl
    20f0:	46a1      	mov	r9, r4
    20f2:	468a      	mov	sl, r1
    20f4:	003c      	movs	r4, r7
    20f6:	4641      	mov	r1, r8
    20f8:	436c      	muls	r4, r5
    20fa:	434d      	muls	r5, r1
    20fc:	4651      	mov	r1, sl
    20fe:	444d      	add	r5, r9
    2100:	0c0f      	lsrs	r7, r1, #16
    2102:	197d      	adds	r5, r7, r5
    2104:	45a9      	cmp	r9, r5
    2106:	d903      	bls.n	2110 <STACK_SIZE+0x110>
    2108:	2180      	movs	r1, #128	; 0x80
    210a:	0249      	lsls	r1, r1, #9
    210c:	4688      	mov	r8, r1
    210e:	4444      	add	r4, r8
    2110:	9f04      	ldr	r7, [sp, #16]
    2112:	9903      	ldr	r1, [sp, #12]
    2114:	46b8      	mov	r8, r7
    2116:	4441      	add	r1, r8
    2118:	468b      	mov	fp, r1
    211a:	4583      	cmp	fp, r0
    211c:	4180      	sbcs	r0, r0
    211e:	4241      	negs	r1, r0
    2120:	4688      	mov	r8, r1
    2122:	4651      	mov	r1, sl
    2124:	0408      	lsls	r0, r1, #16
    2126:	042f      	lsls	r7, r5, #16
    2128:	0c00      	lsrs	r0, r0, #16
    212a:	183f      	adds	r7, r7, r0
    212c:	4658      	mov	r0, fp
    212e:	9902      	ldr	r1, [sp, #8]
    2130:	1810      	adds	r0, r2, r0
    2132:	4689      	mov	r9, r1
    2134:	4290      	cmp	r0, r2
    2136:	4192      	sbcs	r2, r2
    2138:	444f      	add	r7, r9
    213a:	46ba      	mov	sl, r7
    213c:	4252      	negs	r2, r2
    213e:	4699      	mov	r9, r3
    2140:	4693      	mov	fp, r2
    2142:	44c2      	add	sl, r8
    2144:	44d1      	add	r9, sl
    2146:	44cb      	add	fp, r9
    2148:	428f      	cmp	r7, r1
    214a:	41bf      	sbcs	r7, r7
    214c:	45c2      	cmp	sl, r8
    214e:	4189      	sbcs	r1, r1
    2150:	4599      	cmp	r9, r3
    2152:	419b      	sbcs	r3, r3
    2154:	4593      	cmp	fp, r2
    2156:	4192      	sbcs	r2, r2
    2158:	427f      	negs	r7, r7
    215a:	4249      	negs	r1, r1
    215c:	0c2d      	lsrs	r5, r5, #16
    215e:	4252      	negs	r2, r2
    2160:	430f      	orrs	r7, r1
    2162:	425b      	negs	r3, r3
    2164:	4313      	orrs	r3, r2
    2166:	197f      	adds	r7, r7, r5
    2168:	18ff      	adds	r7, r7, r3
    216a:	465b      	mov	r3, fp
    216c:	193c      	adds	r4, r7, r4
    216e:	0ddb      	lsrs	r3, r3, #23
    2170:	9a05      	ldr	r2, [sp, #20]
    2172:	0264      	lsls	r4, r4, #9
    2174:	431c      	orrs	r4, r3
    2176:	0243      	lsls	r3, r0, #9
    2178:	4313      	orrs	r3, r2
    217a:	1e5d      	subs	r5, r3, #1
    217c:	41ab      	sbcs	r3, r5
    217e:	465a      	mov	r2, fp
    2180:	0dc0      	lsrs	r0, r0, #23
    2182:	4303      	orrs	r3, r0
    2184:	0252      	lsls	r2, r2, #9
    2186:	4313      	orrs	r3, r2
    2188:	01e2      	lsls	r2, r4, #7
    218a:	d556      	bpl.n	223a <STACK_SIZE+0x23a>
    218c:	2001      	movs	r0, #1
    218e:	085a      	lsrs	r2, r3, #1
    2190:	4003      	ands	r3, r0
    2192:	4313      	orrs	r3, r2
    2194:	07e2      	lsls	r2, r4, #31
    2196:	4313      	orrs	r3, r2
    2198:	0864      	lsrs	r4, r4, #1
    219a:	485a      	ldr	r0, [pc, #360]	; (2304 <STACK_SIZE+0x304>)
    219c:	4460      	add	r0, ip
    219e:	2800      	cmp	r0, #0
    21a0:	dd4d      	ble.n	223e <STACK_SIZE+0x23e>
    21a2:	075a      	lsls	r2, r3, #29
    21a4:	d009      	beq.n	21ba <STACK_SIZE+0x1ba>
    21a6:	220f      	movs	r2, #15
    21a8:	401a      	ands	r2, r3
    21aa:	2a04      	cmp	r2, #4
    21ac:	d005      	beq.n	21ba <STACK_SIZE+0x1ba>
    21ae:	1d1a      	adds	r2, r3, #4
    21b0:	429a      	cmp	r2, r3
    21b2:	419b      	sbcs	r3, r3
    21b4:	425b      	negs	r3, r3
    21b6:	18e4      	adds	r4, r4, r3
    21b8:	0013      	movs	r3, r2
    21ba:	01e2      	lsls	r2, r4, #7
    21bc:	d504      	bpl.n	21c8 <STACK_SIZE+0x1c8>
    21be:	2080      	movs	r0, #128	; 0x80
    21c0:	4a51      	ldr	r2, [pc, #324]	; (2308 <STACK_SIZE+0x308>)
    21c2:	00c0      	lsls	r0, r0, #3
    21c4:	4014      	ands	r4, r2
    21c6:	4460      	add	r0, ip
    21c8:	4a50      	ldr	r2, [pc, #320]	; (230c <STACK_SIZE+0x30c>)
    21ca:	4290      	cmp	r0, r2
    21cc:	dd00      	ble.n	21d0 <STACK_SIZE+0x1d0>
    21ce:	e6e3      	b.n	1f98 <__aeabi_dmul+0x184>
    21d0:	2501      	movs	r5, #1
    21d2:	08db      	lsrs	r3, r3, #3
    21d4:	0762      	lsls	r2, r4, #29
    21d6:	431a      	orrs	r2, r3
    21d8:	0264      	lsls	r4, r4, #9
    21da:	9b01      	ldr	r3, [sp, #4]
    21dc:	4691      	mov	r9, r2
    21de:	0b22      	lsrs	r2, r4, #12
    21e0:	0544      	lsls	r4, r0, #21
    21e2:	0d64      	lsrs	r4, r4, #21
    21e4:	401d      	ands	r5, r3
    21e6:	e67c      	b.n	1ee2 <__aeabi_dmul+0xce>
    21e8:	2280      	movs	r2, #128	; 0x80
    21ea:	4659      	mov	r1, fp
    21ec:	0312      	lsls	r2, r2, #12
    21ee:	4211      	tst	r1, r2
    21f0:	d008      	beq.n	2204 <STACK_SIZE+0x204>
    21f2:	4214      	tst	r4, r2
    21f4:	d106      	bne.n	2204 <STACK_SIZE+0x204>
    21f6:	4322      	orrs	r2, r4
    21f8:	0312      	lsls	r2, r2, #12
    21fa:	0b12      	lsrs	r2, r2, #12
    21fc:	4645      	mov	r5, r8
    21fe:	4699      	mov	r9, r3
    2200:	4c43      	ldr	r4, [pc, #268]	; (2310 <STACK_SIZE+0x310>)
    2202:	e66e      	b.n	1ee2 <__aeabi_dmul+0xce>
    2204:	465b      	mov	r3, fp
    2206:	431a      	orrs	r2, r3
    2208:	0312      	lsls	r2, r2, #12
    220a:	0b12      	lsrs	r2, r2, #12
    220c:	4c40      	ldr	r4, [pc, #256]	; (2310 <STACK_SIZE+0x310>)
    220e:	e668      	b.n	1ee2 <__aeabi_dmul+0xce>
    2210:	0003      	movs	r3, r0
    2212:	4654      	mov	r4, sl
    2214:	3b28      	subs	r3, #40	; 0x28
    2216:	409c      	lsls	r4, r3
    2218:	2300      	movs	r3, #0
    221a:	e6b9      	b.n	1f90 <__aeabi_dmul+0x17c>
    221c:	f000 fc7c 	bl	2b18 <__clzsi2>
    2220:	3020      	adds	r0, #32
    2222:	e6a6      	b.n	1f72 <__aeabi_dmul+0x15e>
    2224:	0003      	movs	r3, r0
    2226:	3b28      	subs	r3, #40	; 0x28
    2228:	409f      	lsls	r7, r3
    222a:	2300      	movs	r3, #0
    222c:	46bb      	mov	fp, r7
    222e:	4699      	mov	r9, r3
    2230:	e68a      	b.n	1f48 <__aeabi_dmul+0x134>
    2232:	f000 fc71 	bl	2b18 <__clzsi2>
    2236:	3020      	adds	r0, #32
    2238:	e674      	b.n	1f24 <__aeabi_dmul+0x110>
    223a:	46b4      	mov	ip, r6
    223c:	e7ad      	b.n	219a <STACK_SIZE+0x19a>
    223e:	2501      	movs	r5, #1
    2240:	1a2a      	subs	r2, r5, r0
    2242:	2a38      	cmp	r2, #56	; 0x38
    2244:	dd06      	ble.n	2254 <STACK_SIZE+0x254>
    2246:	9b01      	ldr	r3, [sp, #4]
    2248:	2400      	movs	r4, #0
    224a:	401d      	ands	r5, r3
    224c:	2300      	movs	r3, #0
    224e:	2200      	movs	r2, #0
    2250:	4699      	mov	r9, r3
    2252:	e646      	b.n	1ee2 <__aeabi_dmul+0xce>
    2254:	2a1f      	cmp	r2, #31
    2256:	dc21      	bgt.n	229c <STACK_SIZE+0x29c>
    2258:	2520      	movs	r5, #32
    225a:	0020      	movs	r0, r4
    225c:	1aad      	subs	r5, r5, r2
    225e:	001e      	movs	r6, r3
    2260:	40ab      	lsls	r3, r5
    2262:	40a8      	lsls	r0, r5
    2264:	40d6      	lsrs	r6, r2
    2266:	1e5d      	subs	r5, r3, #1
    2268:	41ab      	sbcs	r3, r5
    226a:	4330      	orrs	r0, r6
    226c:	4318      	orrs	r0, r3
    226e:	40d4      	lsrs	r4, r2
    2270:	0743      	lsls	r3, r0, #29
    2272:	d009      	beq.n	2288 <STACK_SIZE+0x288>
    2274:	230f      	movs	r3, #15
    2276:	4003      	ands	r3, r0
    2278:	2b04      	cmp	r3, #4
    227a:	d005      	beq.n	2288 <STACK_SIZE+0x288>
    227c:	0003      	movs	r3, r0
    227e:	1d18      	adds	r0, r3, #4
    2280:	4298      	cmp	r0, r3
    2282:	419b      	sbcs	r3, r3
    2284:	425b      	negs	r3, r3
    2286:	18e4      	adds	r4, r4, r3
    2288:	0223      	lsls	r3, r4, #8
    228a:	d521      	bpl.n	22d0 <STACK_SIZE+0x2d0>
    228c:	2501      	movs	r5, #1
    228e:	9b01      	ldr	r3, [sp, #4]
    2290:	2401      	movs	r4, #1
    2292:	401d      	ands	r5, r3
    2294:	2300      	movs	r3, #0
    2296:	2200      	movs	r2, #0
    2298:	4699      	mov	r9, r3
    229a:	e622      	b.n	1ee2 <__aeabi_dmul+0xce>
    229c:	251f      	movs	r5, #31
    229e:	0021      	movs	r1, r4
    22a0:	426d      	negs	r5, r5
    22a2:	1a28      	subs	r0, r5, r0
    22a4:	40c1      	lsrs	r1, r0
    22a6:	0008      	movs	r0, r1
    22a8:	2a20      	cmp	r2, #32
    22aa:	d01d      	beq.n	22e8 <STACK_SIZE+0x2e8>
    22ac:	355f      	adds	r5, #95	; 0x5f
    22ae:	1aaa      	subs	r2, r5, r2
    22b0:	4094      	lsls	r4, r2
    22b2:	4323      	orrs	r3, r4
    22b4:	1e5c      	subs	r4, r3, #1
    22b6:	41a3      	sbcs	r3, r4
    22b8:	2507      	movs	r5, #7
    22ba:	4303      	orrs	r3, r0
    22bc:	401d      	ands	r5, r3
    22be:	2200      	movs	r2, #0
    22c0:	2d00      	cmp	r5, #0
    22c2:	d009      	beq.n	22d8 <STACK_SIZE+0x2d8>
    22c4:	220f      	movs	r2, #15
    22c6:	2400      	movs	r4, #0
    22c8:	401a      	ands	r2, r3
    22ca:	0018      	movs	r0, r3
    22cc:	2a04      	cmp	r2, #4
    22ce:	d1d6      	bne.n	227e <STACK_SIZE+0x27e>
    22d0:	0003      	movs	r3, r0
    22d2:	0765      	lsls	r5, r4, #29
    22d4:	0264      	lsls	r4, r4, #9
    22d6:	0b22      	lsrs	r2, r4, #12
    22d8:	08db      	lsrs	r3, r3, #3
    22da:	432b      	orrs	r3, r5
    22dc:	2501      	movs	r5, #1
    22de:	4699      	mov	r9, r3
    22e0:	9b01      	ldr	r3, [sp, #4]
    22e2:	2400      	movs	r4, #0
    22e4:	401d      	ands	r5, r3
    22e6:	e5fc      	b.n	1ee2 <__aeabi_dmul+0xce>
    22e8:	2400      	movs	r4, #0
    22ea:	e7e2      	b.n	22b2 <STACK_SIZE+0x2b2>
    22ec:	2280      	movs	r2, #128	; 0x80
    22ee:	2501      	movs	r5, #1
    22f0:	0312      	lsls	r2, r2, #12
    22f2:	4322      	orrs	r2, r4
    22f4:	9901      	ldr	r1, [sp, #4]
    22f6:	0312      	lsls	r2, r2, #12
    22f8:	0b12      	lsrs	r2, r2, #12
    22fa:	400d      	ands	r5, r1
    22fc:	4699      	mov	r9, r3
    22fe:	4c04      	ldr	r4, [pc, #16]	; (2310 <STACK_SIZE+0x310>)
    2300:	e5ef      	b.n	1ee2 <__aeabi_dmul+0xce>
    2302:	46c0      	nop			; (mov r8, r8)
    2304:	000003ff 	.word	0x000003ff
    2308:	feffffff 	.word	0xfeffffff
    230c:	000007fe 	.word	0x000007fe
    2310:	000007ff 	.word	0x000007ff

00002314 <__aeabi_dsub>:
    2314:	b5f0      	push	{r4, r5, r6, r7, lr}
    2316:	4646      	mov	r6, r8
    2318:	46d6      	mov	lr, sl
    231a:	464f      	mov	r7, r9
    231c:	030c      	lsls	r4, r1, #12
    231e:	b5c0      	push	{r6, r7, lr}
    2320:	0fcd      	lsrs	r5, r1, #31
    2322:	004e      	lsls	r6, r1, #1
    2324:	0a61      	lsrs	r1, r4, #9
    2326:	0f44      	lsrs	r4, r0, #29
    2328:	430c      	orrs	r4, r1
    232a:	00c1      	lsls	r1, r0, #3
    232c:	0058      	lsls	r0, r3, #1
    232e:	0d40      	lsrs	r0, r0, #21
    2330:	4684      	mov	ip, r0
    2332:	468a      	mov	sl, r1
    2334:	000f      	movs	r7, r1
    2336:	0319      	lsls	r1, r3, #12
    2338:	0f50      	lsrs	r0, r2, #29
    233a:	0a49      	lsrs	r1, r1, #9
    233c:	4301      	orrs	r1, r0
    233e:	48c6      	ldr	r0, [pc, #792]	; (2658 <__aeabi_dsub+0x344>)
    2340:	0d76      	lsrs	r6, r6, #21
    2342:	46a8      	mov	r8, r5
    2344:	0fdb      	lsrs	r3, r3, #31
    2346:	00d2      	lsls	r2, r2, #3
    2348:	4584      	cmp	ip, r0
    234a:	d100      	bne.n	234e <__aeabi_dsub+0x3a>
    234c:	e0d8      	b.n	2500 <__aeabi_dsub+0x1ec>
    234e:	2001      	movs	r0, #1
    2350:	4043      	eors	r3, r0
    2352:	42ab      	cmp	r3, r5
    2354:	d100      	bne.n	2358 <__aeabi_dsub+0x44>
    2356:	e0a6      	b.n	24a6 <__aeabi_dsub+0x192>
    2358:	4660      	mov	r0, ip
    235a:	1a35      	subs	r5, r6, r0
    235c:	2d00      	cmp	r5, #0
    235e:	dc00      	bgt.n	2362 <__aeabi_dsub+0x4e>
    2360:	e105      	b.n	256e <__aeabi_dsub+0x25a>
    2362:	2800      	cmp	r0, #0
    2364:	d110      	bne.n	2388 <__aeabi_dsub+0x74>
    2366:	000b      	movs	r3, r1
    2368:	4313      	orrs	r3, r2
    236a:	d100      	bne.n	236e <__aeabi_dsub+0x5a>
    236c:	e0d7      	b.n	251e <__aeabi_dsub+0x20a>
    236e:	1e6b      	subs	r3, r5, #1
    2370:	2b00      	cmp	r3, #0
    2372:	d000      	beq.n	2376 <__aeabi_dsub+0x62>
    2374:	e14b      	b.n	260e <__aeabi_dsub+0x2fa>
    2376:	4653      	mov	r3, sl
    2378:	1a9f      	subs	r7, r3, r2
    237a:	45ba      	cmp	sl, r7
    237c:	4180      	sbcs	r0, r0
    237e:	1a64      	subs	r4, r4, r1
    2380:	4240      	negs	r0, r0
    2382:	1a24      	subs	r4, r4, r0
    2384:	2601      	movs	r6, #1
    2386:	e01e      	b.n	23c6 <__aeabi_dsub+0xb2>
    2388:	4bb3      	ldr	r3, [pc, #716]	; (2658 <__aeabi_dsub+0x344>)
    238a:	429e      	cmp	r6, r3
    238c:	d048      	beq.n	2420 <__aeabi_dsub+0x10c>
    238e:	2380      	movs	r3, #128	; 0x80
    2390:	041b      	lsls	r3, r3, #16
    2392:	4319      	orrs	r1, r3
    2394:	2d38      	cmp	r5, #56	; 0x38
    2396:	dd00      	ble.n	239a <__aeabi_dsub+0x86>
    2398:	e119      	b.n	25ce <__aeabi_dsub+0x2ba>
    239a:	2d1f      	cmp	r5, #31
    239c:	dd00      	ble.n	23a0 <__aeabi_dsub+0x8c>
    239e:	e14c      	b.n	263a <__aeabi_dsub+0x326>
    23a0:	2320      	movs	r3, #32
    23a2:	000f      	movs	r7, r1
    23a4:	1b5b      	subs	r3, r3, r5
    23a6:	0010      	movs	r0, r2
    23a8:	409a      	lsls	r2, r3
    23aa:	409f      	lsls	r7, r3
    23ac:	40e8      	lsrs	r0, r5
    23ae:	1e53      	subs	r3, r2, #1
    23b0:	419a      	sbcs	r2, r3
    23b2:	40e9      	lsrs	r1, r5
    23b4:	4307      	orrs	r7, r0
    23b6:	4317      	orrs	r7, r2
    23b8:	4653      	mov	r3, sl
    23ba:	1bdf      	subs	r7, r3, r7
    23bc:	1a61      	subs	r1, r4, r1
    23be:	45ba      	cmp	sl, r7
    23c0:	41a4      	sbcs	r4, r4
    23c2:	4264      	negs	r4, r4
    23c4:	1b0c      	subs	r4, r1, r4
    23c6:	0223      	lsls	r3, r4, #8
    23c8:	d400      	bmi.n	23cc <__aeabi_dsub+0xb8>
    23ca:	e0c5      	b.n	2558 <__aeabi_dsub+0x244>
    23cc:	0264      	lsls	r4, r4, #9
    23ce:	0a65      	lsrs	r5, r4, #9
    23d0:	2d00      	cmp	r5, #0
    23d2:	d100      	bne.n	23d6 <__aeabi_dsub+0xc2>
    23d4:	e0f6      	b.n	25c4 <__aeabi_dsub+0x2b0>
    23d6:	0028      	movs	r0, r5
    23d8:	f000 fb9e 	bl	2b18 <__clzsi2>
    23dc:	0003      	movs	r3, r0
    23de:	3b08      	subs	r3, #8
    23e0:	2b1f      	cmp	r3, #31
    23e2:	dd00      	ble.n	23e6 <__aeabi_dsub+0xd2>
    23e4:	e0e9      	b.n	25ba <__aeabi_dsub+0x2a6>
    23e6:	2220      	movs	r2, #32
    23e8:	003c      	movs	r4, r7
    23ea:	1ad2      	subs	r2, r2, r3
    23ec:	409d      	lsls	r5, r3
    23ee:	40d4      	lsrs	r4, r2
    23f0:	409f      	lsls	r7, r3
    23f2:	4325      	orrs	r5, r4
    23f4:	429e      	cmp	r6, r3
    23f6:	dd00      	ble.n	23fa <__aeabi_dsub+0xe6>
    23f8:	e0db      	b.n	25b2 <__aeabi_dsub+0x29e>
    23fa:	1b9e      	subs	r6, r3, r6
    23fc:	1c73      	adds	r3, r6, #1
    23fe:	2b1f      	cmp	r3, #31
    2400:	dd00      	ble.n	2404 <__aeabi_dsub+0xf0>
    2402:	e10a      	b.n	261a <__aeabi_dsub+0x306>
    2404:	2220      	movs	r2, #32
    2406:	0038      	movs	r0, r7
    2408:	1ad2      	subs	r2, r2, r3
    240a:	0029      	movs	r1, r5
    240c:	4097      	lsls	r7, r2
    240e:	002c      	movs	r4, r5
    2410:	4091      	lsls	r1, r2
    2412:	40d8      	lsrs	r0, r3
    2414:	1e7a      	subs	r2, r7, #1
    2416:	4197      	sbcs	r7, r2
    2418:	40dc      	lsrs	r4, r3
    241a:	2600      	movs	r6, #0
    241c:	4301      	orrs	r1, r0
    241e:	430f      	orrs	r7, r1
    2420:	077b      	lsls	r3, r7, #29
    2422:	d009      	beq.n	2438 <__aeabi_dsub+0x124>
    2424:	230f      	movs	r3, #15
    2426:	403b      	ands	r3, r7
    2428:	2b04      	cmp	r3, #4
    242a:	d005      	beq.n	2438 <__aeabi_dsub+0x124>
    242c:	1d3b      	adds	r3, r7, #4
    242e:	42bb      	cmp	r3, r7
    2430:	41bf      	sbcs	r7, r7
    2432:	427f      	negs	r7, r7
    2434:	19e4      	adds	r4, r4, r7
    2436:	001f      	movs	r7, r3
    2438:	0223      	lsls	r3, r4, #8
    243a:	d525      	bpl.n	2488 <__aeabi_dsub+0x174>
    243c:	4b86      	ldr	r3, [pc, #536]	; (2658 <__aeabi_dsub+0x344>)
    243e:	3601      	adds	r6, #1
    2440:	429e      	cmp	r6, r3
    2442:	d100      	bne.n	2446 <__aeabi_dsub+0x132>
    2444:	e0af      	b.n	25a6 <__aeabi_dsub+0x292>
    2446:	4b85      	ldr	r3, [pc, #532]	; (265c <__aeabi_dsub+0x348>)
    2448:	2501      	movs	r5, #1
    244a:	401c      	ands	r4, r3
    244c:	4643      	mov	r3, r8
    244e:	0762      	lsls	r2, r4, #29
    2450:	08ff      	lsrs	r7, r7, #3
    2452:	0264      	lsls	r4, r4, #9
    2454:	0576      	lsls	r6, r6, #21
    2456:	4317      	orrs	r7, r2
    2458:	0b24      	lsrs	r4, r4, #12
    245a:	0d76      	lsrs	r6, r6, #21
    245c:	401d      	ands	r5, r3
    245e:	2100      	movs	r1, #0
    2460:	0324      	lsls	r4, r4, #12
    2462:	0b23      	lsrs	r3, r4, #12
    2464:	0d0c      	lsrs	r4, r1, #20
    2466:	4a7e      	ldr	r2, [pc, #504]	; (2660 <__aeabi_dsub+0x34c>)
    2468:	0524      	lsls	r4, r4, #20
    246a:	431c      	orrs	r4, r3
    246c:	4014      	ands	r4, r2
    246e:	0533      	lsls	r3, r6, #20
    2470:	4323      	orrs	r3, r4
    2472:	005b      	lsls	r3, r3, #1
    2474:	07ed      	lsls	r5, r5, #31
    2476:	085b      	lsrs	r3, r3, #1
    2478:	432b      	orrs	r3, r5
    247a:	0038      	movs	r0, r7
    247c:	0019      	movs	r1, r3
    247e:	bc1c      	pop	{r2, r3, r4}
    2480:	4690      	mov	r8, r2
    2482:	4699      	mov	r9, r3
    2484:	46a2      	mov	sl, r4
    2486:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2488:	2501      	movs	r5, #1
    248a:	4643      	mov	r3, r8
    248c:	0762      	lsls	r2, r4, #29
    248e:	08ff      	lsrs	r7, r7, #3
    2490:	4317      	orrs	r7, r2
    2492:	08e4      	lsrs	r4, r4, #3
    2494:	401d      	ands	r5, r3
    2496:	4b70      	ldr	r3, [pc, #448]	; (2658 <__aeabi_dsub+0x344>)
    2498:	429e      	cmp	r6, r3
    249a:	d036      	beq.n	250a <__aeabi_dsub+0x1f6>
    249c:	0324      	lsls	r4, r4, #12
    249e:	0576      	lsls	r6, r6, #21
    24a0:	0b24      	lsrs	r4, r4, #12
    24a2:	0d76      	lsrs	r6, r6, #21
    24a4:	e7db      	b.n	245e <__aeabi_dsub+0x14a>
    24a6:	4663      	mov	r3, ip
    24a8:	1af3      	subs	r3, r6, r3
    24aa:	2b00      	cmp	r3, #0
    24ac:	dc00      	bgt.n	24b0 <__aeabi_dsub+0x19c>
    24ae:	e094      	b.n	25da <__aeabi_dsub+0x2c6>
    24b0:	4660      	mov	r0, ip
    24b2:	2800      	cmp	r0, #0
    24b4:	d035      	beq.n	2522 <__aeabi_dsub+0x20e>
    24b6:	4868      	ldr	r0, [pc, #416]	; (2658 <__aeabi_dsub+0x344>)
    24b8:	4286      	cmp	r6, r0
    24ba:	d0b1      	beq.n	2420 <__aeabi_dsub+0x10c>
    24bc:	2780      	movs	r7, #128	; 0x80
    24be:	043f      	lsls	r7, r7, #16
    24c0:	4339      	orrs	r1, r7
    24c2:	2b38      	cmp	r3, #56	; 0x38
    24c4:	dc00      	bgt.n	24c8 <__aeabi_dsub+0x1b4>
    24c6:	e0fd      	b.n	26c4 <__aeabi_dsub+0x3b0>
    24c8:	430a      	orrs	r2, r1
    24ca:	0017      	movs	r7, r2
    24cc:	2100      	movs	r1, #0
    24ce:	1e7a      	subs	r2, r7, #1
    24d0:	4197      	sbcs	r7, r2
    24d2:	4457      	add	r7, sl
    24d4:	4557      	cmp	r7, sl
    24d6:	4180      	sbcs	r0, r0
    24d8:	1909      	adds	r1, r1, r4
    24da:	4244      	negs	r4, r0
    24dc:	190c      	adds	r4, r1, r4
    24de:	0223      	lsls	r3, r4, #8
    24e0:	d53a      	bpl.n	2558 <__aeabi_dsub+0x244>
    24e2:	4b5d      	ldr	r3, [pc, #372]	; (2658 <__aeabi_dsub+0x344>)
    24e4:	3601      	adds	r6, #1
    24e6:	429e      	cmp	r6, r3
    24e8:	d100      	bne.n	24ec <__aeabi_dsub+0x1d8>
    24ea:	e14b      	b.n	2784 <__aeabi_dsub+0x470>
    24ec:	2201      	movs	r2, #1
    24ee:	4b5b      	ldr	r3, [pc, #364]	; (265c <__aeabi_dsub+0x348>)
    24f0:	401c      	ands	r4, r3
    24f2:	087b      	lsrs	r3, r7, #1
    24f4:	4017      	ands	r7, r2
    24f6:	431f      	orrs	r7, r3
    24f8:	07e2      	lsls	r2, r4, #31
    24fa:	4317      	orrs	r7, r2
    24fc:	0864      	lsrs	r4, r4, #1
    24fe:	e78f      	b.n	2420 <__aeabi_dsub+0x10c>
    2500:	0008      	movs	r0, r1
    2502:	4310      	orrs	r0, r2
    2504:	d000      	beq.n	2508 <__aeabi_dsub+0x1f4>
    2506:	e724      	b.n	2352 <__aeabi_dsub+0x3e>
    2508:	e721      	b.n	234e <__aeabi_dsub+0x3a>
    250a:	0023      	movs	r3, r4
    250c:	433b      	orrs	r3, r7
    250e:	d100      	bne.n	2512 <__aeabi_dsub+0x1fe>
    2510:	e1b9      	b.n	2886 <__aeabi_dsub+0x572>
    2512:	2280      	movs	r2, #128	; 0x80
    2514:	0312      	lsls	r2, r2, #12
    2516:	4314      	orrs	r4, r2
    2518:	0324      	lsls	r4, r4, #12
    251a:	0b24      	lsrs	r4, r4, #12
    251c:	e79f      	b.n	245e <__aeabi_dsub+0x14a>
    251e:	002e      	movs	r6, r5
    2520:	e77e      	b.n	2420 <__aeabi_dsub+0x10c>
    2522:	0008      	movs	r0, r1
    2524:	4310      	orrs	r0, r2
    2526:	d100      	bne.n	252a <__aeabi_dsub+0x216>
    2528:	e0ca      	b.n	26c0 <__aeabi_dsub+0x3ac>
    252a:	1e58      	subs	r0, r3, #1
    252c:	4684      	mov	ip, r0
    252e:	2800      	cmp	r0, #0
    2530:	d000      	beq.n	2534 <__aeabi_dsub+0x220>
    2532:	e0e7      	b.n	2704 <__aeabi_dsub+0x3f0>
    2534:	4452      	add	r2, sl
    2536:	4552      	cmp	r2, sl
    2538:	4180      	sbcs	r0, r0
    253a:	1864      	adds	r4, r4, r1
    253c:	4240      	negs	r0, r0
    253e:	1824      	adds	r4, r4, r0
    2540:	0017      	movs	r7, r2
    2542:	2601      	movs	r6, #1
    2544:	0223      	lsls	r3, r4, #8
    2546:	d507      	bpl.n	2558 <__aeabi_dsub+0x244>
    2548:	2602      	movs	r6, #2
    254a:	e7cf      	b.n	24ec <__aeabi_dsub+0x1d8>
    254c:	4664      	mov	r4, ip
    254e:	432c      	orrs	r4, r5
    2550:	d100      	bne.n	2554 <__aeabi_dsub+0x240>
    2552:	e1b3      	b.n	28bc <__aeabi_dsub+0x5a8>
    2554:	002c      	movs	r4, r5
    2556:	4667      	mov	r7, ip
    2558:	077b      	lsls	r3, r7, #29
    255a:	d000      	beq.n	255e <__aeabi_dsub+0x24a>
    255c:	e762      	b.n	2424 <__aeabi_dsub+0x110>
    255e:	0763      	lsls	r3, r4, #29
    2560:	08ff      	lsrs	r7, r7, #3
    2562:	431f      	orrs	r7, r3
    2564:	2501      	movs	r5, #1
    2566:	4643      	mov	r3, r8
    2568:	08e4      	lsrs	r4, r4, #3
    256a:	401d      	ands	r5, r3
    256c:	e793      	b.n	2496 <__aeabi_dsub+0x182>
    256e:	2d00      	cmp	r5, #0
    2570:	d178      	bne.n	2664 <__aeabi_dsub+0x350>
    2572:	1c75      	adds	r5, r6, #1
    2574:	056d      	lsls	r5, r5, #21
    2576:	0d6d      	lsrs	r5, r5, #21
    2578:	2d01      	cmp	r5, #1
    257a:	dc00      	bgt.n	257e <__aeabi_dsub+0x26a>
    257c:	e0f2      	b.n	2764 <__aeabi_dsub+0x450>
    257e:	4650      	mov	r0, sl
    2580:	1a80      	subs	r0, r0, r2
    2582:	4582      	cmp	sl, r0
    2584:	41bf      	sbcs	r7, r7
    2586:	1a65      	subs	r5, r4, r1
    2588:	427f      	negs	r7, r7
    258a:	1bed      	subs	r5, r5, r7
    258c:	4684      	mov	ip, r0
    258e:	0228      	lsls	r0, r5, #8
    2590:	d400      	bmi.n	2594 <__aeabi_dsub+0x280>
    2592:	e08c      	b.n	26ae <__aeabi_dsub+0x39a>
    2594:	4650      	mov	r0, sl
    2596:	1a17      	subs	r7, r2, r0
    2598:	42ba      	cmp	r2, r7
    259a:	4192      	sbcs	r2, r2
    259c:	1b0c      	subs	r4, r1, r4
    259e:	4255      	negs	r5, r2
    25a0:	1b65      	subs	r5, r4, r5
    25a2:	4698      	mov	r8, r3
    25a4:	e714      	b.n	23d0 <__aeabi_dsub+0xbc>
    25a6:	2501      	movs	r5, #1
    25a8:	4643      	mov	r3, r8
    25aa:	2400      	movs	r4, #0
    25ac:	401d      	ands	r5, r3
    25ae:	2700      	movs	r7, #0
    25b0:	e755      	b.n	245e <__aeabi_dsub+0x14a>
    25b2:	4c2a      	ldr	r4, [pc, #168]	; (265c <__aeabi_dsub+0x348>)
    25b4:	1af6      	subs	r6, r6, r3
    25b6:	402c      	ands	r4, r5
    25b8:	e732      	b.n	2420 <__aeabi_dsub+0x10c>
    25ba:	003d      	movs	r5, r7
    25bc:	3828      	subs	r0, #40	; 0x28
    25be:	4085      	lsls	r5, r0
    25c0:	2700      	movs	r7, #0
    25c2:	e717      	b.n	23f4 <__aeabi_dsub+0xe0>
    25c4:	0038      	movs	r0, r7
    25c6:	f000 faa7 	bl	2b18 <__clzsi2>
    25ca:	3020      	adds	r0, #32
    25cc:	e706      	b.n	23dc <__aeabi_dsub+0xc8>
    25ce:	430a      	orrs	r2, r1
    25d0:	0017      	movs	r7, r2
    25d2:	2100      	movs	r1, #0
    25d4:	1e7a      	subs	r2, r7, #1
    25d6:	4197      	sbcs	r7, r2
    25d8:	e6ee      	b.n	23b8 <__aeabi_dsub+0xa4>
    25da:	2b00      	cmp	r3, #0
    25dc:	d000      	beq.n	25e0 <__aeabi_dsub+0x2cc>
    25de:	e0e5      	b.n	27ac <__aeabi_dsub+0x498>
    25e0:	1c73      	adds	r3, r6, #1
    25e2:	469c      	mov	ip, r3
    25e4:	055b      	lsls	r3, r3, #21
    25e6:	0d5b      	lsrs	r3, r3, #21
    25e8:	2b01      	cmp	r3, #1
    25ea:	dc00      	bgt.n	25ee <__aeabi_dsub+0x2da>
    25ec:	e09f      	b.n	272e <__aeabi_dsub+0x41a>
    25ee:	4b1a      	ldr	r3, [pc, #104]	; (2658 <__aeabi_dsub+0x344>)
    25f0:	459c      	cmp	ip, r3
    25f2:	d100      	bne.n	25f6 <__aeabi_dsub+0x2e2>
    25f4:	e0c5      	b.n	2782 <__aeabi_dsub+0x46e>
    25f6:	4452      	add	r2, sl
    25f8:	4552      	cmp	r2, sl
    25fa:	4180      	sbcs	r0, r0
    25fc:	1864      	adds	r4, r4, r1
    25fe:	4240      	negs	r0, r0
    2600:	1824      	adds	r4, r4, r0
    2602:	07e7      	lsls	r7, r4, #31
    2604:	0852      	lsrs	r2, r2, #1
    2606:	4317      	orrs	r7, r2
    2608:	0864      	lsrs	r4, r4, #1
    260a:	4666      	mov	r6, ip
    260c:	e708      	b.n	2420 <__aeabi_dsub+0x10c>
    260e:	4812      	ldr	r0, [pc, #72]	; (2658 <__aeabi_dsub+0x344>)
    2610:	4285      	cmp	r5, r0
    2612:	d100      	bne.n	2616 <__aeabi_dsub+0x302>
    2614:	e085      	b.n	2722 <__aeabi_dsub+0x40e>
    2616:	001d      	movs	r5, r3
    2618:	e6bc      	b.n	2394 <__aeabi_dsub+0x80>
    261a:	0029      	movs	r1, r5
    261c:	3e1f      	subs	r6, #31
    261e:	40f1      	lsrs	r1, r6
    2620:	2b20      	cmp	r3, #32
    2622:	d100      	bne.n	2626 <__aeabi_dsub+0x312>
    2624:	e07f      	b.n	2726 <__aeabi_dsub+0x412>
    2626:	2240      	movs	r2, #64	; 0x40
    2628:	1ad3      	subs	r3, r2, r3
    262a:	409d      	lsls	r5, r3
    262c:	432f      	orrs	r7, r5
    262e:	1e7d      	subs	r5, r7, #1
    2630:	41af      	sbcs	r7, r5
    2632:	2400      	movs	r4, #0
    2634:	430f      	orrs	r7, r1
    2636:	2600      	movs	r6, #0
    2638:	e78e      	b.n	2558 <__aeabi_dsub+0x244>
    263a:	002b      	movs	r3, r5
    263c:	000f      	movs	r7, r1
    263e:	3b20      	subs	r3, #32
    2640:	40df      	lsrs	r7, r3
    2642:	2d20      	cmp	r5, #32
    2644:	d071      	beq.n	272a <__aeabi_dsub+0x416>
    2646:	2340      	movs	r3, #64	; 0x40
    2648:	1b5d      	subs	r5, r3, r5
    264a:	40a9      	lsls	r1, r5
    264c:	430a      	orrs	r2, r1
    264e:	1e51      	subs	r1, r2, #1
    2650:	418a      	sbcs	r2, r1
    2652:	2100      	movs	r1, #0
    2654:	4317      	orrs	r7, r2
    2656:	e6af      	b.n	23b8 <__aeabi_dsub+0xa4>
    2658:	000007ff 	.word	0x000007ff
    265c:	ff7fffff 	.word	0xff7fffff
    2660:	800fffff 	.word	0x800fffff
    2664:	2e00      	cmp	r6, #0
    2666:	d03e      	beq.n	26e6 <__aeabi_dsub+0x3d2>
    2668:	4eb3      	ldr	r6, [pc, #716]	; (2938 <__aeabi_dsub+0x624>)
    266a:	45b4      	cmp	ip, r6
    266c:	d045      	beq.n	26fa <__aeabi_dsub+0x3e6>
    266e:	2680      	movs	r6, #128	; 0x80
    2670:	0436      	lsls	r6, r6, #16
    2672:	426d      	negs	r5, r5
    2674:	4334      	orrs	r4, r6
    2676:	2d38      	cmp	r5, #56	; 0x38
    2678:	dd00      	ble.n	267c <__aeabi_dsub+0x368>
    267a:	e0a8      	b.n	27ce <__aeabi_dsub+0x4ba>
    267c:	2d1f      	cmp	r5, #31
    267e:	dd00      	ble.n	2682 <__aeabi_dsub+0x36e>
    2680:	e11f      	b.n	28c2 <__aeabi_dsub+0x5ae>
    2682:	2620      	movs	r6, #32
    2684:	0027      	movs	r7, r4
    2686:	4650      	mov	r0, sl
    2688:	1b76      	subs	r6, r6, r5
    268a:	40b7      	lsls	r7, r6
    268c:	40e8      	lsrs	r0, r5
    268e:	4307      	orrs	r7, r0
    2690:	4650      	mov	r0, sl
    2692:	40b0      	lsls	r0, r6
    2694:	1e46      	subs	r6, r0, #1
    2696:	41b0      	sbcs	r0, r6
    2698:	40ec      	lsrs	r4, r5
    269a:	4338      	orrs	r0, r7
    269c:	1a17      	subs	r7, r2, r0
    269e:	42ba      	cmp	r2, r7
    26a0:	4192      	sbcs	r2, r2
    26a2:	1b0c      	subs	r4, r1, r4
    26a4:	4252      	negs	r2, r2
    26a6:	1aa4      	subs	r4, r4, r2
    26a8:	4666      	mov	r6, ip
    26aa:	4698      	mov	r8, r3
    26ac:	e68b      	b.n	23c6 <__aeabi_dsub+0xb2>
    26ae:	4664      	mov	r4, ip
    26b0:	4667      	mov	r7, ip
    26b2:	432c      	orrs	r4, r5
    26b4:	d000      	beq.n	26b8 <__aeabi_dsub+0x3a4>
    26b6:	e68b      	b.n	23d0 <__aeabi_dsub+0xbc>
    26b8:	2500      	movs	r5, #0
    26ba:	2600      	movs	r6, #0
    26bc:	2700      	movs	r7, #0
    26be:	e6ea      	b.n	2496 <__aeabi_dsub+0x182>
    26c0:	001e      	movs	r6, r3
    26c2:	e6ad      	b.n	2420 <__aeabi_dsub+0x10c>
    26c4:	2b1f      	cmp	r3, #31
    26c6:	dc60      	bgt.n	278a <__aeabi_dsub+0x476>
    26c8:	2720      	movs	r7, #32
    26ca:	1af8      	subs	r0, r7, r3
    26cc:	000f      	movs	r7, r1
    26ce:	4684      	mov	ip, r0
    26d0:	4087      	lsls	r7, r0
    26d2:	0010      	movs	r0, r2
    26d4:	40d8      	lsrs	r0, r3
    26d6:	4307      	orrs	r7, r0
    26d8:	4660      	mov	r0, ip
    26da:	4082      	lsls	r2, r0
    26dc:	1e50      	subs	r0, r2, #1
    26de:	4182      	sbcs	r2, r0
    26e0:	40d9      	lsrs	r1, r3
    26e2:	4317      	orrs	r7, r2
    26e4:	e6f5      	b.n	24d2 <__aeabi_dsub+0x1be>
    26e6:	0026      	movs	r6, r4
    26e8:	4650      	mov	r0, sl
    26ea:	4306      	orrs	r6, r0
    26ec:	d005      	beq.n	26fa <__aeabi_dsub+0x3e6>
    26ee:	43ed      	mvns	r5, r5
    26f0:	2d00      	cmp	r5, #0
    26f2:	d0d3      	beq.n	269c <__aeabi_dsub+0x388>
    26f4:	4e90      	ldr	r6, [pc, #576]	; (2938 <__aeabi_dsub+0x624>)
    26f6:	45b4      	cmp	ip, r6
    26f8:	d1bd      	bne.n	2676 <__aeabi_dsub+0x362>
    26fa:	000c      	movs	r4, r1
    26fc:	0017      	movs	r7, r2
    26fe:	4666      	mov	r6, ip
    2700:	4698      	mov	r8, r3
    2702:	e68d      	b.n	2420 <__aeabi_dsub+0x10c>
    2704:	488c      	ldr	r0, [pc, #560]	; (2938 <__aeabi_dsub+0x624>)
    2706:	4283      	cmp	r3, r0
    2708:	d00b      	beq.n	2722 <__aeabi_dsub+0x40e>
    270a:	4663      	mov	r3, ip
    270c:	e6d9      	b.n	24c2 <__aeabi_dsub+0x1ae>
    270e:	2d00      	cmp	r5, #0
    2710:	d000      	beq.n	2714 <__aeabi_dsub+0x400>
    2712:	e096      	b.n	2842 <__aeabi_dsub+0x52e>
    2714:	0008      	movs	r0, r1
    2716:	4310      	orrs	r0, r2
    2718:	d100      	bne.n	271c <__aeabi_dsub+0x408>
    271a:	e0e2      	b.n	28e2 <__aeabi_dsub+0x5ce>
    271c:	000c      	movs	r4, r1
    271e:	0017      	movs	r7, r2
    2720:	4698      	mov	r8, r3
    2722:	4e85      	ldr	r6, [pc, #532]	; (2938 <__aeabi_dsub+0x624>)
    2724:	e67c      	b.n	2420 <__aeabi_dsub+0x10c>
    2726:	2500      	movs	r5, #0
    2728:	e780      	b.n	262c <__aeabi_dsub+0x318>
    272a:	2100      	movs	r1, #0
    272c:	e78e      	b.n	264c <__aeabi_dsub+0x338>
    272e:	0023      	movs	r3, r4
    2730:	4650      	mov	r0, sl
    2732:	4303      	orrs	r3, r0
    2734:	2e00      	cmp	r6, #0
    2736:	d000      	beq.n	273a <__aeabi_dsub+0x426>
    2738:	e0a8      	b.n	288c <__aeabi_dsub+0x578>
    273a:	2b00      	cmp	r3, #0
    273c:	d100      	bne.n	2740 <__aeabi_dsub+0x42c>
    273e:	e0de      	b.n	28fe <__aeabi_dsub+0x5ea>
    2740:	000b      	movs	r3, r1
    2742:	4313      	orrs	r3, r2
    2744:	d100      	bne.n	2748 <__aeabi_dsub+0x434>
    2746:	e66b      	b.n	2420 <__aeabi_dsub+0x10c>
    2748:	4452      	add	r2, sl
    274a:	4552      	cmp	r2, sl
    274c:	4180      	sbcs	r0, r0
    274e:	1864      	adds	r4, r4, r1
    2750:	4240      	negs	r0, r0
    2752:	1824      	adds	r4, r4, r0
    2754:	0017      	movs	r7, r2
    2756:	0223      	lsls	r3, r4, #8
    2758:	d400      	bmi.n	275c <__aeabi_dsub+0x448>
    275a:	e6fd      	b.n	2558 <__aeabi_dsub+0x244>
    275c:	4b77      	ldr	r3, [pc, #476]	; (293c <__aeabi_dsub+0x628>)
    275e:	4666      	mov	r6, ip
    2760:	401c      	ands	r4, r3
    2762:	e65d      	b.n	2420 <__aeabi_dsub+0x10c>
    2764:	0025      	movs	r5, r4
    2766:	4650      	mov	r0, sl
    2768:	4305      	orrs	r5, r0
    276a:	2e00      	cmp	r6, #0
    276c:	d1cf      	bne.n	270e <__aeabi_dsub+0x3fa>
    276e:	2d00      	cmp	r5, #0
    2770:	d14f      	bne.n	2812 <__aeabi_dsub+0x4fe>
    2772:	000c      	movs	r4, r1
    2774:	4314      	orrs	r4, r2
    2776:	d100      	bne.n	277a <__aeabi_dsub+0x466>
    2778:	e0a0      	b.n	28bc <__aeabi_dsub+0x5a8>
    277a:	000c      	movs	r4, r1
    277c:	0017      	movs	r7, r2
    277e:	4698      	mov	r8, r3
    2780:	e64e      	b.n	2420 <__aeabi_dsub+0x10c>
    2782:	4666      	mov	r6, ip
    2784:	2400      	movs	r4, #0
    2786:	2700      	movs	r7, #0
    2788:	e685      	b.n	2496 <__aeabi_dsub+0x182>
    278a:	001f      	movs	r7, r3
    278c:	0008      	movs	r0, r1
    278e:	3f20      	subs	r7, #32
    2790:	40f8      	lsrs	r0, r7
    2792:	0007      	movs	r7, r0
    2794:	2b20      	cmp	r3, #32
    2796:	d100      	bne.n	279a <__aeabi_dsub+0x486>
    2798:	e08e      	b.n	28b8 <__aeabi_dsub+0x5a4>
    279a:	2040      	movs	r0, #64	; 0x40
    279c:	1ac3      	subs	r3, r0, r3
    279e:	4099      	lsls	r1, r3
    27a0:	430a      	orrs	r2, r1
    27a2:	1e51      	subs	r1, r2, #1
    27a4:	418a      	sbcs	r2, r1
    27a6:	2100      	movs	r1, #0
    27a8:	4317      	orrs	r7, r2
    27aa:	e692      	b.n	24d2 <__aeabi_dsub+0x1be>
    27ac:	2e00      	cmp	r6, #0
    27ae:	d114      	bne.n	27da <__aeabi_dsub+0x4c6>
    27b0:	0026      	movs	r6, r4
    27b2:	4650      	mov	r0, sl
    27b4:	4306      	orrs	r6, r0
    27b6:	d062      	beq.n	287e <__aeabi_dsub+0x56a>
    27b8:	43db      	mvns	r3, r3
    27ba:	2b00      	cmp	r3, #0
    27bc:	d15c      	bne.n	2878 <__aeabi_dsub+0x564>
    27be:	1887      	adds	r7, r0, r2
    27c0:	4297      	cmp	r7, r2
    27c2:	4192      	sbcs	r2, r2
    27c4:	1864      	adds	r4, r4, r1
    27c6:	4252      	negs	r2, r2
    27c8:	18a4      	adds	r4, r4, r2
    27ca:	4666      	mov	r6, ip
    27cc:	e687      	b.n	24de <__aeabi_dsub+0x1ca>
    27ce:	4650      	mov	r0, sl
    27d0:	4320      	orrs	r0, r4
    27d2:	1e44      	subs	r4, r0, #1
    27d4:	41a0      	sbcs	r0, r4
    27d6:	2400      	movs	r4, #0
    27d8:	e760      	b.n	269c <__aeabi_dsub+0x388>
    27da:	4e57      	ldr	r6, [pc, #348]	; (2938 <__aeabi_dsub+0x624>)
    27dc:	45b4      	cmp	ip, r6
    27de:	d04e      	beq.n	287e <__aeabi_dsub+0x56a>
    27e0:	2680      	movs	r6, #128	; 0x80
    27e2:	0436      	lsls	r6, r6, #16
    27e4:	425b      	negs	r3, r3
    27e6:	4334      	orrs	r4, r6
    27e8:	2b38      	cmp	r3, #56	; 0x38
    27ea:	dd00      	ble.n	27ee <__aeabi_dsub+0x4da>
    27ec:	e07f      	b.n	28ee <__aeabi_dsub+0x5da>
    27ee:	2b1f      	cmp	r3, #31
    27f0:	dd00      	ble.n	27f4 <__aeabi_dsub+0x4e0>
    27f2:	e08b      	b.n	290c <__aeabi_dsub+0x5f8>
    27f4:	2620      	movs	r6, #32
    27f6:	0027      	movs	r7, r4
    27f8:	4650      	mov	r0, sl
    27fa:	1af6      	subs	r6, r6, r3
    27fc:	40b7      	lsls	r7, r6
    27fe:	40d8      	lsrs	r0, r3
    2800:	4307      	orrs	r7, r0
    2802:	4650      	mov	r0, sl
    2804:	40b0      	lsls	r0, r6
    2806:	1e46      	subs	r6, r0, #1
    2808:	41b0      	sbcs	r0, r6
    280a:	4307      	orrs	r7, r0
    280c:	40dc      	lsrs	r4, r3
    280e:	18bf      	adds	r7, r7, r2
    2810:	e7d6      	b.n	27c0 <__aeabi_dsub+0x4ac>
    2812:	000d      	movs	r5, r1
    2814:	4315      	orrs	r5, r2
    2816:	d100      	bne.n	281a <__aeabi_dsub+0x506>
    2818:	e602      	b.n	2420 <__aeabi_dsub+0x10c>
    281a:	4650      	mov	r0, sl
    281c:	1a80      	subs	r0, r0, r2
    281e:	4582      	cmp	sl, r0
    2820:	41bf      	sbcs	r7, r7
    2822:	1a65      	subs	r5, r4, r1
    2824:	427f      	negs	r7, r7
    2826:	1bed      	subs	r5, r5, r7
    2828:	4684      	mov	ip, r0
    282a:	0228      	lsls	r0, r5, #8
    282c:	d400      	bmi.n	2830 <__aeabi_dsub+0x51c>
    282e:	e68d      	b.n	254c <__aeabi_dsub+0x238>
    2830:	4650      	mov	r0, sl
    2832:	1a17      	subs	r7, r2, r0
    2834:	42ba      	cmp	r2, r7
    2836:	4192      	sbcs	r2, r2
    2838:	1b0c      	subs	r4, r1, r4
    283a:	4252      	negs	r2, r2
    283c:	1aa4      	subs	r4, r4, r2
    283e:	4698      	mov	r8, r3
    2840:	e5ee      	b.n	2420 <__aeabi_dsub+0x10c>
    2842:	000d      	movs	r5, r1
    2844:	4315      	orrs	r5, r2
    2846:	d100      	bne.n	284a <__aeabi_dsub+0x536>
    2848:	e76b      	b.n	2722 <__aeabi_dsub+0x40e>
    284a:	4650      	mov	r0, sl
    284c:	0767      	lsls	r7, r4, #29
    284e:	08c0      	lsrs	r0, r0, #3
    2850:	4307      	orrs	r7, r0
    2852:	2080      	movs	r0, #128	; 0x80
    2854:	08e4      	lsrs	r4, r4, #3
    2856:	0300      	lsls	r0, r0, #12
    2858:	4204      	tst	r4, r0
    285a:	d007      	beq.n	286c <__aeabi_dsub+0x558>
    285c:	08cd      	lsrs	r5, r1, #3
    285e:	4205      	tst	r5, r0
    2860:	d104      	bne.n	286c <__aeabi_dsub+0x558>
    2862:	002c      	movs	r4, r5
    2864:	4698      	mov	r8, r3
    2866:	08d7      	lsrs	r7, r2, #3
    2868:	0749      	lsls	r1, r1, #29
    286a:	430f      	orrs	r7, r1
    286c:	0f7b      	lsrs	r3, r7, #29
    286e:	00e4      	lsls	r4, r4, #3
    2870:	431c      	orrs	r4, r3
    2872:	00ff      	lsls	r7, r7, #3
    2874:	4e30      	ldr	r6, [pc, #192]	; (2938 <__aeabi_dsub+0x624>)
    2876:	e5d3      	b.n	2420 <__aeabi_dsub+0x10c>
    2878:	4e2f      	ldr	r6, [pc, #188]	; (2938 <__aeabi_dsub+0x624>)
    287a:	45b4      	cmp	ip, r6
    287c:	d1b4      	bne.n	27e8 <__aeabi_dsub+0x4d4>
    287e:	000c      	movs	r4, r1
    2880:	0017      	movs	r7, r2
    2882:	4666      	mov	r6, ip
    2884:	e5cc      	b.n	2420 <__aeabi_dsub+0x10c>
    2886:	2700      	movs	r7, #0
    2888:	2400      	movs	r4, #0
    288a:	e5e8      	b.n	245e <__aeabi_dsub+0x14a>
    288c:	2b00      	cmp	r3, #0
    288e:	d039      	beq.n	2904 <__aeabi_dsub+0x5f0>
    2890:	000b      	movs	r3, r1
    2892:	4313      	orrs	r3, r2
    2894:	d100      	bne.n	2898 <__aeabi_dsub+0x584>
    2896:	e744      	b.n	2722 <__aeabi_dsub+0x40e>
    2898:	08c0      	lsrs	r0, r0, #3
    289a:	0767      	lsls	r7, r4, #29
    289c:	4307      	orrs	r7, r0
    289e:	2080      	movs	r0, #128	; 0x80
    28a0:	08e4      	lsrs	r4, r4, #3
    28a2:	0300      	lsls	r0, r0, #12
    28a4:	4204      	tst	r4, r0
    28a6:	d0e1      	beq.n	286c <__aeabi_dsub+0x558>
    28a8:	08cb      	lsrs	r3, r1, #3
    28aa:	4203      	tst	r3, r0
    28ac:	d1de      	bne.n	286c <__aeabi_dsub+0x558>
    28ae:	08d7      	lsrs	r7, r2, #3
    28b0:	0749      	lsls	r1, r1, #29
    28b2:	430f      	orrs	r7, r1
    28b4:	001c      	movs	r4, r3
    28b6:	e7d9      	b.n	286c <__aeabi_dsub+0x558>
    28b8:	2100      	movs	r1, #0
    28ba:	e771      	b.n	27a0 <__aeabi_dsub+0x48c>
    28bc:	2500      	movs	r5, #0
    28be:	2700      	movs	r7, #0
    28c0:	e5e9      	b.n	2496 <__aeabi_dsub+0x182>
    28c2:	002e      	movs	r6, r5
    28c4:	0027      	movs	r7, r4
    28c6:	3e20      	subs	r6, #32
    28c8:	40f7      	lsrs	r7, r6
    28ca:	2d20      	cmp	r5, #32
    28cc:	d02f      	beq.n	292e <__aeabi_dsub+0x61a>
    28ce:	2640      	movs	r6, #64	; 0x40
    28d0:	1b75      	subs	r5, r6, r5
    28d2:	40ac      	lsls	r4, r5
    28d4:	4650      	mov	r0, sl
    28d6:	4320      	orrs	r0, r4
    28d8:	1e44      	subs	r4, r0, #1
    28da:	41a0      	sbcs	r0, r4
    28dc:	2400      	movs	r4, #0
    28de:	4338      	orrs	r0, r7
    28e0:	e6dc      	b.n	269c <__aeabi_dsub+0x388>
    28e2:	2480      	movs	r4, #128	; 0x80
    28e4:	2500      	movs	r5, #0
    28e6:	0324      	lsls	r4, r4, #12
    28e8:	4e13      	ldr	r6, [pc, #76]	; (2938 <__aeabi_dsub+0x624>)
    28ea:	2700      	movs	r7, #0
    28ec:	e5d3      	b.n	2496 <__aeabi_dsub+0x182>
    28ee:	4650      	mov	r0, sl
    28f0:	4320      	orrs	r0, r4
    28f2:	0007      	movs	r7, r0
    28f4:	1e78      	subs	r0, r7, #1
    28f6:	4187      	sbcs	r7, r0
    28f8:	2400      	movs	r4, #0
    28fa:	18bf      	adds	r7, r7, r2
    28fc:	e760      	b.n	27c0 <__aeabi_dsub+0x4ac>
    28fe:	000c      	movs	r4, r1
    2900:	0017      	movs	r7, r2
    2902:	e58d      	b.n	2420 <__aeabi_dsub+0x10c>
    2904:	000c      	movs	r4, r1
    2906:	0017      	movs	r7, r2
    2908:	4e0b      	ldr	r6, [pc, #44]	; (2938 <__aeabi_dsub+0x624>)
    290a:	e589      	b.n	2420 <__aeabi_dsub+0x10c>
    290c:	001e      	movs	r6, r3
    290e:	0027      	movs	r7, r4
    2910:	3e20      	subs	r6, #32
    2912:	40f7      	lsrs	r7, r6
    2914:	2b20      	cmp	r3, #32
    2916:	d00c      	beq.n	2932 <__aeabi_dsub+0x61e>
    2918:	2640      	movs	r6, #64	; 0x40
    291a:	1af3      	subs	r3, r6, r3
    291c:	409c      	lsls	r4, r3
    291e:	4650      	mov	r0, sl
    2920:	4320      	orrs	r0, r4
    2922:	1e44      	subs	r4, r0, #1
    2924:	41a0      	sbcs	r0, r4
    2926:	4307      	orrs	r7, r0
    2928:	2400      	movs	r4, #0
    292a:	18bf      	adds	r7, r7, r2
    292c:	e748      	b.n	27c0 <__aeabi_dsub+0x4ac>
    292e:	2400      	movs	r4, #0
    2930:	e7d0      	b.n	28d4 <__aeabi_dsub+0x5c0>
    2932:	2400      	movs	r4, #0
    2934:	e7f3      	b.n	291e <__aeabi_dsub+0x60a>
    2936:	46c0      	nop			; (mov r8, r8)
    2938:	000007ff 	.word	0x000007ff
    293c:	ff7fffff 	.word	0xff7fffff

00002940 <__aeabi_d2iz>:
    2940:	b530      	push	{r4, r5, lr}
    2942:	4d13      	ldr	r5, [pc, #76]	; (2990 <__aeabi_d2iz+0x50>)
    2944:	030a      	lsls	r2, r1, #12
    2946:	004b      	lsls	r3, r1, #1
    2948:	0b12      	lsrs	r2, r2, #12
    294a:	0d5b      	lsrs	r3, r3, #21
    294c:	0fc9      	lsrs	r1, r1, #31
    294e:	2400      	movs	r4, #0
    2950:	42ab      	cmp	r3, r5
    2952:	dd10      	ble.n	2976 <__aeabi_d2iz+0x36>
    2954:	4c0f      	ldr	r4, [pc, #60]	; (2994 <__aeabi_d2iz+0x54>)
    2956:	42a3      	cmp	r3, r4
    2958:	dc0f      	bgt.n	297a <__aeabi_d2iz+0x3a>
    295a:	2480      	movs	r4, #128	; 0x80
    295c:	4d0e      	ldr	r5, [pc, #56]	; (2998 <__aeabi_d2iz+0x58>)
    295e:	0364      	lsls	r4, r4, #13
    2960:	4322      	orrs	r2, r4
    2962:	1aed      	subs	r5, r5, r3
    2964:	2d1f      	cmp	r5, #31
    2966:	dd0b      	ble.n	2980 <__aeabi_d2iz+0x40>
    2968:	480c      	ldr	r0, [pc, #48]	; (299c <__aeabi_d2iz+0x5c>)
    296a:	1ac3      	subs	r3, r0, r3
    296c:	40da      	lsrs	r2, r3
    296e:	4254      	negs	r4, r2
    2970:	2900      	cmp	r1, #0
    2972:	d100      	bne.n	2976 <__aeabi_d2iz+0x36>
    2974:	0014      	movs	r4, r2
    2976:	0020      	movs	r0, r4
    2978:	bd30      	pop	{r4, r5, pc}
    297a:	4b09      	ldr	r3, [pc, #36]	; (29a0 <__aeabi_d2iz+0x60>)
    297c:	18cc      	adds	r4, r1, r3
    297e:	e7fa      	b.n	2976 <__aeabi_d2iz+0x36>
    2980:	4c08      	ldr	r4, [pc, #32]	; (29a4 <__aeabi_d2iz+0x64>)
    2982:	40e8      	lsrs	r0, r5
    2984:	46a4      	mov	ip, r4
    2986:	4463      	add	r3, ip
    2988:	409a      	lsls	r2, r3
    298a:	4302      	orrs	r2, r0
    298c:	e7ef      	b.n	296e <__aeabi_d2iz+0x2e>
    298e:	46c0      	nop			; (mov r8, r8)
    2990:	000003fe 	.word	0x000003fe
    2994:	0000041d 	.word	0x0000041d
    2998:	00000433 	.word	0x00000433
    299c:	00000413 	.word	0x00000413
    29a0:	7fffffff 	.word	0x7fffffff
    29a4:	fffffbed 	.word	0xfffffbed

000029a8 <__aeabi_i2d>:
    29a8:	b570      	push	{r4, r5, r6, lr}
    29aa:	2800      	cmp	r0, #0
    29ac:	d030      	beq.n	2a10 <__aeabi_i2d+0x68>
    29ae:	17c3      	asrs	r3, r0, #31
    29b0:	18c4      	adds	r4, r0, r3
    29b2:	405c      	eors	r4, r3
    29b4:	0fc5      	lsrs	r5, r0, #31
    29b6:	0020      	movs	r0, r4
    29b8:	f000 f8ae 	bl	2b18 <__clzsi2>
    29bc:	4b17      	ldr	r3, [pc, #92]	; (2a1c <__aeabi_i2d+0x74>)
    29be:	4a18      	ldr	r2, [pc, #96]	; (2a20 <__aeabi_i2d+0x78>)
    29c0:	1a1b      	subs	r3, r3, r0
    29c2:	1ad2      	subs	r2, r2, r3
    29c4:	2a1f      	cmp	r2, #31
    29c6:	dd18      	ble.n	29fa <__aeabi_i2d+0x52>
    29c8:	4a16      	ldr	r2, [pc, #88]	; (2a24 <__aeabi_i2d+0x7c>)
    29ca:	1ad2      	subs	r2, r2, r3
    29cc:	4094      	lsls	r4, r2
    29ce:	2200      	movs	r2, #0
    29d0:	0324      	lsls	r4, r4, #12
    29d2:	055b      	lsls	r3, r3, #21
    29d4:	0b24      	lsrs	r4, r4, #12
    29d6:	0d5b      	lsrs	r3, r3, #21
    29d8:	2100      	movs	r1, #0
    29da:	0010      	movs	r0, r2
    29dc:	0324      	lsls	r4, r4, #12
    29de:	0d0a      	lsrs	r2, r1, #20
    29e0:	0b24      	lsrs	r4, r4, #12
    29e2:	0512      	lsls	r2, r2, #20
    29e4:	4322      	orrs	r2, r4
    29e6:	4c10      	ldr	r4, [pc, #64]	; (2a28 <__aeabi_i2d+0x80>)
    29e8:	051b      	lsls	r3, r3, #20
    29ea:	4022      	ands	r2, r4
    29ec:	4313      	orrs	r3, r2
    29ee:	005b      	lsls	r3, r3, #1
    29f0:	07ed      	lsls	r5, r5, #31
    29f2:	085b      	lsrs	r3, r3, #1
    29f4:	432b      	orrs	r3, r5
    29f6:	0019      	movs	r1, r3
    29f8:	bd70      	pop	{r4, r5, r6, pc}
    29fa:	0021      	movs	r1, r4
    29fc:	4091      	lsls	r1, r2
    29fe:	000a      	movs	r2, r1
    2a00:	210b      	movs	r1, #11
    2a02:	1a08      	subs	r0, r1, r0
    2a04:	40c4      	lsrs	r4, r0
    2a06:	055b      	lsls	r3, r3, #21
    2a08:	0324      	lsls	r4, r4, #12
    2a0a:	0b24      	lsrs	r4, r4, #12
    2a0c:	0d5b      	lsrs	r3, r3, #21
    2a0e:	e7e3      	b.n	29d8 <__aeabi_i2d+0x30>
    2a10:	2500      	movs	r5, #0
    2a12:	2300      	movs	r3, #0
    2a14:	2400      	movs	r4, #0
    2a16:	2200      	movs	r2, #0
    2a18:	e7de      	b.n	29d8 <__aeabi_i2d+0x30>
    2a1a:	46c0      	nop			; (mov r8, r8)
    2a1c:	0000041e 	.word	0x0000041e
    2a20:	00000433 	.word	0x00000433
    2a24:	00000413 	.word	0x00000413
    2a28:	800fffff 	.word	0x800fffff

00002a2c <__aeabi_ui2d>:
    2a2c:	b510      	push	{r4, lr}
    2a2e:	1e04      	subs	r4, r0, #0
    2a30:	d028      	beq.n	2a84 <__aeabi_ui2d+0x58>
    2a32:	f000 f871 	bl	2b18 <__clzsi2>
    2a36:	4b15      	ldr	r3, [pc, #84]	; (2a8c <__aeabi_ui2d+0x60>)
    2a38:	4a15      	ldr	r2, [pc, #84]	; (2a90 <__aeabi_ui2d+0x64>)
    2a3a:	1a1b      	subs	r3, r3, r0
    2a3c:	1ad2      	subs	r2, r2, r3
    2a3e:	2a1f      	cmp	r2, #31
    2a40:	dd15      	ble.n	2a6e <__aeabi_ui2d+0x42>
    2a42:	4a14      	ldr	r2, [pc, #80]	; (2a94 <__aeabi_ui2d+0x68>)
    2a44:	1ad2      	subs	r2, r2, r3
    2a46:	4094      	lsls	r4, r2
    2a48:	2200      	movs	r2, #0
    2a4a:	0324      	lsls	r4, r4, #12
    2a4c:	055b      	lsls	r3, r3, #21
    2a4e:	0b24      	lsrs	r4, r4, #12
    2a50:	0d5b      	lsrs	r3, r3, #21
    2a52:	2100      	movs	r1, #0
    2a54:	0010      	movs	r0, r2
    2a56:	0324      	lsls	r4, r4, #12
    2a58:	0d0a      	lsrs	r2, r1, #20
    2a5a:	0b24      	lsrs	r4, r4, #12
    2a5c:	0512      	lsls	r2, r2, #20
    2a5e:	4322      	orrs	r2, r4
    2a60:	4c0d      	ldr	r4, [pc, #52]	; (2a98 <__aeabi_ui2d+0x6c>)
    2a62:	051b      	lsls	r3, r3, #20
    2a64:	4022      	ands	r2, r4
    2a66:	4313      	orrs	r3, r2
    2a68:	005b      	lsls	r3, r3, #1
    2a6a:	0859      	lsrs	r1, r3, #1
    2a6c:	bd10      	pop	{r4, pc}
    2a6e:	0021      	movs	r1, r4
    2a70:	4091      	lsls	r1, r2
    2a72:	000a      	movs	r2, r1
    2a74:	210b      	movs	r1, #11
    2a76:	1a08      	subs	r0, r1, r0
    2a78:	40c4      	lsrs	r4, r0
    2a7a:	055b      	lsls	r3, r3, #21
    2a7c:	0324      	lsls	r4, r4, #12
    2a7e:	0b24      	lsrs	r4, r4, #12
    2a80:	0d5b      	lsrs	r3, r3, #21
    2a82:	e7e6      	b.n	2a52 <__aeabi_ui2d+0x26>
    2a84:	2300      	movs	r3, #0
    2a86:	2400      	movs	r4, #0
    2a88:	2200      	movs	r2, #0
    2a8a:	e7e2      	b.n	2a52 <__aeabi_ui2d+0x26>
    2a8c:	0000041e 	.word	0x0000041e
    2a90:	00000433 	.word	0x00000433
    2a94:	00000413 	.word	0x00000413
    2a98:	800fffff 	.word	0x800fffff

00002a9c <__aeabi_cdrcmple>:
    2a9c:	4684      	mov	ip, r0
    2a9e:	1c10      	adds	r0, r2, #0
    2aa0:	4662      	mov	r2, ip
    2aa2:	468c      	mov	ip, r1
    2aa4:	1c19      	adds	r1, r3, #0
    2aa6:	4663      	mov	r3, ip
    2aa8:	e000      	b.n	2aac <__aeabi_cdcmpeq>
    2aaa:	46c0      	nop			; (mov r8, r8)

00002aac <__aeabi_cdcmpeq>:
    2aac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    2aae:	f000 f8ef 	bl	2c90 <__ledf2>
    2ab2:	2800      	cmp	r0, #0
    2ab4:	d401      	bmi.n	2aba <__aeabi_cdcmpeq+0xe>
    2ab6:	2100      	movs	r1, #0
    2ab8:	42c8      	cmn	r0, r1
    2aba:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00002abc <__aeabi_dcmpeq>:
    2abc:	b510      	push	{r4, lr}
    2abe:	f000 f849 	bl	2b54 <__eqdf2>
    2ac2:	4240      	negs	r0, r0
    2ac4:	3001      	adds	r0, #1
    2ac6:	bd10      	pop	{r4, pc}

00002ac8 <__aeabi_dcmplt>:
    2ac8:	b510      	push	{r4, lr}
    2aca:	f000 f8e1 	bl	2c90 <__ledf2>
    2ace:	2800      	cmp	r0, #0
    2ad0:	db01      	blt.n	2ad6 <__aeabi_dcmplt+0xe>
    2ad2:	2000      	movs	r0, #0
    2ad4:	bd10      	pop	{r4, pc}
    2ad6:	2001      	movs	r0, #1
    2ad8:	bd10      	pop	{r4, pc}
    2ada:	46c0      	nop			; (mov r8, r8)

00002adc <__aeabi_dcmple>:
    2adc:	b510      	push	{r4, lr}
    2ade:	f000 f8d7 	bl	2c90 <__ledf2>
    2ae2:	2800      	cmp	r0, #0
    2ae4:	dd01      	ble.n	2aea <__aeabi_dcmple+0xe>
    2ae6:	2000      	movs	r0, #0
    2ae8:	bd10      	pop	{r4, pc}
    2aea:	2001      	movs	r0, #1
    2aec:	bd10      	pop	{r4, pc}
    2aee:	46c0      	nop			; (mov r8, r8)

00002af0 <__aeabi_dcmpgt>:
    2af0:	b510      	push	{r4, lr}
    2af2:	f000 f869 	bl	2bc8 <__gedf2>
    2af6:	2800      	cmp	r0, #0
    2af8:	dc01      	bgt.n	2afe <__aeabi_dcmpgt+0xe>
    2afa:	2000      	movs	r0, #0
    2afc:	bd10      	pop	{r4, pc}
    2afe:	2001      	movs	r0, #1
    2b00:	bd10      	pop	{r4, pc}
    2b02:	46c0      	nop			; (mov r8, r8)

00002b04 <__aeabi_dcmpge>:
    2b04:	b510      	push	{r4, lr}
    2b06:	f000 f85f 	bl	2bc8 <__gedf2>
    2b0a:	2800      	cmp	r0, #0
    2b0c:	da01      	bge.n	2b12 <__aeabi_dcmpge+0xe>
    2b0e:	2000      	movs	r0, #0
    2b10:	bd10      	pop	{r4, pc}
    2b12:	2001      	movs	r0, #1
    2b14:	bd10      	pop	{r4, pc}
    2b16:	46c0      	nop			; (mov r8, r8)

00002b18 <__clzsi2>:
    2b18:	211c      	movs	r1, #28
    2b1a:	2301      	movs	r3, #1
    2b1c:	041b      	lsls	r3, r3, #16
    2b1e:	4298      	cmp	r0, r3
    2b20:	d301      	bcc.n	2b26 <__clzsi2+0xe>
    2b22:	0c00      	lsrs	r0, r0, #16
    2b24:	3910      	subs	r1, #16
    2b26:	0a1b      	lsrs	r3, r3, #8
    2b28:	4298      	cmp	r0, r3
    2b2a:	d301      	bcc.n	2b30 <__clzsi2+0x18>
    2b2c:	0a00      	lsrs	r0, r0, #8
    2b2e:	3908      	subs	r1, #8
    2b30:	091b      	lsrs	r3, r3, #4
    2b32:	4298      	cmp	r0, r3
    2b34:	d301      	bcc.n	2b3a <__clzsi2+0x22>
    2b36:	0900      	lsrs	r0, r0, #4
    2b38:	3904      	subs	r1, #4
    2b3a:	a202      	add	r2, pc, #8	; (adr r2, 2b44 <__clzsi2+0x2c>)
    2b3c:	5c10      	ldrb	r0, [r2, r0]
    2b3e:	1840      	adds	r0, r0, r1
    2b40:	4770      	bx	lr
    2b42:	46c0      	nop			; (mov r8, r8)
    2b44:	02020304 	.word	0x02020304
    2b48:	01010101 	.word	0x01010101
	...

00002b54 <__eqdf2>:
    2b54:	b5f0      	push	{r4, r5, r6, r7, lr}
    2b56:	464f      	mov	r7, r9
    2b58:	4646      	mov	r6, r8
    2b5a:	46d6      	mov	lr, sl
    2b5c:	005c      	lsls	r4, r3, #1
    2b5e:	b5c0      	push	{r6, r7, lr}
    2b60:	031f      	lsls	r7, r3, #12
    2b62:	0fdb      	lsrs	r3, r3, #31
    2b64:	469a      	mov	sl, r3
    2b66:	4b17      	ldr	r3, [pc, #92]	; (2bc4 <__eqdf2+0x70>)
    2b68:	030e      	lsls	r6, r1, #12
    2b6a:	004d      	lsls	r5, r1, #1
    2b6c:	4684      	mov	ip, r0
    2b6e:	4680      	mov	r8, r0
    2b70:	0b36      	lsrs	r6, r6, #12
    2b72:	0d6d      	lsrs	r5, r5, #21
    2b74:	0fc9      	lsrs	r1, r1, #31
    2b76:	4691      	mov	r9, r2
    2b78:	0b3f      	lsrs	r7, r7, #12
    2b7a:	0d64      	lsrs	r4, r4, #21
    2b7c:	2001      	movs	r0, #1
    2b7e:	429d      	cmp	r5, r3
    2b80:	d008      	beq.n	2b94 <__eqdf2+0x40>
    2b82:	429c      	cmp	r4, r3
    2b84:	d001      	beq.n	2b8a <__eqdf2+0x36>
    2b86:	42a5      	cmp	r5, r4
    2b88:	d00b      	beq.n	2ba2 <__eqdf2+0x4e>
    2b8a:	bc1c      	pop	{r2, r3, r4}
    2b8c:	4690      	mov	r8, r2
    2b8e:	4699      	mov	r9, r3
    2b90:	46a2      	mov	sl, r4
    2b92:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2b94:	4663      	mov	r3, ip
    2b96:	4333      	orrs	r3, r6
    2b98:	d1f7      	bne.n	2b8a <__eqdf2+0x36>
    2b9a:	42ac      	cmp	r4, r5
    2b9c:	d1f5      	bne.n	2b8a <__eqdf2+0x36>
    2b9e:	433a      	orrs	r2, r7
    2ba0:	d1f3      	bne.n	2b8a <__eqdf2+0x36>
    2ba2:	2001      	movs	r0, #1
    2ba4:	42be      	cmp	r6, r7
    2ba6:	d1f0      	bne.n	2b8a <__eqdf2+0x36>
    2ba8:	45c8      	cmp	r8, r9
    2baa:	d1ee      	bne.n	2b8a <__eqdf2+0x36>
    2bac:	4551      	cmp	r1, sl
    2bae:	d007      	beq.n	2bc0 <__eqdf2+0x6c>
    2bb0:	2d00      	cmp	r5, #0
    2bb2:	d1ea      	bne.n	2b8a <__eqdf2+0x36>
    2bb4:	4663      	mov	r3, ip
    2bb6:	431e      	orrs	r6, r3
    2bb8:	0030      	movs	r0, r6
    2bba:	1e46      	subs	r6, r0, #1
    2bbc:	41b0      	sbcs	r0, r6
    2bbe:	e7e4      	b.n	2b8a <__eqdf2+0x36>
    2bc0:	2000      	movs	r0, #0
    2bc2:	e7e2      	b.n	2b8a <__eqdf2+0x36>
    2bc4:	000007ff 	.word	0x000007ff

00002bc8 <__gedf2>:
    2bc8:	b5f0      	push	{r4, r5, r6, r7, lr}
    2bca:	4645      	mov	r5, r8
    2bcc:	46de      	mov	lr, fp
    2bce:	4657      	mov	r7, sl
    2bd0:	464e      	mov	r6, r9
    2bd2:	b5e0      	push	{r5, r6, r7, lr}
    2bd4:	031f      	lsls	r7, r3, #12
    2bd6:	0b3d      	lsrs	r5, r7, #12
    2bd8:	4f2c      	ldr	r7, [pc, #176]	; (2c8c <__gedf2+0xc4>)
    2bda:	030e      	lsls	r6, r1, #12
    2bdc:	004c      	lsls	r4, r1, #1
    2bde:	46ab      	mov	fp, r5
    2be0:	005d      	lsls	r5, r3, #1
    2be2:	4684      	mov	ip, r0
    2be4:	0b36      	lsrs	r6, r6, #12
    2be6:	0d64      	lsrs	r4, r4, #21
    2be8:	0fc9      	lsrs	r1, r1, #31
    2bea:	4690      	mov	r8, r2
    2bec:	0d6d      	lsrs	r5, r5, #21
    2bee:	0fdb      	lsrs	r3, r3, #31
    2bf0:	42bc      	cmp	r4, r7
    2bf2:	d02a      	beq.n	2c4a <__gedf2+0x82>
    2bf4:	4f25      	ldr	r7, [pc, #148]	; (2c8c <__gedf2+0xc4>)
    2bf6:	42bd      	cmp	r5, r7
    2bf8:	d02d      	beq.n	2c56 <__gedf2+0x8e>
    2bfa:	2c00      	cmp	r4, #0
    2bfc:	d10f      	bne.n	2c1e <__gedf2+0x56>
    2bfe:	4330      	orrs	r0, r6
    2c00:	0007      	movs	r7, r0
    2c02:	4681      	mov	r9, r0
    2c04:	4278      	negs	r0, r7
    2c06:	4178      	adcs	r0, r7
    2c08:	b2c0      	uxtb	r0, r0
    2c0a:	2d00      	cmp	r5, #0
    2c0c:	d117      	bne.n	2c3e <__gedf2+0x76>
    2c0e:	465f      	mov	r7, fp
    2c10:	433a      	orrs	r2, r7
    2c12:	d114      	bne.n	2c3e <__gedf2+0x76>
    2c14:	464b      	mov	r3, r9
    2c16:	2000      	movs	r0, #0
    2c18:	2b00      	cmp	r3, #0
    2c1a:	d00a      	beq.n	2c32 <__gedf2+0x6a>
    2c1c:	e006      	b.n	2c2c <__gedf2+0x64>
    2c1e:	2d00      	cmp	r5, #0
    2c20:	d102      	bne.n	2c28 <__gedf2+0x60>
    2c22:	4658      	mov	r0, fp
    2c24:	4302      	orrs	r2, r0
    2c26:	d001      	beq.n	2c2c <__gedf2+0x64>
    2c28:	4299      	cmp	r1, r3
    2c2a:	d018      	beq.n	2c5e <__gedf2+0x96>
    2c2c:	4248      	negs	r0, r1
    2c2e:	2101      	movs	r1, #1
    2c30:	4308      	orrs	r0, r1
    2c32:	bc3c      	pop	{r2, r3, r4, r5}
    2c34:	4690      	mov	r8, r2
    2c36:	4699      	mov	r9, r3
    2c38:	46a2      	mov	sl, r4
    2c3a:	46ab      	mov	fp, r5
    2c3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2c3e:	2800      	cmp	r0, #0
    2c40:	d0f2      	beq.n	2c28 <__gedf2+0x60>
    2c42:	2001      	movs	r0, #1
    2c44:	3b01      	subs	r3, #1
    2c46:	4318      	orrs	r0, r3
    2c48:	e7f3      	b.n	2c32 <__gedf2+0x6a>
    2c4a:	0037      	movs	r7, r6
    2c4c:	4307      	orrs	r7, r0
    2c4e:	d0d1      	beq.n	2bf4 <__gedf2+0x2c>
    2c50:	2002      	movs	r0, #2
    2c52:	4240      	negs	r0, r0
    2c54:	e7ed      	b.n	2c32 <__gedf2+0x6a>
    2c56:	465f      	mov	r7, fp
    2c58:	4317      	orrs	r7, r2
    2c5a:	d0ce      	beq.n	2bfa <__gedf2+0x32>
    2c5c:	e7f8      	b.n	2c50 <__gedf2+0x88>
    2c5e:	42ac      	cmp	r4, r5
    2c60:	dce4      	bgt.n	2c2c <__gedf2+0x64>
    2c62:	da03      	bge.n	2c6c <__gedf2+0xa4>
    2c64:	1e48      	subs	r0, r1, #1
    2c66:	2101      	movs	r1, #1
    2c68:	4308      	orrs	r0, r1
    2c6a:	e7e2      	b.n	2c32 <__gedf2+0x6a>
    2c6c:	455e      	cmp	r6, fp
    2c6e:	d8dd      	bhi.n	2c2c <__gedf2+0x64>
    2c70:	d006      	beq.n	2c80 <__gedf2+0xb8>
    2c72:	2000      	movs	r0, #0
    2c74:	455e      	cmp	r6, fp
    2c76:	d2dc      	bcs.n	2c32 <__gedf2+0x6a>
    2c78:	2301      	movs	r3, #1
    2c7a:	1e48      	subs	r0, r1, #1
    2c7c:	4318      	orrs	r0, r3
    2c7e:	e7d8      	b.n	2c32 <__gedf2+0x6a>
    2c80:	45c4      	cmp	ip, r8
    2c82:	d8d3      	bhi.n	2c2c <__gedf2+0x64>
    2c84:	2000      	movs	r0, #0
    2c86:	45c4      	cmp	ip, r8
    2c88:	d3f6      	bcc.n	2c78 <__gedf2+0xb0>
    2c8a:	e7d2      	b.n	2c32 <__gedf2+0x6a>
    2c8c:	000007ff 	.word	0x000007ff

00002c90 <__ledf2>:
    2c90:	b5f0      	push	{r4, r5, r6, r7, lr}
    2c92:	464e      	mov	r6, r9
    2c94:	4645      	mov	r5, r8
    2c96:	46de      	mov	lr, fp
    2c98:	4657      	mov	r7, sl
    2c9a:	005c      	lsls	r4, r3, #1
    2c9c:	b5e0      	push	{r5, r6, r7, lr}
    2c9e:	031f      	lsls	r7, r3, #12
    2ca0:	0fdb      	lsrs	r3, r3, #31
    2ca2:	4699      	mov	r9, r3
    2ca4:	4b2a      	ldr	r3, [pc, #168]	; (2d50 <__ledf2+0xc0>)
    2ca6:	030e      	lsls	r6, r1, #12
    2ca8:	004d      	lsls	r5, r1, #1
    2caa:	0fc9      	lsrs	r1, r1, #31
    2cac:	4684      	mov	ip, r0
    2cae:	0b36      	lsrs	r6, r6, #12
    2cb0:	0d6d      	lsrs	r5, r5, #21
    2cb2:	468b      	mov	fp, r1
    2cb4:	4690      	mov	r8, r2
    2cb6:	0b3f      	lsrs	r7, r7, #12
    2cb8:	0d64      	lsrs	r4, r4, #21
    2cba:	429d      	cmp	r5, r3
    2cbc:	d020      	beq.n	2d00 <__ledf2+0x70>
    2cbe:	4b24      	ldr	r3, [pc, #144]	; (2d50 <__ledf2+0xc0>)
    2cc0:	429c      	cmp	r4, r3
    2cc2:	d022      	beq.n	2d0a <__ledf2+0x7a>
    2cc4:	2d00      	cmp	r5, #0
    2cc6:	d112      	bne.n	2cee <__ledf2+0x5e>
    2cc8:	4330      	orrs	r0, r6
    2cca:	4243      	negs	r3, r0
    2ccc:	4143      	adcs	r3, r0
    2cce:	b2db      	uxtb	r3, r3
    2cd0:	2c00      	cmp	r4, #0
    2cd2:	d01f      	beq.n	2d14 <__ledf2+0x84>
    2cd4:	2b00      	cmp	r3, #0
    2cd6:	d00c      	beq.n	2cf2 <__ledf2+0x62>
    2cd8:	464b      	mov	r3, r9
    2cda:	2001      	movs	r0, #1
    2cdc:	3b01      	subs	r3, #1
    2cde:	4303      	orrs	r3, r0
    2ce0:	0018      	movs	r0, r3
    2ce2:	bc3c      	pop	{r2, r3, r4, r5}
    2ce4:	4690      	mov	r8, r2
    2ce6:	4699      	mov	r9, r3
    2ce8:	46a2      	mov	sl, r4
    2cea:	46ab      	mov	fp, r5
    2cec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2cee:	2c00      	cmp	r4, #0
    2cf0:	d016      	beq.n	2d20 <__ledf2+0x90>
    2cf2:	45cb      	cmp	fp, r9
    2cf4:	d017      	beq.n	2d26 <__ledf2+0x96>
    2cf6:	465b      	mov	r3, fp
    2cf8:	4259      	negs	r1, r3
    2cfa:	2301      	movs	r3, #1
    2cfc:	430b      	orrs	r3, r1
    2cfe:	e7ef      	b.n	2ce0 <__ledf2+0x50>
    2d00:	0031      	movs	r1, r6
    2d02:	2302      	movs	r3, #2
    2d04:	4301      	orrs	r1, r0
    2d06:	d1eb      	bne.n	2ce0 <__ledf2+0x50>
    2d08:	e7d9      	b.n	2cbe <__ledf2+0x2e>
    2d0a:	0039      	movs	r1, r7
    2d0c:	2302      	movs	r3, #2
    2d0e:	4311      	orrs	r1, r2
    2d10:	d1e6      	bne.n	2ce0 <__ledf2+0x50>
    2d12:	e7d7      	b.n	2cc4 <__ledf2+0x34>
    2d14:	433a      	orrs	r2, r7
    2d16:	d1dd      	bne.n	2cd4 <__ledf2+0x44>
    2d18:	2300      	movs	r3, #0
    2d1a:	2800      	cmp	r0, #0
    2d1c:	d0e0      	beq.n	2ce0 <__ledf2+0x50>
    2d1e:	e7ea      	b.n	2cf6 <__ledf2+0x66>
    2d20:	433a      	orrs	r2, r7
    2d22:	d1e6      	bne.n	2cf2 <__ledf2+0x62>
    2d24:	e7e7      	b.n	2cf6 <__ledf2+0x66>
    2d26:	42a5      	cmp	r5, r4
    2d28:	dce5      	bgt.n	2cf6 <__ledf2+0x66>
    2d2a:	db05      	blt.n	2d38 <__ledf2+0xa8>
    2d2c:	42be      	cmp	r6, r7
    2d2e:	d8e2      	bhi.n	2cf6 <__ledf2+0x66>
    2d30:	d007      	beq.n	2d42 <__ledf2+0xb2>
    2d32:	2300      	movs	r3, #0
    2d34:	42be      	cmp	r6, r7
    2d36:	d2d3      	bcs.n	2ce0 <__ledf2+0x50>
    2d38:	4659      	mov	r1, fp
    2d3a:	2301      	movs	r3, #1
    2d3c:	3901      	subs	r1, #1
    2d3e:	430b      	orrs	r3, r1
    2d40:	e7ce      	b.n	2ce0 <__ledf2+0x50>
    2d42:	45c4      	cmp	ip, r8
    2d44:	d8d7      	bhi.n	2cf6 <__ledf2+0x66>
    2d46:	2300      	movs	r3, #0
    2d48:	45c4      	cmp	ip, r8
    2d4a:	d3f5      	bcc.n	2d38 <__ledf2+0xa8>
    2d4c:	e7c8      	b.n	2ce0 <__ledf2+0x50>
    2d4e:	46c0      	nop			; (mov r8, r8)
    2d50:	000007ff 	.word	0x000007ff

00002d54 <__libc_init_array>:
    2d54:	b570      	push	{r4, r5, r6, lr}
    2d56:	2600      	movs	r6, #0
    2d58:	4d0c      	ldr	r5, [pc, #48]	; (2d8c <__libc_init_array+0x38>)
    2d5a:	4c0d      	ldr	r4, [pc, #52]	; (2d90 <__libc_init_array+0x3c>)
    2d5c:	1b64      	subs	r4, r4, r5
    2d5e:	10a4      	asrs	r4, r4, #2
    2d60:	42a6      	cmp	r6, r4
    2d62:	d109      	bne.n	2d78 <__libc_init_array+0x24>
    2d64:	2600      	movs	r6, #0
    2d66:	f003 f82b 	bl	5dc0 <_init>
    2d6a:	4d0a      	ldr	r5, [pc, #40]	; (2d94 <__libc_init_array+0x40>)
    2d6c:	4c0a      	ldr	r4, [pc, #40]	; (2d98 <__libc_init_array+0x44>)
    2d6e:	1b64      	subs	r4, r4, r5
    2d70:	10a4      	asrs	r4, r4, #2
    2d72:	42a6      	cmp	r6, r4
    2d74:	d105      	bne.n	2d82 <__libc_init_array+0x2e>
    2d76:	bd70      	pop	{r4, r5, r6, pc}
    2d78:	00b3      	lsls	r3, r6, #2
    2d7a:	58eb      	ldr	r3, [r5, r3]
    2d7c:	4798      	blx	r3
    2d7e:	3601      	adds	r6, #1
    2d80:	e7ee      	b.n	2d60 <__libc_init_array+0xc>
    2d82:	00b3      	lsls	r3, r6, #2
    2d84:	58eb      	ldr	r3, [r5, r3]
    2d86:	4798      	blx	r3
    2d88:	3601      	adds	r6, #1
    2d8a:	e7f2      	b.n	2d72 <__libc_init_array+0x1e>
    2d8c:	00005dcc 	.word	0x00005dcc
    2d90:	00005dcc 	.word	0x00005dcc
    2d94:	00005dcc 	.word	0x00005dcc
    2d98:	00005dd0 	.word	0x00005dd0

00002d9c <memset>:
    2d9c:	0003      	movs	r3, r0
    2d9e:	1882      	adds	r2, r0, r2
    2da0:	4293      	cmp	r3, r2
    2da2:	d100      	bne.n	2da6 <memset+0xa>
    2da4:	4770      	bx	lr
    2da6:	7019      	strb	r1, [r3, #0]
    2da8:	3301      	adds	r3, #1
    2daa:	e7f9      	b.n	2da0 <memset+0x4>

00002dac <__cvt>:
    2dac:	b5f0      	push	{r4, r5, r6, r7, lr}
    2dae:	b08b      	sub	sp, #44	; 0x2c
    2db0:	0014      	movs	r4, r2
    2db2:	1e1d      	subs	r5, r3, #0
    2db4:	9912      	ldr	r1, [sp, #72]	; 0x48
    2db6:	da53      	bge.n	2e60 <__cvt+0xb4>
    2db8:	2480      	movs	r4, #128	; 0x80
    2dba:	0624      	lsls	r4, r4, #24
    2dbc:	191b      	adds	r3, r3, r4
    2dbe:	001d      	movs	r5, r3
    2dc0:	0014      	movs	r4, r2
    2dc2:	232d      	movs	r3, #45	; 0x2d
    2dc4:	700b      	strb	r3, [r1, #0]
    2dc6:	2320      	movs	r3, #32
    2dc8:	9e14      	ldr	r6, [sp, #80]	; 0x50
    2dca:	2203      	movs	r2, #3
    2dcc:	439e      	bics	r6, r3
    2dce:	2e46      	cmp	r6, #70	; 0x46
    2dd0:	d007      	beq.n	2de2 <__cvt+0x36>
    2dd2:	0033      	movs	r3, r6
    2dd4:	3b45      	subs	r3, #69	; 0x45
    2dd6:	4259      	negs	r1, r3
    2dd8:	414b      	adcs	r3, r1
    2dda:	9910      	ldr	r1, [sp, #64]	; 0x40
    2ddc:	3a01      	subs	r2, #1
    2dde:	18cb      	adds	r3, r1, r3
    2de0:	9310      	str	r3, [sp, #64]	; 0x40
    2de2:	ab09      	add	r3, sp, #36	; 0x24
    2de4:	9304      	str	r3, [sp, #16]
    2de6:	ab08      	add	r3, sp, #32
    2de8:	9303      	str	r3, [sp, #12]
    2dea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    2dec:	9200      	str	r2, [sp, #0]
    2dee:	9302      	str	r3, [sp, #8]
    2df0:	9b10      	ldr	r3, [sp, #64]	; 0x40
    2df2:	0022      	movs	r2, r4
    2df4:	9301      	str	r3, [sp, #4]
    2df6:	002b      	movs	r3, r5
    2df8:	f000 fd28 	bl	384c <_dtoa_r>
    2dfc:	0007      	movs	r7, r0
    2dfe:	2e47      	cmp	r6, #71	; 0x47
    2e00:	d102      	bne.n	2e08 <__cvt+0x5c>
    2e02:	9b11      	ldr	r3, [sp, #68]	; 0x44
    2e04:	07db      	lsls	r3, r3, #31
    2e06:	d524      	bpl.n	2e52 <__cvt+0xa6>
    2e08:	9b10      	ldr	r3, [sp, #64]	; 0x40
    2e0a:	18fb      	adds	r3, r7, r3
    2e0c:	9307      	str	r3, [sp, #28]
    2e0e:	2e46      	cmp	r6, #70	; 0x46
    2e10:	d114      	bne.n	2e3c <__cvt+0x90>
    2e12:	783b      	ldrb	r3, [r7, #0]
    2e14:	2b30      	cmp	r3, #48	; 0x30
    2e16:	d10c      	bne.n	2e32 <__cvt+0x86>
    2e18:	2200      	movs	r2, #0
    2e1a:	2300      	movs	r3, #0
    2e1c:	0020      	movs	r0, r4
    2e1e:	0029      	movs	r1, r5
    2e20:	f7ff fe4c 	bl	2abc <__aeabi_dcmpeq>
    2e24:	2800      	cmp	r0, #0
    2e26:	d104      	bne.n	2e32 <__cvt+0x86>
    2e28:	2301      	movs	r3, #1
    2e2a:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2e2c:	1a9b      	subs	r3, r3, r2
    2e2e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    2e30:	6013      	str	r3, [r2, #0]
    2e32:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    2e34:	9a07      	ldr	r2, [sp, #28]
    2e36:	681b      	ldr	r3, [r3, #0]
    2e38:	18d3      	adds	r3, r2, r3
    2e3a:	9307      	str	r3, [sp, #28]
    2e3c:	2200      	movs	r2, #0
    2e3e:	2300      	movs	r3, #0
    2e40:	0020      	movs	r0, r4
    2e42:	0029      	movs	r1, r5
    2e44:	f7ff fe3a 	bl	2abc <__aeabi_dcmpeq>
    2e48:	2230      	movs	r2, #48	; 0x30
    2e4a:	2800      	cmp	r0, #0
    2e4c:	d00d      	beq.n	2e6a <__cvt+0xbe>
    2e4e:	9b07      	ldr	r3, [sp, #28]
    2e50:	9309      	str	r3, [sp, #36]	; 0x24
    2e52:	0038      	movs	r0, r7
    2e54:	9b09      	ldr	r3, [sp, #36]	; 0x24
    2e56:	9a15      	ldr	r2, [sp, #84]	; 0x54
    2e58:	1bdb      	subs	r3, r3, r7
    2e5a:	6013      	str	r3, [r2, #0]
    2e5c:	b00b      	add	sp, #44	; 0x2c
    2e5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2e60:	2300      	movs	r3, #0
    2e62:	e7af      	b.n	2dc4 <__cvt+0x18>
    2e64:	1c59      	adds	r1, r3, #1
    2e66:	9109      	str	r1, [sp, #36]	; 0x24
    2e68:	701a      	strb	r2, [r3, #0]
    2e6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    2e6c:	9907      	ldr	r1, [sp, #28]
    2e6e:	4299      	cmp	r1, r3
    2e70:	d8f8      	bhi.n	2e64 <__cvt+0xb8>
    2e72:	e7ee      	b.n	2e52 <__cvt+0xa6>

00002e74 <__exponent>:
    2e74:	b5f0      	push	{r4, r5, r6, r7, lr}
    2e76:	232b      	movs	r3, #43	; 0x2b
    2e78:	b085      	sub	sp, #20
    2e7a:	0007      	movs	r7, r0
    2e7c:	000c      	movs	r4, r1
    2e7e:	7002      	strb	r2, [r0, #0]
    2e80:	1c86      	adds	r6, r0, #2
    2e82:	2900      	cmp	r1, #0
    2e84:	da01      	bge.n	2e8a <__exponent+0x16>
    2e86:	232d      	movs	r3, #45	; 0x2d
    2e88:	424c      	negs	r4, r1
    2e8a:	707b      	strb	r3, [r7, #1]
    2e8c:	2c09      	cmp	r4, #9
    2e8e:	dd23      	ble.n	2ed8 <__exponent+0x64>
    2e90:	ab02      	add	r3, sp, #8
    2e92:	1ddd      	adds	r5, r3, #7
    2e94:	1e6b      	subs	r3, r5, #1
    2e96:	0020      	movs	r0, r4
    2e98:	210a      	movs	r1, #10
    2e9a:	9301      	str	r3, [sp, #4]
    2e9c:	f002 f948 	bl	5130 <__aeabi_idivmod>
    2ea0:	1e6b      	subs	r3, r5, #1
    2ea2:	3130      	adds	r1, #48	; 0x30
    2ea4:	7019      	strb	r1, [r3, #0]
    2ea6:	0020      	movs	r0, r4
    2ea8:	210a      	movs	r1, #10
    2eaa:	f002 f85b 	bl	4f64 <__divsi3>
    2eae:	0004      	movs	r4, r0
    2eb0:	2809      	cmp	r0, #9
    2eb2:	dc0a      	bgt.n	2eca <__exponent+0x56>
    2eb4:	3d02      	subs	r5, #2
    2eb6:	3430      	adds	r4, #48	; 0x30
    2eb8:	702c      	strb	r4, [r5, #0]
    2eba:	ab02      	add	r3, sp, #8
    2ebc:	3307      	adds	r3, #7
    2ebe:	0030      	movs	r0, r6
    2ec0:	42ab      	cmp	r3, r5
    2ec2:	d804      	bhi.n	2ece <__exponent+0x5a>
    2ec4:	1bc0      	subs	r0, r0, r7
    2ec6:	b005      	add	sp, #20
    2ec8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2eca:	9d01      	ldr	r5, [sp, #4]
    2ecc:	e7e2      	b.n	2e94 <__exponent+0x20>
    2ece:	782b      	ldrb	r3, [r5, #0]
    2ed0:	3501      	adds	r5, #1
    2ed2:	7033      	strb	r3, [r6, #0]
    2ed4:	3601      	adds	r6, #1
    2ed6:	e7f0      	b.n	2eba <__exponent+0x46>
    2ed8:	2330      	movs	r3, #48	; 0x30
    2eda:	18e4      	adds	r4, r4, r3
    2edc:	7033      	strb	r3, [r6, #0]
    2ede:	1cb0      	adds	r0, r6, #2
    2ee0:	7074      	strb	r4, [r6, #1]
    2ee2:	e7ef      	b.n	2ec4 <__exponent+0x50>

00002ee4 <_printf_float>:
    2ee4:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ee6:	b095      	sub	sp, #84	; 0x54
    2ee8:	000c      	movs	r4, r1
    2eea:	920a      	str	r2, [sp, #40]	; 0x28
    2eec:	930b      	str	r3, [sp, #44]	; 0x2c
    2eee:	9d1a      	ldr	r5, [sp, #104]	; 0x68
    2ef0:	9009      	str	r0, [sp, #36]	; 0x24
    2ef2:	f001 fa93 	bl	441c <_localeconv_r>
    2ef6:	6803      	ldr	r3, [r0, #0]
    2ef8:	0018      	movs	r0, r3
    2efa:	930d      	str	r3, [sp, #52]	; 0x34
    2efc:	f000 fc1a 	bl	3734 <strlen>
    2f00:	2300      	movs	r3, #0
    2f02:	9312      	str	r3, [sp, #72]	; 0x48
    2f04:	6823      	ldr	r3, [r4, #0]
    2f06:	900e      	str	r0, [sp, #56]	; 0x38
    2f08:	930c      	str	r3, [sp, #48]	; 0x30
    2f0a:	990c      	ldr	r1, [sp, #48]	; 0x30
    2f0c:	7e27      	ldrb	r7, [r4, #24]
    2f0e:	682b      	ldr	r3, [r5, #0]
    2f10:	2207      	movs	r2, #7
    2f12:	05c9      	lsls	r1, r1, #23
    2f14:	d547      	bpl.n	2fa6 <_printf_float+0xc2>
    2f16:	189b      	adds	r3, r3, r2
    2f18:	4393      	bics	r3, r2
    2f1a:	001a      	movs	r2, r3
    2f1c:	3208      	adds	r2, #8
    2f1e:	602a      	str	r2, [r5, #0]
    2f20:	681a      	ldr	r2, [r3, #0]
    2f22:	685b      	ldr	r3, [r3, #4]
    2f24:	64a2      	str	r2, [r4, #72]	; 0x48
    2f26:	64e3      	str	r3, [r4, #76]	; 0x4c
    2f28:	2201      	movs	r2, #1
    2f2a:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
    2f2c:	6ca6      	ldr	r6, [r4, #72]	; 0x48
    2f2e:	006b      	lsls	r3, r5, #1
    2f30:	085b      	lsrs	r3, r3, #1
    2f32:	930f      	str	r3, [sp, #60]	; 0x3c
    2f34:	4252      	negs	r2, r2
    2f36:	4ba7      	ldr	r3, [pc, #668]	; (31d4 <_printf_float+0x2f0>)
    2f38:	0030      	movs	r0, r6
    2f3a:	990f      	ldr	r1, [sp, #60]	; 0x3c
    2f3c:	f002 fc0c 	bl	5758 <__aeabi_dcmpun>
    2f40:	2800      	cmp	r0, #0
    2f42:	d000      	beq.n	2f46 <_printf_float+0x62>
    2f44:	e206      	b.n	3354 <_printf_float+0x470>
    2f46:	2201      	movs	r2, #1
    2f48:	4ba2      	ldr	r3, [pc, #648]	; (31d4 <_printf_float+0x2f0>)
    2f4a:	4252      	negs	r2, r2
    2f4c:	0030      	movs	r0, r6
    2f4e:	990f      	ldr	r1, [sp, #60]	; 0x3c
    2f50:	f7ff fdc4 	bl	2adc <__aeabi_dcmple>
    2f54:	2800      	cmp	r0, #0
    2f56:	d000      	beq.n	2f5a <_printf_float+0x76>
    2f58:	e1fc      	b.n	3354 <_printf_float+0x470>
    2f5a:	2200      	movs	r2, #0
    2f5c:	2300      	movs	r3, #0
    2f5e:	0030      	movs	r0, r6
    2f60:	0029      	movs	r1, r5
    2f62:	f7ff fdb1 	bl	2ac8 <__aeabi_dcmplt>
    2f66:	2800      	cmp	r0, #0
    2f68:	d003      	beq.n	2f72 <_printf_float+0x8e>
    2f6a:	0023      	movs	r3, r4
    2f6c:	222d      	movs	r2, #45	; 0x2d
    2f6e:	3343      	adds	r3, #67	; 0x43
    2f70:	701a      	strb	r2, [r3, #0]
    2f72:	4d99      	ldr	r5, [pc, #612]	; (31d8 <_printf_float+0x2f4>)
    2f74:	2f47      	cmp	r7, #71	; 0x47
    2f76:	d800      	bhi.n	2f7a <_printf_float+0x96>
    2f78:	4d98      	ldr	r5, [pc, #608]	; (31dc <_printf_float+0x2f8>)
    2f7a:	2303      	movs	r3, #3
    2f7c:	2600      	movs	r6, #0
    2f7e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    2f80:	6123      	str	r3, [r4, #16]
    2f82:	3301      	adds	r3, #1
    2f84:	439a      	bics	r2, r3
    2f86:	6022      	str	r2, [r4, #0]
    2f88:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2f8a:	aa13      	add	r2, sp, #76	; 0x4c
    2f8c:	9300      	str	r3, [sp, #0]
    2f8e:	0021      	movs	r1, r4
    2f90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    2f92:	9809      	ldr	r0, [sp, #36]	; 0x24
    2f94:	f000 f9f2 	bl	337c <_printf_common>
    2f98:	1c43      	adds	r3, r0, #1
    2f9a:	d000      	beq.n	2f9e <_printf_float+0xba>
    2f9c:	e09c      	b.n	30d8 <_printf_float+0x1f4>
    2f9e:	2001      	movs	r0, #1
    2fa0:	4240      	negs	r0, r0
    2fa2:	b015      	add	sp, #84	; 0x54
    2fa4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2fa6:	3307      	adds	r3, #7
    2fa8:	e7b6      	b.n	2f18 <_printf_float+0x34>
    2faa:	2380      	movs	r3, #128	; 0x80
    2fac:	6862      	ldr	r2, [r4, #4]
    2fae:	00db      	lsls	r3, r3, #3
    2fb0:	1c51      	adds	r1, r2, #1
    2fb2:	d145      	bne.n	3040 <_printf_float+0x15c>
    2fb4:	3207      	adds	r2, #7
    2fb6:	6062      	str	r2, [r4, #4]
    2fb8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    2fba:	2100      	movs	r1, #0
    2fbc:	4313      	orrs	r3, r2
    2fbe:	aa12      	add	r2, sp, #72	; 0x48
    2fc0:	9205      	str	r2, [sp, #20]
    2fc2:	aa11      	add	r2, sp, #68	; 0x44
    2fc4:	9203      	str	r2, [sp, #12]
    2fc6:	2223      	movs	r2, #35	; 0x23
    2fc8:	6023      	str	r3, [r4, #0]
    2fca:	9106      	str	r1, [sp, #24]
    2fcc:	9301      	str	r3, [sp, #4]
    2fce:	a908      	add	r1, sp, #32
    2fd0:	6863      	ldr	r3, [r4, #4]
    2fd2:	1852      	adds	r2, r2, r1
    2fd4:	9202      	str	r2, [sp, #8]
    2fd6:	9300      	str	r3, [sp, #0]
    2fd8:	0032      	movs	r2, r6
    2fda:	002b      	movs	r3, r5
    2fdc:	9704      	str	r7, [sp, #16]
    2fde:	9809      	ldr	r0, [sp, #36]	; 0x24
    2fe0:	f7ff fee4 	bl	2dac <__cvt>
    2fe4:	2320      	movs	r3, #32
    2fe6:	003a      	movs	r2, r7
    2fe8:	0005      	movs	r5, r0
    2fea:	439a      	bics	r2, r3
    2fec:	2a47      	cmp	r2, #71	; 0x47
    2fee:	d107      	bne.n	3000 <_printf_float+0x11c>
    2ff0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    2ff2:	1cda      	adds	r2, r3, #3
    2ff4:	db02      	blt.n	2ffc <_printf_float+0x118>
    2ff6:	6862      	ldr	r2, [r4, #4]
    2ff8:	4293      	cmp	r3, r2
    2ffa:	dd5b      	ble.n	30b4 <_printf_float+0x1d0>
    2ffc:	3f02      	subs	r7, #2
    2ffe:	b2ff      	uxtb	r7, r7
    3000:	9911      	ldr	r1, [sp, #68]	; 0x44
    3002:	2f65      	cmp	r7, #101	; 0x65
    3004:	d83b      	bhi.n	307e <_printf_float+0x19a>
    3006:	0020      	movs	r0, r4
    3008:	3901      	subs	r1, #1
    300a:	003a      	movs	r2, r7
    300c:	3050      	adds	r0, #80	; 0x50
    300e:	9111      	str	r1, [sp, #68]	; 0x44
    3010:	f7ff ff30 	bl	2e74 <__exponent>
    3014:	9a12      	ldr	r2, [sp, #72]	; 0x48
    3016:	0006      	movs	r6, r0
    3018:	1883      	adds	r3, r0, r2
    301a:	6123      	str	r3, [r4, #16]
    301c:	2a01      	cmp	r2, #1
    301e:	dc02      	bgt.n	3026 <_printf_float+0x142>
    3020:	6822      	ldr	r2, [r4, #0]
    3022:	07d2      	lsls	r2, r2, #31
    3024:	d501      	bpl.n	302a <_printf_float+0x146>
    3026:	3301      	adds	r3, #1
    3028:	6123      	str	r3, [r4, #16]
    302a:	2323      	movs	r3, #35	; 0x23
    302c:	aa08      	add	r2, sp, #32
    302e:	189b      	adds	r3, r3, r2
    3030:	781b      	ldrb	r3, [r3, #0]
    3032:	2b00      	cmp	r3, #0
    3034:	d0a8      	beq.n	2f88 <_printf_float+0xa4>
    3036:	0023      	movs	r3, r4
    3038:	222d      	movs	r2, #45	; 0x2d
    303a:	3343      	adds	r3, #67	; 0x43
    303c:	701a      	strb	r2, [r3, #0]
    303e:	e7a3      	b.n	2f88 <_printf_float+0xa4>
    3040:	2f67      	cmp	r7, #103	; 0x67
    3042:	d001      	beq.n	3048 <_printf_float+0x164>
    3044:	2f47      	cmp	r7, #71	; 0x47
    3046:	d1b7      	bne.n	2fb8 <_printf_float+0xd4>
    3048:	2a00      	cmp	r2, #0
    304a:	d016      	beq.n	307a <_printf_float+0x196>
    304c:	990c      	ldr	r1, [sp, #48]	; 0x30
    304e:	a808      	add	r0, sp, #32
    3050:	430b      	orrs	r3, r1
    3052:	2100      	movs	r1, #0
    3054:	9106      	str	r1, [sp, #24]
    3056:	a912      	add	r1, sp, #72	; 0x48
    3058:	9105      	str	r1, [sp, #20]
    305a:	a911      	add	r1, sp, #68	; 0x44
    305c:	9103      	str	r1, [sp, #12]
    305e:	2123      	movs	r1, #35	; 0x23
    3060:	1809      	adds	r1, r1, r0
    3062:	6023      	str	r3, [r4, #0]
    3064:	9301      	str	r3, [sp, #4]
    3066:	9200      	str	r2, [sp, #0]
    3068:	002b      	movs	r3, r5
    306a:	9704      	str	r7, [sp, #16]
    306c:	9102      	str	r1, [sp, #8]
    306e:	0032      	movs	r2, r6
    3070:	9809      	ldr	r0, [sp, #36]	; 0x24
    3072:	f7ff fe9b 	bl	2dac <__cvt>
    3076:	0005      	movs	r5, r0
    3078:	e7ba      	b.n	2ff0 <_printf_float+0x10c>
    307a:	2201      	movs	r2, #1
    307c:	e79b      	b.n	2fb6 <_printf_float+0xd2>
    307e:	2f66      	cmp	r7, #102	; 0x66
    3080:	d119      	bne.n	30b6 <_printf_float+0x1d2>
    3082:	6863      	ldr	r3, [r4, #4]
    3084:	2900      	cmp	r1, #0
    3086:	dd0c      	ble.n	30a2 <_printf_float+0x1be>
    3088:	6121      	str	r1, [r4, #16]
    308a:	2b00      	cmp	r3, #0
    308c:	d102      	bne.n	3094 <_printf_float+0x1b0>
    308e:	6822      	ldr	r2, [r4, #0]
    3090:	07d2      	lsls	r2, r2, #31
    3092:	d502      	bpl.n	309a <_printf_float+0x1b6>
    3094:	3301      	adds	r3, #1
    3096:	185b      	adds	r3, r3, r1
    3098:	6123      	str	r3, [r4, #16]
    309a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    309c:	2600      	movs	r6, #0
    309e:	65a3      	str	r3, [r4, #88]	; 0x58
    30a0:	e7c3      	b.n	302a <_printf_float+0x146>
    30a2:	2b00      	cmp	r3, #0
    30a4:	d103      	bne.n	30ae <_printf_float+0x1ca>
    30a6:	2201      	movs	r2, #1
    30a8:	6821      	ldr	r1, [r4, #0]
    30aa:	4211      	tst	r1, r2
    30ac:	d000      	beq.n	30b0 <_printf_float+0x1cc>
    30ae:	1c9a      	adds	r2, r3, #2
    30b0:	6122      	str	r2, [r4, #16]
    30b2:	e7f2      	b.n	309a <_printf_float+0x1b6>
    30b4:	2767      	movs	r7, #103	; 0x67
    30b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    30b8:	9812      	ldr	r0, [sp, #72]	; 0x48
    30ba:	4283      	cmp	r3, r0
    30bc:	db05      	blt.n	30ca <_printf_float+0x1e6>
    30be:	6822      	ldr	r2, [r4, #0]
    30c0:	6123      	str	r3, [r4, #16]
    30c2:	07d2      	lsls	r2, r2, #31
    30c4:	d5e9      	bpl.n	309a <_printf_float+0x1b6>
    30c6:	3301      	adds	r3, #1
    30c8:	e7e6      	b.n	3098 <_printf_float+0x1b4>
    30ca:	2201      	movs	r2, #1
    30cc:	2b00      	cmp	r3, #0
    30ce:	dc01      	bgt.n	30d4 <_printf_float+0x1f0>
    30d0:	1892      	adds	r2, r2, r2
    30d2:	1ad2      	subs	r2, r2, r3
    30d4:	1812      	adds	r2, r2, r0
    30d6:	e7eb      	b.n	30b0 <_printf_float+0x1cc>
    30d8:	6822      	ldr	r2, [r4, #0]
    30da:	0553      	lsls	r3, r2, #21
    30dc:	d408      	bmi.n	30f0 <_printf_float+0x20c>
    30de:	6923      	ldr	r3, [r4, #16]
    30e0:	002a      	movs	r2, r5
    30e2:	990a      	ldr	r1, [sp, #40]	; 0x28
    30e4:	9809      	ldr	r0, [sp, #36]	; 0x24
    30e6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    30e8:	47a8      	blx	r5
    30ea:	1c43      	adds	r3, r0, #1
    30ec:	d129      	bne.n	3142 <_printf_float+0x25e>
    30ee:	e756      	b.n	2f9e <_printf_float+0xba>
    30f0:	2f65      	cmp	r7, #101	; 0x65
    30f2:	d800      	bhi.n	30f6 <_printf_float+0x212>
    30f4:	e0dc      	b.n	32b0 <_printf_float+0x3cc>
    30f6:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    30f8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    30fa:	2200      	movs	r2, #0
    30fc:	2300      	movs	r3, #0
    30fe:	f7ff fcdd 	bl	2abc <__aeabi_dcmpeq>
    3102:	2800      	cmp	r0, #0
    3104:	d035      	beq.n	3172 <_printf_float+0x28e>
    3106:	2301      	movs	r3, #1
    3108:	4a35      	ldr	r2, [pc, #212]	; (31e0 <_printf_float+0x2fc>)
    310a:	990a      	ldr	r1, [sp, #40]	; 0x28
    310c:	9809      	ldr	r0, [sp, #36]	; 0x24
    310e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    3110:	47a8      	blx	r5
    3112:	1c43      	adds	r3, r0, #1
    3114:	d100      	bne.n	3118 <_printf_float+0x234>
    3116:	e742      	b.n	2f9e <_printf_float+0xba>
    3118:	9b11      	ldr	r3, [sp, #68]	; 0x44
    311a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    311c:	4293      	cmp	r3, r2
    311e:	db02      	blt.n	3126 <_printf_float+0x242>
    3120:	6823      	ldr	r3, [r4, #0]
    3122:	07db      	lsls	r3, r3, #31
    3124:	d50d      	bpl.n	3142 <_printf_float+0x25e>
    3126:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    3128:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    312a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    312c:	990a      	ldr	r1, [sp, #40]	; 0x28
    312e:	9809      	ldr	r0, [sp, #36]	; 0x24
    3130:	47a8      	blx	r5
    3132:	2500      	movs	r5, #0
    3134:	1c43      	adds	r3, r0, #1
    3136:	d100      	bne.n	313a <_printf_float+0x256>
    3138:	e731      	b.n	2f9e <_printf_float+0xba>
    313a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    313c:	3b01      	subs	r3, #1
    313e:	429d      	cmp	r5, r3
    3140:	db0b      	blt.n	315a <_printf_float+0x276>
    3142:	6823      	ldr	r3, [r4, #0]
    3144:	2500      	movs	r5, #0
    3146:	079b      	lsls	r3, r3, #30
    3148:	d500      	bpl.n	314c <_printf_float+0x268>
    314a:	e0fd      	b.n	3348 <_printf_float+0x464>
    314c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    314e:	68e0      	ldr	r0, [r4, #12]
    3150:	4298      	cmp	r0, r3
    3152:	db00      	blt.n	3156 <_printf_float+0x272>
    3154:	e725      	b.n	2fa2 <_printf_float+0xbe>
    3156:	0018      	movs	r0, r3
    3158:	e723      	b.n	2fa2 <_printf_float+0xbe>
    315a:	0022      	movs	r2, r4
    315c:	2301      	movs	r3, #1
    315e:	321a      	adds	r2, #26
    3160:	990a      	ldr	r1, [sp, #40]	; 0x28
    3162:	9809      	ldr	r0, [sp, #36]	; 0x24
    3164:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    3166:	47b0      	blx	r6
    3168:	1c43      	adds	r3, r0, #1
    316a:	d100      	bne.n	316e <_printf_float+0x28a>
    316c:	e717      	b.n	2f9e <_printf_float+0xba>
    316e:	3501      	adds	r5, #1
    3170:	e7e3      	b.n	313a <_printf_float+0x256>
    3172:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3174:	2b00      	cmp	r3, #0
    3176:	dc35      	bgt.n	31e4 <_printf_float+0x300>
    3178:	2301      	movs	r3, #1
    317a:	4a19      	ldr	r2, [pc, #100]	; (31e0 <_printf_float+0x2fc>)
    317c:	990a      	ldr	r1, [sp, #40]	; 0x28
    317e:	9809      	ldr	r0, [sp, #36]	; 0x24
    3180:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    3182:	47b0      	blx	r6
    3184:	1c43      	adds	r3, r0, #1
    3186:	d100      	bne.n	318a <_printf_float+0x2a6>
    3188:	e709      	b.n	2f9e <_printf_float+0xba>
    318a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    318c:	2b00      	cmp	r3, #0
    318e:	d105      	bne.n	319c <_printf_float+0x2b8>
    3190:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3192:	2b00      	cmp	r3, #0
    3194:	d102      	bne.n	319c <_printf_float+0x2b8>
    3196:	6823      	ldr	r3, [r4, #0]
    3198:	07db      	lsls	r3, r3, #31
    319a:	d5d2      	bpl.n	3142 <_printf_float+0x25e>
    319c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    319e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    31a0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    31a2:	990a      	ldr	r1, [sp, #40]	; 0x28
    31a4:	9809      	ldr	r0, [sp, #36]	; 0x24
    31a6:	47b0      	blx	r6
    31a8:	2600      	movs	r6, #0
    31aa:	1c43      	adds	r3, r0, #1
    31ac:	d100      	bne.n	31b0 <_printf_float+0x2cc>
    31ae:	e6f6      	b.n	2f9e <_printf_float+0xba>
    31b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    31b2:	425b      	negs	r3, r3
    31b4:	429e      	cmp	r6, r3
    31b6:	db01      	blt.n	31bc <_printf_float+0x2d8>
    31b8:	9b12      	ldr	r3, [sp, #72]	; 0x48
    31ba:	e791      	b.n	30e0 <_printf_float+0x1fc>
    31bc:	0022      	movs	r2, r4
    31be:	2301      	movs	r3, #1
    31c0:	321a      	adds	r2, #26
    31c2:	990a      	ldr	r1, [sp, #40]	; 0x28
    31c4:	9809      	ldr	r0, [sp, #36]	; 0x24
    31c6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    31c8:	47b8      	blx	r7
    31ca:	1c43      	adds	r3, r0, #1
    31cc:	d100      	bne.n	31d0 <_printf_float+0x2ec>
    31ce:	e6e6      	b.n	2f9e <_printf_float+0xba>
    31d0:	3601      	adds	r6, #1
    31d2:	e7ed      	b.n	31b0 <_printf_float+0x2cc>
    31d4:	7fefffff 	.word	0x7fefffff
    31d8:	00005b08 	.word	0x00005b08
    31dc:	00005b04 	.word	0x00005b04
    31e0:	00005b14 	.word	0x00005b14
    31e4:	6da3      	ldr	r3, [r4, #88]	; 0x58
    31e6:	9e12      	ldr	r6, [sp, #72]	; 0x48
    31e8:	429e      	cmp	r6, r3
    31ea:	dd00      	ble.n	31ee <_printf_float+0x30a>
    31ec:	001e      	movs	r6, r3
    31ee:	2e00      	cmp	r6, #0
    31f0:	dc35      	bgt.n	325e <_printf_float+0x37a>
    31f2:	2300      	movs	r3, #0
    31f4:	930c      	str	r3, [sp, #48]	; 0x30
    31f6:	43f3      	mvns	r3, r6
    31f8:	17db      	asrs	r3, r3, #31
    31fa:	930f      	str	r3, [sp, #60]	; 0x3c
    31fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    31fe:	6da7      	ldr	r7, [r4, #88]	; 0x58
    3200:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    3202:	4033      	ands	r3, r6
    3204:	1afb      	subs	r3, r7, r3
    3206:	429a      	cmp	r2, r3
    3208:	db32      	blt.n	3270 <_printf_float+0x38c>
    320a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    320c:	9a12      	ldr	r2, [sp, #72]	; 0x48
    320e:	4293      	cmp	r3, r2
    3210:	db3c      	blt.n	328c <_printf_float+0x3a8>
    3212:	6823      	ldr	r3, [r4, #0]
    3214:	07db      	lsls	r3, r3, #31
    3216:	d439      	bmi.n	328c <_printf_float+0x3a8>
    3218:	9e12      	ldr	r6, [sp, #72]	; 0x48
    321a:	9a11      	ldr	r2, [sp, #68]	; 0x44
    321c:	1bf3      	subs	r3, r6, r7
    321e:	1ab6      	subs	r6, r6, r2
    3220:	429e      	cmp	r6, r3
    3222:	dd00      	ble.n	3226 <_printf_float+0x342>
    3224:	001e      	movs	r6, r3
    3226:	2e00      	cmp	r6, #0
    3228:	dc39      	bgt.n	329e <_printf_float+0x3ba>
    322a:	43f7      	mvns	r7, r6
    322c:	2500      	movs	r5, #0
    322e:	17fb      	asrs	r3, r7, #31
    3230:	930c      	str	r3, [sp, #48]	; 0x30
    3232:	9a11      	ldr	r2, [sp, #68]	; 0x44
    3234:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3236:	990c      	ldr	r1, [sp, #48]	; 0x30
    3238:	1a9b      	subs	r3, r3, r2
    323a:	0032      	movs	r2, r6
    323c:	400a      	ands	r2, r1
    323e:	1a9b      	subs	r3, r3, r2
    3240:	429d      	cmp	r5, r3
    3242:	db00      	blt.n	3246 <_printf_float+0x362>
    3244:	e77d      	b.n	3142 <_printf_float+0x25e>
    3246:	0022      	movs	r2, r4
    3248:	2301      	movs	r3, #1
    324a:	321a      	adds	r2, #26
    324c:	990a      	ldr	r1, [sp, #40]	; 0x28
    324e:	9809      	ldr	r0, [sp, #36]	; 0x24
    3250:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    3252:	47b8      	blx	r7
    3254:	1c43      	adds	r3, r0, #1
    3256:	d100      	bne.n	325a <_printf_float+0x376>
    3258:	e6a1      	b.n	2f9e <_printf_float+0xba>
    325a:	3501      	adds	r5, #1
    325c:	e7e9      	b.n	3232 <_printf_float+0x34e>
    325e:	0033      	movs	r3, r6
    3260:	002a      	movs	r2, r5
    3262:	990a      	ldr	r1, [sp, #40]	; 0x28
    3264:	9809      	ldr	r0, [sp, #36]	; 0x24
    3266:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    3268:	47b8      	blx	r7
    326a:	1c43      	adds	r3, r0, #1
    326c:	d1c1      	bne.n	31f2 <_printf_float+0x30e>
    326e:	e696      	b.n	2f9e <_printf_float+0xba>
    3270:	0022      	movs	r2, r4
    3272:	2301      	movs	r3, #1
    3274:	321a      	adds	r2, #26
    3276:	990a      	ldr	r1, [sp, #40]	; 0x28
    3278:	9809      	ldr	r0, [sp, #36]	; 0x24
    327a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    327c:	47b8      	blx	r7
    327e:	1c43      	adds	r3, r0, #1
    3280:	d100      	bne.n	3284 <_printf_float+0x3a0>
    3282:	e68c      	b.n	2f9e <_printf_float+0xba>
    3284:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3286:	3301      	adds	r3, #1
    3288:	930c      	str	r3, [sp, #48]	; 0x30
    328a:	e7b7      	b.n	31fc <_printf_float+0x318>
    328c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    328e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    3290:	990a      	ldr	r1, [sp, #40]	; 0x28
    3292:	9809      	ldr	r0, [sp, #36]	; 0x24
    3294:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    3296:	47b0      	blx	r6
    3298:	1c43      	adds	r3, r0, #1
    329a:	d1bd      	bne.n	3218 <_printf_float+0x334>
    329c:	e67f      	b.n	2f9e <_printf_float+0xba>
    329e:	19ea      	adds	r2, r5, r7
    32a0:	0033      	movs	r3, r6
    32a2:	990a      	ldr	r1, [sp, #40]	; 0x28
    32a4:	9809      	ldr	r0, [sp, #36]	; 0x24
    32a6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    32a8:	47a8      	blx	r5
    32aa:	1c43      	adds	r3, r0, #1
    32ac:	d1bd      	bne.n	322a <_printf_float+0x346>
    32ae:	e676      	b.n	2f9e <_printf_float+0xba>
    32b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    32b2:	2b01      	cmp	r3, #1
    32b4:	dc02      	bgt.n	32bc <_printf_float+0x3d8>
    32b6:	2301      	movs	r3, #1
    32b8:	421a      	tst	r2, r3
    32ba:	d038      	beq.n	332e <_printf_float+0x44a>
    32bc:	2301      	movs	r3, #1
    32be:	002a      	movs	r2, r5
    32c0:	990a      	ldr	r1, [sp, #40]	; 0x28
    32c2:	9809      	ldr	r0, [sp, #36]	; 0x24
    32c4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    32c6:	47b8      	blx	r7
    32c8:	1c43      	adds	r3, r0, #1
    32ca:	d100      	bne.n	32ce <_printf_float+0x3ea>
    32cc:	e667      	b.n	2f9e <_printf_float+0xba>
    32ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    32d0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    32d2:	990a      	ldr	r1, [sp, #40]	; 0x28
    32d4:	9809      	ldr	r0, [sp, #36]	; 0x24
    32d6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    32d8:	47b8      	blx	r7
    32da:	1c43      	adds	r3, r0, #1
    32dc:	d100      	bne.n	32e0 <_printf_float+0x3fc>
    32de:	e65e      	b.n	2f9e <_printf_float+0xba>
    32e0:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    32e2:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    32e4:	2200      	movs	r2, #0
    32e6:	2300      	movs	r3, #0
    32e8:	f7ff fbe8 	bl	2abc <__aeabi_dcmpeq>
    32ec:	2800      	cmp	r0, #0
    32ee:	d008      	beq.n	3302 <_printf_float+0x41e>
    32f0:	2500      	movs	r5, #0
    32f2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    32f4:	3b01      	subs	r3, #1
    32f6:	429d      	cmp	r5, r3
    32f8:	db0d      	blt.n	3316 <_printf_float+0x432>
    32fa:	0022      	movs	r2, r4
    32fc:	0033      	movs	r3, r6
    32fe:	3250      	adds	r2, #80	; 0x50
    3300:	e6ef      	b.n	30e2 <_printf_float+0x1fe>
    3302:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3304:	1c6a      	adds	r2, r5, #1
    3306:	3b01      	subs	r3, #1
    3308:	990a      	ldr	r1, [sp, #40]	; 0x28
    330a:	9809      	ldr	r0, [sp, #36]	; 0x24
    330c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    330e:	47a8      	blx	r5
    3310:	1c43      	adds	r3, r0, #1
    3312:	d1f2      	bne.n	32fa <_printf_float+0x416>
    3314:	e643      	b.n	2f9e <_printf_float+0xba>
    3316:	0022      	movs	r2, r4
    3318:	2301      	movs	r3, #1
    331a:	321a      	adds	r2, #26
    331c:	990a      	ldr	r1, [sp, #40]	; 0x28
    331e:	9809      	ldr	r0, [sp, #36]	; 0x24
    3320:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    3322:	47b8      	blx	r7
    3324:	1c43      	adds	r3, r0, #1
    3326:	d100      	bne.n	332a <_printf_float+0x446>
    3328:	e639      	b.n	2f9e <_printf_float+0xba>
    332a:	3501      	adds	r5, #1
    332c:	e7e1      	b.n	32f2 <_printf_float+0x40e>
    332e:	002a      	movs	r2, r5
    3330:	e7ea      	b.n	3308 <_printf_float+0x424>
    3332:	0022      	movs	r2, r4
    3334:	2301      	movs	r3, #1
    3336:	3219      	adds	r2, #25
    3338:	990a      	ldr	r1, [sp, #40]	; 0x28
    333a:	9809      	ldr	r0, [sp, #36]	; 0x24
    333c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    333e:	47b0      	blx	r6
    3340:	1c43      	adds	r3, r0, #1
    3342:	d100      	bne.n	3346 <_printf_float+0x462>
    3344:	e62b      	b.n	2f9e <_printf_float+0xba>
    3346:	3501      	adds	r5, #1
    3348:	68e3      	ldr	r3, [r4, #12]
    334a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    334c:	1a9b      	subs	r3, r3, r2
    334e:	429d      	cmp	r5, r3
    3350:	dbef      	blt.n	3332 <_printf_float+0x44e>
    3352:	e6fb      	b.n	314c <_printf_float+0x268>
    3354:	0032      	movs	r2, r6
    3356:	002b      	movs	r3, r5
    3358:	0030      	movs	r0, r6
    335a:	0029      	movs	r1, r5
    335c:	f002 f9fc 	bl	5758 <__aeabi_dcmpun>
    3360:	2800      	cmp	r0, #0
    3362:	d100      	bne.n	3366 <_printf_float+0x482>
    3364:	e621      	b.n	2faa <_printf_float+0xc6>
    3366:	4d03      	ldr	r5, [pc, #12]	; (3374 <_printf_float+0x490>)
    3368:	2f47      	cmp	r7, #71	; 0x47
    336a:	d900      	bls.n	336e <_printf_float+0x48a>
    336c:	e605      	b.n	2f7a <_printf_float+0x96>
    336e:	4d02      	ldr	r5, [pc, #8]	; (3378 <_printf_float+0x494>)
    3370:	e603      	b.n	2f7a <_printf_float+0x96>
    3372:	46c0      	nop			; (mov r8, r8)
    3374:	00005b10 	.word	0x00005b10
    3378:	00005b0c 	.word	0x00005b0c

0000337c <_printf_common>:
    337c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    337e:	0015      	movs	r5, r2
    3380:	9301      	str	r3, [sp, #4]
    3382:	688a      	ldr	r2, [r1, #8]
    3384:	690b      	ldr	r3, [r1, #16]
    3386:	9000      	str	r0, [sp, #0]
    3388:	000c      	movs	r4, r1
    338a:	4293      	cmp	r3, r2
    338c:	da00      	bge.n	3390 <_printf_common+0x14>
    338e:	0013      	movs	r3, r2
    3390:	0022      	movs	r2, r4
    3392:	602b      	str	r3, [r5, #0]
    3394:	3243      	adds	r2, #67	; 0x43
    3396:	7812      	ldrb	r2, [r2, #0]
    3398:	2a00      	cmp	r2, #0
    339a:	d001      	beq.n	33a0 <_printf_common+0x24>
    339c:	3301      	adds	r3, #1
    339e:	602b      	str	r3, [r5, #0]
    33a0:	6823      	ldr	r3, [r4, #0]
    33a2:	069b      	lsls	r3, r3, #26
    33a4:	d502      	bpl.n	33ac <_printf_common+0x30>
    33a6:	682b      	ldr	r3, [r5, #0]
    33a8:	3302      	adds	r3, #2
    33aa:	602b      	str	r3, [r5, #0]
    33ac:	2706      	movs	r7, #6
    33ae:	6823      	ldr	r3, [r4, #0]
    33b0:	401f      	ands	r7, r3
    33b2:	d027      	beq.n	3404 <_printf_common+0x88>
    33b4:	0023      	movs	r3, r4
    33b6:	3343      	adds	r3, #67	; 0x43
    33b8:	781b      	ldrb	r3, [r3, #0]
    33ba:	1e5a      	subs	r2, r3, #1
    33bc:	4193      	sbcs	r3, r2
    33be:	6822      	ldr	r2, [r4, #0]
    33c0:	0692      	lsls	r2, r2, #26
    33c2:	d430      	bmi.n	3426 <_printf_common+0xaa>
    33c4:	0022      	movs	r2, r4
    33c6:	9901      	ldr	r1, [sp, #4]
    33c8:	3243      	adds	r2, #67	; 0x43
    33ca:	9800      	ldr	r0, [sp, #0]
    33cc:	9e08      	ldr	r6, [sp, #32]
    33ce:	47b0      	blx	r6
    33d0:	1c43      	adds	r3, r0, #1
    33d2:	d025      	beq.n	3420 <_printf_common+0xa4>
    33d4:	2306      	movs	r3, #6
    33d6:	6820      	ldr	r0, [r4, #0]
    33d8:	682a      	ldr	r2, [r5, #0]
    33da:	68e1      	ldr	r1, [r4, #12]
    33dc:	4003      	ands	r3, r0
    33de:	2500      	movs	r5, #0
    33e0:	2b04      	cmp	r3, #4
    33e2:	d103      	bne.n	33ec <_printf_common+0x70>
    33e4:	1a8d      	subs	r5, r1, r2
    33e6:	43eb      	mvns	r3, r5
    33e8:	17db      	asrs	r3, r3, #31
    33ea:	401d      	ands	r5, r3
    33ec:	68a3      	ldr	r3, [r4, #8]
    33ee:	6922      	ldr	r2, [r4, #16]
    33f0:	4293      	cmp	r3, r2
    33f2:	dd01      	ble.n	33f8 <_printf_common+0x7c>
    33f4:	1a9b      	subs	r3, r3, r2
    33f6:	18ed      	adds	r5, r5, r3
    33f8:	2700      	movs	r7, #0
    33fa:	42bd      	cmp	r5, r7
    33fc:	d120      	bne.n	3440 <_printf_common+0xc4>
    33fe:	2000      	movs	r0, #0
    3400:	e010      	b.n	3424 <_printf_common+0xa8>
    3402:	3701      	adds	r7, #1
    3404:	68e3      	ldr	r3, [r4, #12]
    3406:	682a      	ldr	r2, [r5, #0]
    3408:	1a9b      	subs	r3, r3, r2
    340a:	429f      	cmp	r7, r3
    340c:	dad2      	bge.n	33b4 <_printf_common+0x38>
    340e:	0022      	movs	r2, r4
    3410:	2301      	movs	r3, #1
    3412:	3219      	adds	r2, #25
    3414:	9901      	ldr	r1, [sp, #4]
    3416:	9800      	ldr	r0, [sp, #0]
    3418:	9e08      	ldr	r6, [sp, #32]
    341a:	47b0      	blx	r6
    341c:	1c43      	adds	r3, r0, #1
    341e:	d1f0      	bne.n	3402 <_printf_common+0x86>
    3420:	2001      	movs	r0, #1
    3422:	4240      	negs	r0, r0
    3424:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    3426:	2030      	movs	r0, #48	; 0x30
    3428:	18e1      	adds	r1, r4, r3
    342a:	3143      	adds	r1, #67	; 0x43
    342c:	7008      	strb	r0, [r1, #0]
    342e:	0021      	movs	r1, r4
    3430:	1c5a      	adds	r2, r3, #1
    3432:	3145      	adds	r1, #69	; 0x45
    3434:	7809      	ldrb	r1, [r1, #0]
    3436:	18a2      	adds	r2, r4, r2
    3438:	3243      	adds	r2, #67	; 0x43
    343a:	3302      	adds	r3, #2
    343c:	7011      	strb	r1, [r2, #0]
    343e:	e7c1      	b.n	33c4 <_printf_common+0x48>
    3440:	0022      	movs	r2, r4
    3442:	2301      	movs	r3, #1
    3444:	321a      	adds	r2, #26
    3446:	9901      	ldr	r1, [sp, #4]
    3448:	9800      	ldr	r0, [sp, #0]
    344a:	9e08      	ldr	r6, [sp, #32]
    344c:	47b0      	blx	r6
    344e:	1c43      	adds	r3, r0, #1
    3450:	d0e6      	beq.n	3420 <_printf_common+0xa4>
    3452:	3701      	adds	r7, #1
    3454:	e7d1      	b.n	33fa <_printf_common+0x7e>
	...

00003458 <_printf_i>:
    3458:	b5f0      	push	{r4, r5, r6, r7, lr}
    345a:	b08b      	sub	sp, #44	; 0x2c
    345c:	9206      	str	r2, [sp, #24]
    345e:	000a      	movs	r2, r1
    3460:	3243      	adds	r2, #67	; 0x43
    3462:	9307      	str	r3, [sp, #28]
    3464:	9005      	str	r0, [sp, #20]
    3466:	9204      	str	r2, [sp, #16]
    3468:	7e0a      	ldrb	r2, [r1, #24]
    346a:	000c      	movs	r4, r1
    346c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    346e:	2a6e      	cmp	r2, #110	; 0x6e
    3470:	d100      	bne.n	3474 <_printf_i+0x1c>
    3472:	e08f      	b.n	3594 <_printf_i+0x13c>
    3474:	d817      	bhi.n	34a6 <_printf_i+0x4e>
    3476:	2a63      	cmp	r2, #99	; 0x63
    3478:	d02c      	beq.n	34d4 <_printf_i+0x7c>
    347a:	d808      	bhi.n	348e <_printf_i+0x36>
    347c:	2a00      	cmp	r2, #0
    347e:	d100      	bne.n	3482 <_printf_i+0x2a>
    3480:	e099      	b.n	35b6 <_printf_i+0x15e>
    3482:	2a58      	cmp	r2, #88	; 0x58
    3484:	d054      	beq.n	3530 <_printf_i+0xd8>
    3486:	0026      	movs	r6, r4
    3488:	3642      	adds	r6, #66	; 0x42
    348a:	7032      	strb	r2, [r6, #0]
    348c:	e029      	b.n	34e2 <_printf_i+0x8a>
    348e:	2a64      	cmp	r2, #100	; 0x64
    3490:	d001      	beq.n	3496 <_printf_i+0x3e>
    3492:	2a69      	cmp	r2, #105	; 0x69
    3494:	d1f7      	bne.n	3486 <_printf_i+0x2e>
    3496:	6821      	ldr	r1, [r4, #0]
    3498:	681a      	ldr	r2, [r3, #0]
    349a:	0608      	lsls	r0, r1, #24
    349c:	d523      	bpl.n	34e6 <_printf_i+0x8e>
    349e:	1d11      	adds	r1, r2, #4
    34a0:	6019      	str	r1, [r3, #0]
    34a2:	6815      	ldr	r5, [r2, #0]
    34a4:	e025      	b.n	34f2 <_printf_i+0x9a>
    34a6:	2a73      	cmp	r2, #115	; 0x73
    34a8:	d100      	bne.n	34ac <_printf_i+0x54>
    34aa:	e088      	b.n	35be <_printf_i+0x166>
    34ac:	d808      	bhi.n	34c0 <_printf_i+0x68>
    34ae:	2a6f      	cmp	r2, #111	; 0x6f
    34b0:	d029      	beq.n	3506 <_printf_i+0xae>
    34b2:	2a70      	cmp	r2, #112	; 0x70
    34b4:	d1e7      	bne.n	3486 <_printf_i+0x2e>
    34b6:	2220      	movs	r2, #32
    34b8:	6809      	ldr	r1, [r1, #0]
    34ba:	430a      	orrs	r2, r1
    34bc:	6022      	str	r2, [r4, #0]
    34be:	e003      	b.n	34c8 <_printf_i+0x70>
    34c0:	2a75      	cmp	r2, #117	; 0x75
    34c2:	d020      	beq.n	3506 <_printf_i+0xae>
    34c4:	2a78      	cmp	r2, #120	; 0x78
    34c6:	d1de      	bne.n	3486 <_printf_i+0x2e>
    34c8:	0022      	movs	r2, r4
    34ca:	2178      	movs	r1, #120	; 0x78
    34cc:	3245      	adds	r2, #69	; 0x45
    34ce:	7011      	strb	r1, [r2, #0]
    34d0:	4a6c      	ldr	r2, [pc, #432]	; (3684 <_printf_i+0x22c>)
    34d2:	e030      	b.n	3536 <_printf_i+0xde>
    34d4:	000e      	movs	r6, r1
    34d6:	681a      	ldr	r2, [r3, #0]
    34d8:	3642      	adds	r6, #66	; 0x42
    34da:	1d11      	adds	r1, r2, #4
    34dc:	6019      	str	r1, [r3, #0]
    34de:	6813      	ldr	r3, [r2, #0]
    34e0:	7033      	strb	r3, [r6, #0]
    34e2:	2301      	movs	r3, #1
    34e4:	e079      	b.n	35da <_printf_i+0x182>
    34e6:	0649      	lsls	r1, r1, #25
    34e8:	d5d9      	bpl.n	349e <_printf_i+0x46>
    34ea:	1d11      	adds	r1, r2, #4
    34ec:	6019      	str	r1, [r3, #0]
    34ee:	2300      	movs	r3, #0
    34f0:	5ed5      	ldrsh	r5, [r2, r3]
    34f2:	2d00      	cmp	r5, #0
    34f4:	da03      	bge.n	34fe <_printf_i+0xa6>
    34f6:	232d      	movs	r3, #45	; 0x2d
    34f8:	9a04      	ldr	r2, [sp, #16]
    34fa:	426d      	negs	r5, r5
    34fc:	7013      	strb	r3, [r2, #0]
    34fe:	4b62      	ldr	r3, [pc, #392]	; (3688 <_printf_i+0x230>)
    3500:	270a      	movs	r7, #10
    3502:	9303      	str	r3, [sp, #12]
    3504:	e02f      	b.n	3566 <_printf_i+0x10e>
    3506:	6820      	ldr	r0, [r4, #0]
    3508:	6819      	ldr	r1, [r3, #0]
    350a:	0605      	lsls	r5, r0, #24
    350c:	d503      	bpl.n	3516 <_printf_i+0xbe>
    350e:	1d08      	adds	r0, r1, #4
    3510:	6018      	str	r0, [r3, #0]
    3512:	680d      	ldr	r5, [r1, #0]
    3514:	e005      	b.n	3522 <_printf_i+0xca>
    3516:	0640      	lsls	r0, r0, #25
    3518:	d5f9      	bpl.n	350e <_printf_i+0xb6>
    351a:	680d      	ldr	r5, [r1, #0]
    351c:	1d08      	adds	r0, r1, #4
    351e:	6018      	str	r0, [r3, #0]
    3520:	b2ad      	uxth	r5, r5
    3522:	4b59      	ldr	r3, [pc, #356]	; (3688 <_printf_i+0x230>)
    3524:	2708      	movs	r7, #8
    3526:	9303      	str	r3, [sp, #12]
    3528:	2a6f      	cmp	r2, #111	; 0x6f
    352a:	d018      	beq.n	355e <_printf_i+0x106>
    352c:	270a      	movs	r7, #10
    352e:	e016      	b.n	355e <_printf_i+0x106>
    3530:	3145      	adds	r1, #69	; 0x45
    3532:	700a      	strb	r2, [r1, #0]
    3534:	4a54      	ldr	r2, [pc, #336]	; (3688 <_printf_i+0x230>)
    3536:	9203      	str	r2, [sp, #12]
    3538:	681a      	ldr	r2, [r3, #0]
    353a:	6821      	ldr	r1, [r4, #0]
    353c:	1d10      	adds	r0, r2, #4
    353e:	6018      	str	r0, [r3, #0]
    3540:	6815      	ldr	r5, [r2, #0]
    3542:	0608      	lsls	r0, r1, #24
    3544:	d522      	bpl.n	358c <_printf_i+0x134>
    3546:	07cb      	lsls	r3, r1, #31
    3548:	d502      	bpl.n	3550 <_printf_i+0xf8>
    354a:	2320      	movs	r3, #32
    354c:	4319      	orrs	r1, r3
    354e:	6021      	str	r1, [r4, #0]
    3550:	2710      	movs	r7, #16
    3552:	2d00      	cmp	r5, #0
    3554:	d103      	bne.n	355e <_printf_i+0x106>
    3556:	2320      	movs	r3, #32
    3558:	6822      	ldr	r2, [r4, #0]
    355a:	439a      	bics	r2, r3
    355c:	6022      	str	r2, [r4, #0]
    355e:	0023      	movs	r3, r4
    3560:	2200      	movs	r2, #0
    3562:	3343      	adds	r3, #67	; 0x43
    3564:	701a      	strb	r2, [r3, #0]
    3566:	6863      	ldr	r3, [r4, #4]
    3568:	60a3      	str	r3, [r4, #8]
    356a:	2b00      	cmp	r3, #0
    356c:	db5c      	blt.n	3628 <_printf_i+0x1d0>
    356e:	2204      	movs	r2, #4
    3570:	6821      	ldr	r1, [r4, #0]
    3572:	4391      	bics	r1, r2
    3574:	6021      	str	r1, [r4, #0]
    3576:	2d00      	cmp	r5, #0
    3578:	d158      	bne.n	362c <_printf_i+0x1d4>
    357a:	9e04      	ldr	r6, [sp, #16]
    357c:	2b00      	cmp	r3, #0
    357e:	d064      	beq.n	364a <_printf_i+0x1f2>
    3580:	0026      	movs	r6, r4
    3582:	9b03      	ldr	r3, [sp, #12]
    3584:	3642      	adds	r6, #66	; 0x42
    3586:	781b      	ldrb	r3, [r3, #0]
    3588:	7033      	strb	r3, [r6, #0]
    358a:	e05e      	b.n	364a <_printf_i+0x1f2>
    358c:	0648      	lsls	r0, r1, #25
    358e:	d5da      	bpl.n	3546 <_printf_i+0xee>
    3590:	b2ad      	uxth	r5, r5
    3592:	e7d8      	b.n	3546 <_printf_i+0xee>
    3594:	6809      	ldr	r1, [r1, #0]
    3596:	681a      	ldr	r2, [r3, #0]
    3598:	0608      	lsls	r0, r1, #24
    359a:	d505      	bpl.n	35a8 <_printf_i+0x150>
    359c:	1d11      	adds	r1, r2, #4
    359e:	6019      	str	r1, [r3, #0]
    35a0:	6813      	ldr	r3, [r2, #0]
    35a2:	6962      	ldr	r2, [r4, #20]
    35a4:	601a      	str	r2, [r3, #0]
    35a6:	e006      	b.n	35b6 <_printf_i+0x15e>
    35a8:	0649      	lsls	r1, r1, #25
    35aa:	d5f7      	bpl.n	359c <_printf_i+0x144>
    35ac:	1d11      	adds	r1, r2, #4
    35ae:	6019      	str	r1, [r3, #0]
    35b0:	6813      	ldr	r3, [r2, #0]
    35b2:	8aa2      	ldrh	r2, [r4, #20]
    35b4:	801a      	strh	r2, [r3, #0]
    35b6:	2300      	movs	r3, #0
    35b8:	9e04      	ldr	r6, [sp, #16]
    35ba:	6123      	str	r3, [r4, #16]
    35bc:	e054      	b.n	3668 <_printf_i+0x210>
    35be:	681a      	ldr	r2, [r3, #0]
    35c0:	1d11      	adds	r1, r2, #4
    35c2:	6019      	str	r1, [r3, #0]
    35c4:	6816      	ldr	r6, [r2, #0]
    35c6:	2100      	movs	r1, #0
    35c8:	6862      	ldr	r2, [r4, #4]
    35ca:	0030      	movs	r0, r6
    35cc:	f000 ff3c 	bl	4448 <memchr>
    35d0:	2800      	cmp	r0, #0
    35d2:	d001      	beq.n	35d8 <_printf_i+0x180>
    35d4:	1b80      	subs	r0, r0, r6
    35d6:	6060      	str	r0, [r4, #4]
    35d8:	6863      	ldr	r3, [r4, #4]
    35da:	6123      	str	r3, [r4, #16]
    35dc:	2300      	movs	r3, #0
    35de:	9a04      	ldr	r2, [sp, #16]
    35e0:	7013      	strb	r3, [r2, #0]
    35e2:	e041      	b.n	3668 <_printf_i+0x210>
    35e4:	6923      	ldr	r3, [r4, #16]
    35e6:	0032      	movs	r2, r6
    35e8:	9906      	ldr	r1, [sp, #24]
    35ea:	9805      	ldr	r0, [sp, #20]
    35ec:	9d07      	ldr	r5, [sp, #28]
    35ee:	47a8      	blx	r5
    35f0:	1c43      	adds	r3, r0, #1
    35f2:	d043      	beq.n	367c <_printf_i+0x224>
    35f4:	6823      	ldr	r3, [r4, #0]
    35f6:	2500      	movs	r5, #0
    35f8:	079b      	lsls	r3, r3, #30
    35fa:	d40f      	bmi.n	361c <_printf_i+0x1c4>
    35fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
    35fe:	68e0      	ldr	r0, [r4, #12]
    3600:	4298      	cmp	r0, r3
    3602:	da3d      	bge.n	3680 <_printf_i+0x228>
    3604:	0018      	movs	r0, r3
    3606:	e03b      	b.n	3680 <_printf_i+0x228>
    3608:	0022      	movs	r2, r4
    360a:	2301      	movs	r3, #1
    360c:	3219      	adds	r2, #25
    360e:	9906      	ldr	r1, [sp, #24]
    3610:	9805      	ldr	r0, [sp, #20]
    3612:	9e07      	ldr	r6, [sp, #28]
    3614:	47b0      	blx	r6
    3616:	1c43      	adds	r3, r0, #1
    3618:	d030      	beq.n	367c <_printf_i+0x224>
    361a:	3501      	adds	r5, #1
    361c:	68e3      	ldr	r3, [r4, #12]
    361e:	9a09      	ldr	r2, [sp, #36]	; 0x24
    3620:	1a9b      	subs	r3, r3, r2
    3622:	429d      	cmp	r5, r3
    3624:	dbf0      	blt.n	3608 <_printf_i+0x1b0>
    3626:	e7e9      	b.n	35fc <_printf_i+0x1a4>
    3628:	2d00      	cmp	r5, #0
    362a:	d0a9      	beq.n	3580 <_printf_i+0x128>
    362c:	9e04      	ldr	r6, [sp, #16]
    362e:	0028      	movs	r0, r5
    3630:	0039      	movs	r1, r7
    3632:	f7fe f8b5 	bl	17a0 <__aeabi_uidivmod>
    3636:	9b03      	ldr	r3, [sp, #12]
    3638:	3e01      	subs	r6, #1
    363a:	5c5b      	ldrb	r3, [r3, r1]
    363c:	0028      	movs	r0, r5
    363e:	7033      	strb	r3, [r6, #0]
    3640:	0039      	movs	r1, r7
    3642:	f7fe f827 	bl	1694 <__udivsi3>
    3646:	1e05      	subs	r5, r0, #0
    3648:	d1f1      	bne.n	362e <_printf_i+0x1d6>
    364a:	2f08      	cmp	r7, #8
    364c:	d109      	bne.n	3662 <_printf_i+0x20a>
    364e:	6823      	ldr	r3, [r4, #0]
    3650:	07db      	lsls	r3, r3, #31
    3652:	d506      	bpl.n	3662 <_printf_i+0x20a>
    3654:	6863      	ldr	r3, [r4, #4]
    3656:	6922      	ldr	r2, [r4, #16]
    3658:	4293      	cmp	r3, r2
    365a:	dc02      	bgt.n	3662 <_printf_i+0x20a>
    365c:	2330      	movs	r3, #48	; 0x30
    365e:	3e01      	subs	r6, #1
    3660:	7033      	strb	r3, [r6, #0]
    3662:	9b04      	ldr	r3, [sp, #16]
    3664:	1b9b      	subs	r3, r3, r6
    3666:	6123      	str	r3, [r4, #16]
    3668:	9b07      	ldr	r3, [sp, #28]
    366a:	aa09      	add	r2, sp, #36	; 0x24
    366c:	9300      	str	r3, [sp, #0]
    366e:	0021      	movs	r1, r4
    3670:	9b06      	ldr	r3, [sp, #24]
    3672:	9805      	ldr	r0, [sp, #20]
    3674:	f7ff fe82 	bl	337c <_printf_common>
    3678:	1c43      	adds	r3, r0, #1
    367a:	d1b3      	bne.n	35e4 <_printf_i+0x18c>
    367c:	2001      	movs	r0, #1
    367e:	4240      	negs	r0, r0
    3680:	b00b      	add	sp, #44	; 0x2c
    3682:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3684:	00005b27 	.word	0x00005b27
    3688:	00005b16 	.word	0x00005b16

0000368c <sniprintf>:
    368c:	b40c      	push	{r2, r3}
    368e:	b530      	push	{r4, r5, lr}
    3690:	4b16      	ldr	r3, [pc, #88]	; (36ec <sniprintf+0x60>)
    3692:	b09d      	sub	sp, #116	; 0x74
    3694:	1e0c      	subs	r4, r1, #0
    3696:	681d      	ldr	r5, [r3, #0]
    3698:	da08      	bge.n	36ac <sniprintf+0x20>
    369a:	238b      	movs	r3, #139	; 0x8b
    369c:	2001      	movs	r0, #1
    369e:	602b      	str	r3, [r5, #0]
    36a0:	4240      	negs	r0, r0
    36a2:	b01d      	add	sp, #116	; 0x74
    36a4:	bc30      	pop	{r4, r5}
    36a6:	bc08      	pop	{r3}
    36a8:	b002      	add	sp, #8
    36aa:	4718      	bx	r3
    36ac:	2382      	movs	r3, #130	; 0x82
    36ae:	a902      	add	r1, sp, #8
    36b0:	009b      	lsls	r3, r3, #2
    36b2:	818b      	strh	r3, [r1, #12]
    36b4:	2300      	movs	r3, #0
    36b6:	9002      	str	r0, [sp, #8]
    36b8:	6108      	str	r0, [r1, #16]
    36ba:	429c      	cmp	r4, r3
    36bc:	d000      	beq.n	36c0 <sniprintf+0x34>
    36be:	1e63      	subs	r3, r4, #1
    36c0:	608b      	str	r3, [r1, #8]
    36c2:	614b      	str	r3, [r1, #20]
    36c4:	2301      	movs	r3, #1
    36c6:	425b      	negs	r3, r3
    36c8:	81cb      	strh	r3, [r1, #14]
    36ca:	9a20      	ldr	r2, [sp, #128]	; 0x80
    36cc:	ab21      	add	r3, sp, #132	; 0x84
    36ce:	0028      	movs	r0, r5
    36d0:	9301      	str	r3, [sp, #4]
    36d2:	f001 fac7 	bl	4c64 <_svfiprintf_r>
    36d6:	1c43      	adds	r3, r0, #1
    36d8:	da01      	bge.n	36de <sniprintf+0x52>
    36da:	238b      	movs	r3, #139	; 0x8b
    36dc:	602b      	str	r3, [r5, #0]
    36de:	2c00      	cmp	r4, #0
    36e0:	d0df      	beq.n	36a2 <sniprintf+0x16>
    36e2:	2300      	movs	r3, #0
    36e4:	9a02      	ldr	r2, [sp, #8]
    36e6:	7013      	strb	r3, [r2, #0]
    36e8:	e7db      	b.n	36a2 <sniprintf+0x16>
    36ea:	46c0      	nop			; (mov r8, r8)
    36ec:	20000000 	.word	0x20000000

000036f0 <siprintf>:
    36f0:	b40e      	push	{r1, r2, r3}
    36f2:	b510      	push	{r4, lr}
    36f4:	b09d      	sub	sp, #116	; 0x74
    36f6:	a902      	add	r1, sp, #8
    36f8:	9002      	str	r0, [sp, #8]
    36fa:	6108      	str	r0, [r1, #16]
    36fc:	480b      	ldr	r0, [pc, #44]	; (372c <siprintf+0x3c>)
    36fe:	2482      	movs	r4, #130	; 0x82
    3700:	6088      	str	r0, [r1, #8]
    3702:	6148      	str	r0, [r1, #20]
    3704:	2001      	movs	r0, #1
    3706:	4240      	negs	r0, r0
    3708:	ab1f      	add	r3, sp, #124	; 0x7c
    370a:	81c8      	strh	r0, [r1, #14]
    370c:	4808      	ldr	r0, [pc, #32]	; (3730 <siprintf+0x40>)
    370e:	cb04      	ldmia	r3!, {r2}
    3710:	00a4      	lsls	r4, r4, #2
    3712:	6800      	ldr	r0, [r0, #0]
    3714:	9301      	str	r3, [sp, #4]
    3716:	818c      	strh	r4, [r1, #12]
    3718:	f001 faa4 	bl	4c64 <_svfiprintf_r>
    371c:	2300      	movs	r3, #0
    371e:	9a02      	ldr	r2, [sp, #8]
    3720:	7013      	strb	r3, [r2, #0]
    3722:	b01d      	add	sp, #116	; 0x74
    3724:	bc10      	pop	{r4}
    3726:	bc08      	pop	{r3}
    3728:	b003      	add	sp, #12
    372a:	4718      	bx	r3
    372c:	7fffffff 	.word	0x7fffffff
    3730:	20000000 	.word	0x20000000

00003734 <strlen>:
    3734:	2300      	movs	r3, #0
    3736:	5cc2      	ldrb	r2, [r0, r3]
    3738:	3301      	adds	r3, #1
    373a:	2a00      	cmp	r2, #0
    373c:	d1fb      	bne.n	3736 <strlen+0x2>
    373e:	1e58      	subs	r0, r3, #1
    3740:	4770      	bx	lr

00003742 <quorem>:
    3742:	b5f0      	push	{r4, r5, r6, r7, lr}
    3744:	6903      	ldr	r3, [r0, #16]
    3746:	690c      	ldr	r4, [r1, #16]
    3748:	b089      	sub	sp, #36	; 0x24
    374a:	0007      	movs	r7, r0
    374c:	9105      	str	r1, [sp, #20]
    374e:	2600      	movs	r6, #0
    3750:	429c      	cmp	r4, r3
    3752:	dc6d      	bgt.n	3830 <quorem+0xee>
    3754:	000b      	movs	r3, r1
    3756:	3c01      	subs	r4, #1
    3758:	3314      	adds	r3, #20
    375a:	00a5      	lsls	r5, r4, #2
    375c:	9303      	str	r3, [sp, #12]
    375e:	195b      	adds	r3, r3, r5
    3760:	9304      	str	r3, [sp, #16]
    3762:	0003      	movs	r3, r0
    3764:	3314      	adds	r3, #20
    3766:	9302      	str	r3, [sp, #8]
    3768:	195d      	adds	r5, r3, r5
    376a:	9b04      	ldr	r3, [sp, #16]
    376c:	6828      	ldr	r0, [r5, #0]
    376e:	681b      	ldr	r3, [r3, #0]
    3770:	1c59      	adds	r1, r3, #1
    3772:	9301      	str	r3, [sp, #4]
    3774:	f7fd ff8e 	bl	1694 <__udivsi3>
    3778:	9001      	str	r0, [sp, #4]
    377a:	42b0      	cmp	r0, r6
    377c:	d02d      	beq.n	37da <quorem+0x98>
    377e:	9b03      	ldr	r3, [sp, #12]
    3780:	9802      	ldr	r0, [sp, #8]
    3782:	469c      	mov	ip, r3
    3784:	9606      	str	r6, [sp, #24]
    3786:	4662      	mov	r2, ip
    3788:	ca08      	ldmia	r2!, {r3}
    378a:	4694      	mov	ip, r2
    378c:	9a01      	ldr	r2, [sp, #4]
    378e:	b299      	uxth	r1, r3
    3790:	4351      	muls	r1, r2
    3792:	0c1b      	lsrs	r3, r3, #16
    3794:	4353      	muls	r3, r2
    3796:	1989      	adds	r1, r1, r6
    3798:	0c0a      	lsrs	r2, r1, #16
    379a:	189b      	adds	r3, r3, r2
    379c:	9307      	str	r3, [sp, #28]
    379e:	8802      	ldrh	r2, [r0, #0]
    37a0:	0c1e      	lsrs	r6, r3, #16
    37a2:	9b06      	ldr	r3, [sp, #24]
    37a4:	b289      	uxth	r1, r1
    37a6:	18d2      	adds	r2, r2, r3
    37a8:	6803      	ldr	r3, [r0, #0]
    37aa:	1a52      	subs	r2, r2, r1
    37ac:	0c19      	lsrs	r1, r3, #16
    37ae:	466b      	mov	r3, sp
    37b0:	8b9b      	ldrh	r3, [r3, #28]
    37b2:	1acb      	subs	r3, r1, r3
    37b4:	1411      	asrs	r1, r2, #16
    37b6:	185b      	adds	r3, r3, r1
    37b8:	1419      	asrs	r1, r3, #16
    37ba:	b292      	uxth	r2, r2
    37bc:	041b      	lsls	r3, r3, #16
    37be:	431a      	orrs	r2, r3
    37c0:	9b04      	ldr	r3, [sp, #16]
    37c2:	9106      	str	r1, [sp, #24]
    37c4:	c004      	stmia	r0!, {r2}
    37c6:	4563      	cmp	r3, ip
    37c8:	d2dd      	bcs.n	3786 <quorem+0x44>
    37ca:	682b      	ldr	r3, [r5, #0]
    37cc:	2b00      	cmp	r3, #0
    37ce:	d104      	bne.n	37da <quorem+0x98>
    37d0:	9b02      	ldr	r3, [sp, #8]
    37d2:	3d04      	subs	r5, #4
    37d4:	42ab      	cmp	r3, r5
    37d6:	d32e      	bcc.n	3836 <quorem+0xf4>
    37d8:	613c      	str	r4, [r7, #16]
    37da:	9905      	ldr	r1, [sp, #20]
    37dc:	0038      	movs	r0, r7
    37de:	f001 f858 	bl	4892 <__mcmp>
    37e2:	2800      	cmp	r0, #0
    37e4:	db23      	blt.n	382e <quorem+0xec>
    37e6:	2500      	movs	r5, #0
    37e8:	9b01      	ldr	r3, [sp, #4]
    37ea:	9802      	ldr	r0, [sp, #8]
    37ec:	3301      	adds	r3, #1
    37ee:	9903      	ldr	r1, [sp, #12]
    37f0:	9301      	str	r3, [sp, #4]
    37f2:	c908      	ldmia	r1!, {r3}
    37f4:	8802      	ldrh	r2, [r0, #0]
    37f6:	1955      	adds	r5, r2, r5
    37f8:	b29a      	uxth	r2, r3
    37fa:	1aaa      	subs	r2, r5, r2
    37fc:	6805      	ldr	r5, [r0, #0]
    37fe:	0c1b      	lsrs	r3, r3, #16
    3800:	0c2d      	lsrs	r5, r5, #16
    3802:	1aeb      	subs	r3, r5, r3
    3804:	1415      	asrs	r5, r2, #16
    3806:	195b      	adds	r3, r3, r5
    3808:	141d      	asrs	r5, r3, #16
    380a:	b292      	uxth	r2, r2
    380c:	041b      	lsls	r3, r3, #16
    380e:	4313      	orrs	r3, r2
    3810:	c008      	stmia	r0!, {r3}
    3812:	9b04      	ldr	r3, [sp, #16]
    3814:	428b      	cmp	r3, r1
    3816:	d2ec      	bcs.n	37f2 <quorem+0xb0>
    3818:	9a02      	ldr	r2, [sp, #8]
    381a:	00a3      	lsls	r3, r4, #2
    381c:	18d3      	adds	r3, r2, r3
    381e:	681a      	ldr	r2, [r3, #0]
    3820:	2a00      	cmp	r2, #0
    3822:	d104      	bne.n	382e <quorem+0xec>
    3824:	9a02      	ldr	r2, [sp, #8]
    3826:	3b04      	subs	r3, #4
    3828:	429a      	cmp	r2, r3
    382a:	d309      	bcc.n	3840 <quorem+0xfe>
    382c:	613c      	str	r4, [r7, #16]
    382e:	9e01      	ldr	r6, [sp, #4]
    3830:	0030      	movs	r0, r6
    3832:	b009      	add	sp, #36	; 0x24
    3834:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3836:	682b      	ldr	r3, [r5, #0]
    3838:	2b00      	cmp	r3, #0
    383a:	d1cd      	bne.n	37d8 <quorem+0x96>
    383c:	3c01      	subs	r4, #1
    383e:	e7c7      	b.n	37d0 <quorem+0x8e>
    3840:	681a      	ldr	r2, [r3, #0]
    3842:	2a00      	cmp	r2, #0
    3844:	d1f2      	bne.n	382c <quorem+0xea>
    3846:	3c01      	subs	r4, #1
    3848:	e7ec      	b.n	3824 <quorem+0xe2>
	...

0000384c <_dtoa_r>:
    384c:	b5f0      	push	{r4, r5, r6, r7, lr}
    384e:	0016      	movs	r6, r2
    3850:	001f      	movs	r7, r3
    3852:	6a44      	ldr	r4, [r0, #36]	; 0x24
    3854:	b09d      	sub	sp, #116	; 0x74
    3856:	9004      	str	r0, [sp, #16]
    3858:	9d25      	ldr	r5, [sp, #148]	; 0x94
    385a:	9606      	str	r6, [sp, #24]
    385c:	9707      	str	r7, [sp, #28]
    385e:	2c00      	cmp	r4, #0
    3860:	d108      	bne.n	3874 <_dtoa_r+0x28>
    3862:	2010      	movs	r0, #16
    3864:	f000 fde6 	bl	4434 <malloc>
    3868:	9b04      	ldr	r3, [sp, #16]
    386a:	6258      	str	r0, [r3, #36]	; 0x24
    386c:	6044      	str	r4, [r0, #4]
    386e:	6084      	str	r4, [r0, #8]
    3870:	6004      	str	r4, [r0, #0]
    3872:	60c4      	str	r4, [r0, #12]
    3874:	9b04      	ldr	r3, [sp, #16]
    3876:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3878:	6819      	ldr	r1, [r3, #0]
    387a:	2900      	cmp	r1, #0
    387c:	d00b      	beq.n	3896 <_dtoa_r+0x4a>
    387e:	685a      	ldr	r2, [r3, #4]
    3880:	2301      	movs	r3, #1
    3882:	4093      	lsls	r3, r2
    3884:	604a      	str	r2, [r1, #4]
    3886:	608b      	str	r3, [r1, #8]
    3888:	9804      	ldr	r0, [sp, #16]
    388a:	f000 fe29 	bl	44e0 <_Bfree>
    388e:	2200      	movs	r2, #0
    3890:	9b04      	ldr	r3, [sp, #16]
    3892:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3894:	601a      	str	r2, [r3, #0]
    3896:	9b07      	ldr	r3, [sp, #28]
    3898:	2b00      	cmp	r3, #0
    389a:	da1f      	bge.n	38dc <_dtoa_r+0x90>
    389c:	2301      	movs	r3, #1
    389e:	602b      	str	r3, [r5, #0]
    38a0:	007b      	lsls	r3, r7, #1
    38a2:	085b      	lsrs	r3, r3, #1
    38a4:	9307      	str	r3, [sp, #28]
    38a6:	9c07      	ldr	r4, [sp, #28]
    38a8:	4bb7      	ldr	r3, [pc, #732]	; (3b88 <_dtoa_r+0x33c>)
    38aa:	0022      	movs	r2, r4
    38ac:	9319      	str	r3, [sp, #100]	; 0x64
    38ae:	401a      	ands	r2, r3
    38b0:	429a      	cmp	r2, r3
    38b2:	d116      	bne.n	38e2 <_dtoa_r+0x96>
    38b4:	4bb5      	ldr	r3, [pc, #724]	; (3b8c <_dtoa_r+0x340>)
    38b6:	9a24      	ldr	r2, [sp, #144]	; 0x90
    38b8:	6013      	str	r3, [r2, #0]
    38ba:	9b06      	ldr	r3, [sp, #24]
    38bc:	2b00      	cmp	r3, #0
    38be:	d103      	bne.n	38c8 <_dtoa_r+0x7c>
    38c0:	0324      	lsls	r4, r4, #12
    38c2:	d101      	bne.n	38c8 <_dtoa_r+0x7c>
    38c4:	f000 fd91 	bl	43ea <_dtoa_r+0xb9e>
    38c8:	4bb1      	ldr	r3, [pc, #708]	; (3b90 <_dtoa_r+0x344>)
    38ca:	9a26      	ldr	r2, [sp, #152]	; 0x98
    38cc:	930a      	str	r3, [sp, #40]	; 0x28
    38ce:	4bb1      	ldr	r3, [pc, #708]	; (3b94 <_dtoa_r+0x348>)
    38d0:	2a00      	cmp	r2, #0
    38d2:	d001      	beq.n	38d8 <_dtoa_r+0x8c>
    38d4:	f000 fd8f 	bl	43f6 <_dtoa_r+0xbaa>
    38d8:	f000 fd8f 	bl	43fa <_dtoa_r+0xbae>
    38dc:	2300      	movs	r3, #0
    38de:	602b      	str	r3, [r5, #0]
    38e0:	e7e1      	b.n	38a6 <_dtoa_r+0x5a>
    38e2:	9e06      	ldr	r6, [sp, #24]
    38e4:	9f07      	ldr	r7, [sp, #28]
    38e6:	2200      	movs	r2, #0
    38e8:	2300      	movs	r3, #0
    38ea:	0030      	movs	r0, r6
    38ec:	0039      	movs	r1, r7
    38ee:	f7ff f8e5 	bl	2abc <__aeabi_dcmpeq>
    38f2:	1e05      	subs	r5, r0, #0
    38f4:	d00e      	beq.n	3914 <_dtoa_r+0xc8>
    38f6:	2301      	movs	r3, #1
    38f8:	9a24      	ldr	r2, [sp, #144]	; 0x90
    38fa:	6013      	str	r3, [r2, #0]
    38fc:	4ba6      	ldr	r3, [pc, #664]	; (3b98 <_dtoa_r+0x34c>)
    38fe:	9a26      	ldr	r2, [sp, #152]	; 0x98
    3900:	930a      	str	r3, [sp, #40]	; 0x28
    3902:	2a00      	cmp	r2, #0
    3904:	d101      	bne.n	390a <_dtoa_r+0xbe>
    3906:	f000 fd78 	bl	43fa <_dtoa_r+0xbae>
    390a:	4aa4      	ldr	r2, [pc, #656]	; (3b9c <_dtoa_r+0x350>)
    390c:	9926      	ldr	r1, [sp, #152]	; 0x98
    390e:	600a      	str	r2, [r1, #0]
    3910:	f000 fd73 	bl	43fa <_dtoa_r+0xbae>
    3914:	ab1a      	add	r3, sp, #104	; 0x68
    3916:	9301      	str	r3, [sp, #4]
    3918:	ab1b      	add	r3, sp, #108	; 0x6c
    391a:	9300      	str	r3, [sp, #0]
    391c:	0032      	movs	r2, r6
    391e:	003b      	movs	r3, r7
    3920:	9804      	ldr	r0, [sp, #16]
    3922:	f001 f833 	bl	498c <__d2b>
    3926:	0063      	lsls	r3, r4, #1
    3928:	9005      	str	r0, [sp, #20]
    392a:	0d5b      	lsrs	r3, r3, #21
    392c:	d100      	bne.n	3930 <_dtoa_r+0xe4>
    392e:	e07f      	b.n	3a30 <_dtoa_r+0x1e4>
    3930:	033a      	lsls	r2, r7, #12
    3932:	4c9b      	ldr	r4, [pc, #620]	; (3ba0 <_dtoa_r+0x354>)
    3934:	0b12      	lsrs	r2, r2, #12
    3936:	4314      	orrs	r4, r2
    3938:	0021      	movs	r1, r4
    393a:	4a9a      	ldr	r2, [pc, #616]	; (3ba4 <_dtoa_r+0x358>)
    393c:	0030      	movs	r0, r6
    393e:	9518      	str	r5, [sp, #96]	; 0x60
    3940:	189e      	adds	r6, r3, r2
    3942:	2200      	movs	r2, #0
    3944:	4b98      	ldr	r3, [pc, #608]	; (3ba8 <_dtoa_r+0x35c>)
    3946:	f7fe fce5 	bl	2314 <__aeabi_dsub>
    394a:	4a98      	ldr	r2, [pc, #608]	; (3bac <_dtoa_r+0x360>)
    394c:	4b98      	ldr	r3, [pc, #608]	; (3bb0 <_dtoa_r+0x364>)
    394e:	f7fe fa61 	bl	1e14 <__aeabi_dmul>
    3952:	4a98      	ldr	r2, [pc, #608]	; (3bb4 <_dtoa_r+0x368>)
    3954:	4b98      	ldr	r3, [pc, #608]	; (3bb8 <_dtoa_r+0x36c>)
    3956:	f001 fbef 	bl	5138 <__aeabi_dadd>
    395a:	0004      	movs	r4, r0
    395c:	0030      	movs	r0, r6
    395e:	000d      	movs	r5, r1
    3960:	f7ff f822 	bl	29a8 <__aeabi_i2d>
    3964:	4a95      	ldr	r2, [pc, #596]	; (3bbc <_dtoa_r+0x370>)
    3966:	4b96      	ldr	r3, [pc, #600]	; (3bc0 <_dtoa_r+0x374>)
    3968:	f7fe fa54 	bl	1e14 <__aeabi_dmul>
    396c:	0002      	movs	r2, r0
    396e:	000b      	movs	r3, r1
    3970:	0020      	movs	r0, r4
    3972:	0029      	movs	r1, r5
    3974:	f001 fbe0 	bl	5138 <__aeabi_dadd>
    3978:	0004      	movs	r4, r0
    397a:	000d      	movs	r5, r1
    397c:	f7fe ffe0 	bl	2940 <__aeabi_d2iz>
    3980:	2200      	movs	r2, #0
    3982:	9003      	str	r0, [sp, #12]
    3984:	2300      	movs	r3, #0
    3986:	0020      	movs	r0, r4
    3988:	0029      	movs	r1, r5
    398a:	f7ff f89d 	bl	2ac8 <__aeabi_dcmplt>
    398e:	2800      	cmp	r0, #0
    3990:	d00e      	beq.n	39b0 <_dtoa_r+0x164>
    3992:	9803      	ldr	r0, [sp, #12]
    3994:	f7ff f808 	bl	29a8 <__aeabi_i2d>
    3998:	000b      	movs	r3, r1
    399a:	0002      	movs	r2, r0
    399c:	0029      	movs	r1, r5
    399e:	0020      	movs	r0, r4
    39a0:	f7ff f88c 	bl	2abc <__aeabi_dcmpeq>
    39a4:	0003      	movs	r3, r0
    39a6:	4258      	negs	r0, r3
    39a8:	4158      	adcs	r0, r3
    39aa:	9b03      	ldr	r3, [sp, #12]
    39ac:	1a1b      	subs	r3, r3, r0
    39ae:	9303      	str	r3, [sp, #12]
    39b0:	2301      	movs	r3, #1
    39b2:	9316      	str	r3, [sp, #88]	; 0x58
    39b4:	9b03      	ldr	r3, [sp, #12]
    39b6:	2b16      	cmp	r3, #22
    39b8:	d80f      	bhi.n	39da <_dtoa_r+0x18e>
    39ba:	4982      	ldr	r1, [pc, #520]	; (3bc4 <_dtoa_r+0x378>)
    39bc:	00db      	lsls	r3, r3, #3
    39be:	18c9      	adds	r1, r1, r3
    39c0:	6808      	ldr	r0, [r1, #0]
    39c2:	6849      	ldr	r1, [r1, #4]
    39c4:	9a06      	ldr	r2, [sp, #24]
    39c6:	9b07      	ldr	r3, [sp, #28]
    39c8:	f7ff f892 	bl	2af0 <__aeabi_dcmpgt>
    39cc:	2800      	cmp	r0, #0
    39ce:	d04b      	beq.n	3a68 <_dtoa_r+0x21c>
    39d0:	9b03      	ldr	r3, [sp, #12]
    39d2:	3b01      	subs	r3, #1
    39d4:	9303      	str	r3, [sp, #12]
    39d6:	2300      	movs	r3, #0
    39d8:	9316      	str	r3, [sp, #88]	; 0x58
    39da:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    39dc:	1b9e      	subs	r6, r3, r6
    39de:	2300      	movs	r3, #0
    39e0:	930b      	str	r3, [sp, #44]	; 0x2c
    39e2:	0033      	movs	r3, r6
    39e4:	3b01      	subs	r3, #1
    39e6:	930c      	str	r3, [sp, #48]	; 0x30
    39e8:	d504      	bpl.n	39f4 <_dtoa_r+0x1a8>
    39ea:	2301      	movs	r3, #1
    39ec:	1b9b      	subs	r3, r3, r6
    39ee:	930b      	str	r3, [sp, #44]	; 0x2c
    39f0:	2300      	movs	r3, #0
    39f2:	930c      	str	r3, [sp, #48]	; 0x30
    39f4:	9b03      	ldr	r3, [sp, #12]
    39f6:	2b00      	cmp	r3, #0
    39f8:	db38      	blt.n	3a6c <_dtoa_r+0x220>
    39fa:	9a03      	ldr	r2, [sp, #12]
    39fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    39fe:	4694      	mov	ip, r2
    3a00:	4463      	add	r3, ip
    3a02:	930c      	str	r3, [sp, #48]	; 0x30
    3a04:	2300      	movs	r3, #0
    3a06:	920f      	str	r2, [sp, #60]	; 0x3c
    3a08:	9308      	str	r3, [sp, #32]
    3a0a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    3a0c:	2501      	movs	r5, #1
    3a0e:	2b09      	cmp	r3, #9
    3a10:	d900      	bls.n	3a14 <_dtoa_r+0x1c8>
    3a12:	e091      	b.n	3b38 <_dtoa_r+0x2ec>
    3a14:	2b05      	cmp	r3, #5
    3a16:	dd02      	ble.n	3a1e <_dtoa_r+0x1d2>
    3a18:	2500      	movs	r5, #0
    3a1a:	3b04      	subs	r3, #4
    3a1c:	9322      	str	r3, [sp, #136]	; 0x88
    3a1e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    3a20:	1e98      	subs	r0, r3, #2
    3a22:	2803      	cmp	r0, #3
    3a24:	d900      	bls.n	3a28 <_dtoa_r+0x1dc>
    3a26:	e091      	b.n	3b4c <_dtoa_r+0x300>
    3a28:	f001 fa92 	bl	4f50 <__gnu_thumb1_case_uqi>
    3a2c:	76298482 	.word	0x76298482
    3a30:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    3a32:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    3a34:	189e      	adds	r6, r3, r2
    3a36:	4b64      	ldr	r3, [pc, #400]	; (3bc8 <_dtoa_r+0x37c>)
    3a38:	18f2      	adds	r2, r6, r3
    3a3a:	2a20      	cmp	r2, #32
    3a3c:	dd0f      	ble.n	3a5e <_dtoa_r+0x212>
    3a3e:	4b63      	ldr	r3, [pc, #396]	; (3bcc <_dtoa_r+0x380>)
    3a40:	9806      	ldr	r0, [sp, #24]
    3a42:	18f3      	adds	r3, r6, r3
    3a44:	40d8      	lsrs	r0, r3
    3a46:	2340      	movs	r3, #64	; 0x40
    3a48:	1a9b      	subs	r3, r3, r2
    3a4a:	409c      	lsls	r4, r3
    3a4c:	4320      	orrs	r0, r4
    3a4e:	f7fe ffed 	bl	2a2c <__aeabi_ui2d>
    3a52:	2301      	movs	r3, #1
    3a54:	4c5e      	ldr	r4, [pc, #376]	; (3bd0 <_dtoa_r+0x384>)
    3a56:	3e01      	subs	r6, #1
    3a58:	1909      	adds	r1, r1, r4
    3a5a:	9318      	str	r3, [sp, #96]	; 0x60
    3a5c:	e771      	b.n	3942 <_dtoa_r+0xf6>
    3a5e:	2320      	movs	r3, #32
    3a60:	9806      	ldr	r0, [sp, #24]
    3a62:	1a9b      	subs	r3, r3, r2
    3a64:	4098      	lsls	r0, r3
    3a66:	e7f2      	b.n	3a4e <_dtoa_r+0x202>
    3a68:	9016      	str	r0, [sp, #88]	; 0x58
    3a6a:	e7b6      	b.n	39da <_dtoa_r+0x18e>
    3a6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3a6e:	9a03      	ldr	r2, [sp, #12]
    3a70:	1a9b      	subs	r3, r3, r2
    3a72:	930b      	str	r3, [sp, #44]	; 0x2c
    3a74:	4253      	negs	r3, r2
    3a76:	9308      	str	r3, [sp, #32]
    3a78:	2300      	movs	r3, #0
    3a7a:	930f      	str	r3, [sp, #60]	; 0x3c
    3a7c:	e7c5      	b.n	3a0a <_dtoa_r+0x1be>
    3a7e:	2301      	movs	r3, #1
    3a80:	930e      	str	r3, [sp, #56]	; 0x38
    3a82:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    3a84:	2b00      	cmp	r3, #0
    3a86:	dd65      	ble.n	3b54 <_dtoa_r+0x308>
    3a88:	001f      	movs	r7, r3
    3a8a:	930d      	str	r3, [sp, #52]	; 0x34
    3a8c:	9a04      	ldr	r2, [sp, #16]
    3a8e:	6a54      	ldr	r4, [r2, #36]	; 0x24
    3a90:	2200      	movs	r2, #0
    3a92:	6062      	str	r2, [r4, #4]
    3a94:	3204      	adds	r2, #4
    3a96:	0011      	movs	r1, r2
    3a98:	3114      	adds	r1, #20
    3a9a:	4299      	cmp	r1, r3
    3a9c:	d95f      	bls.n	3b5e <_dtoa_r+0x312>
    3a9e:	6861      	ldr	r1, [r4, #4]
    3aa0:	9804      	ldr	r0, [sp, #16]
    3aa2:	f000 fce5 	bl	4470 <_Balloc>
    3aa6:	9b04      	ldr	r3, [sp, #16]
    3aa8:	6020      	str	r0, [r4, #0]
    3aaa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3aac:	681b      	ldr	r3, [r3, #0]
    3aae:	930a      	str	r3, [sp, #40]	; 0x28
    3ab0:	2f0e      	cmp	r7, #14
    3ab2:	d900      	bls.n	3ab6 <_dtoa_r+0x26a>
    3ab4:	e105      	b.n	3cc2 <_dtoa_r+0x476>
    3ab6:	2d00      	cmp	r5, #0
    3ab8:	d100      	bne.n	3abc <_dtoa_r+0x270>
    3aba:	e102      	b.n	3cc2 <_dtoa_r+0x476>
    3abc:	9b06      	ldr	r3, [sp, #24]
    3abe:	9c07      	ldr	r4, [sp, #28]
    3ac0:	9314      	str	r3, [sp, #80]	; 0x50
    3ac2:	9415      	str	r4, [sp, #84]	; 0x54
    3ac4:	9b03      	ldr	r3, [sp, #12]
    3ac6:	2b00      	cmp	r3, #0
    3ac8:	dc00      	bgt.n	3acc <_dtoa_r+0x280>
    3aca:	e085      	b.n	3bd8 <_dtoa_r+0x38c>
    3acc:	001a      	movs	r2, r3
    3ace:	210f      	movs	r1, #15
    3ad0:	4b3c      	ldr	r3, [pc, #240]	; (3bc4 <_dtoa_r+0x378>)
    3ad2:	400a      	ands	r2, r1
    3ad4:	00d2      	lsls	r2, r2, #3
    3ad6:	189b      	adds	r3, r3, r2
    3ad8:	685c      	ldr	r4, [r3, #4]
    3ada:	681b      	ldr	r3, [r3, #0]
    3adc:	9310      	str	r3, [sp, #64]	; 0x40
    3ade:	9411      	str	r4, [sp, #68]	; 0x44
    3ae0:	9b03      	ldr	r3, [sp, #12]
    3ae2:	2402      	movs	r4, #2
    3ae4:	111d      	asrs	r5, r3, #4
    3ae6:	06eb      	lsls	r3, r5, #27
    3ae8:	d50a      	bpl.n	3b00 <_dtoa_r+0x2b4>
    3aea:	4b3a      	ldr	r3, [pc, #232]	; (3bd4 <_dtoa_r+0x388>)
    3aec:	400d      	ands	r5, r1
    3aee:	6a1a      	ldr	r2, [r3, #32]
    3af0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3af2:	9814      	ldr	r0, [sp, #80]	; 0x50
    3af4:	9915      	ldr	r1, [sp, #84]	; 0x54
    3af6:	f7fd fe59 	bl	17ac <__aeabi_ddiv>
    3afa:	9006      	str	r0, [sp, #24]
    3afc:	9107      	str	r1, [sp, #28]
    3afe:	3401      	adds	r4, #1
    3b00:	4e34      	ldr	r6, [pc, #208]	; (3bd4 <_dtoa_r+0x388>)
    3b02:	2d00      	cmp	r5, #0
    3b04:	d130      	bne.n	3b68 <_dtoa_r+0x31c>
    3b06:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3b08:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3b0a:	9806      	ldr	r0, [sp, #24]
    3b0c:	9907      	ldr	r1, [sp, #28]
    3b0e:	f7fd fe4d 	bl	17ac <__aeabi_ddiv>
    3b12:	9006      	str	r0, [sp, #24]
    3b14:	9107      	str	r1, [sp, #28]
    3b16:	e07a      	b.n	3c0e <_dtoa_r+0x3c2>
    3b18:	2301      	movs	r3, #1
    3b1a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    3b1c:	930e      	str	r3, [sp, #56]	; 0x38
    3b1e:	4694      	mov	ip, r2
    3b20:	9b03      	ldr	r3, [sp, #12]
    3b22:	4463      	add	r3, ip
    3b24:	1c5f      	adds	r7, r3, #1
    3b26:	930d      	str	r3, [sp, #52]	; 0x34
    3b28:	1e3b      	subs	r3, r7, #0
    3b2a:	dcaf      	bgt.n	3a8c <_dtoa_r+0x240>
    3b2c:	2301      	movs	r3, #1
    3b2e:	e7ad      	b.n	3a8c <_dtoa_r+0x240>
    3b30:	2300      	movs	r3, #0
    3b32:	e7a5      	b.n	3a80 <_dtoa_r+0x234>
    3b34:	2300      	movs	r3, #0
    3b36:	e7f0      	b.n	3b1a <_dtoa_r+0x2ce>
    3b38:	2300      	movs	r3, #0
    3b3a:	950e      	str	r5, [sp, #56]	; 0x38
    3b3c:	9322      	str	r3, [sp, #136]	; 0x88
    3b3e:	3b01      	subs	r3, #1
    3b40:	2200      	movs	r2, #0
    3b42:	930d      	str	r3, [sp, #52]	; 0x34
    3b44:	001f      	movs	r7, r3
    3b46:	3313      	adds	r3, #19
    3b48:	9223      	str	r2, [sp, #140]	; 0x8c
    3b4a:	e79f      	b.n	3a8c <_dtoa_r+0x240>
    3b4c:	2301      	movs	r3, #1
    3b4e:	930e      	str	r3, [sp, #56]	; 0x38
    3b50:	3b02      	subs	r3, #2
    3b52:	e7f5      	b.n	3b40 <_dtoa_r+0x2f4>
    3b54:	2301      	movs	r3, #1
    3b56:	930d      	str	r3, [sp, #52]	; 0x34
    3b58:	001f      	movs	r7, r3
    3b5a:	001a      	movs	r2, r3
    3b5c:	e7f4      	b.n	3b48 <_dtoa_r+0x2fc>
    3b5e:	6861      	ldr	r1, [r4, #4]
    3b60:	0052      	lsls	r2, r2, #1
    3b62:	3101      	adds	r1, #1
    3b64:	6061      	str	r1, [r4, #4]
    3b66:	e796      	b.n	3a96 <_dtoa_r+0x24a>
    3b68:	2301      	movs	r3, #1
    3b6a:	421d      	tst	r5, r3
    3b6c:	d008      	beq.n	3b80 <_dtoa_r+0x334>
    3b6e:	9810      	ldr	r0, [sp, #64]	; 0x40
    3b70:	9911      	ldr	r1, [sp, #68]	; 0x44
    3b72:	18e4      	adds	r4, r4, r3
    3b74:	6832      	ldr	r2, [r6, #0]
    3b76:	6873      	ldr	r3, [r6, #4]
    3b78:	f7fe f94c 	bl	1e14 <__aeabi_dmul>
    3b7c:	9010      	str	r0, [sp, #64]	; 0x40
    3b7e:	9111      	str	r1, [sp, #68]	; 0x44
    3b80:	106d      	asrs	r5, r5, #1
    3b82:	3608      	adds	r6, #8
    3b84:	e7bd      	b.n	3b02 <_dtoa_r+0x2b6>
    3b86:	46c0      	nop			; (mov r8, r8)
    3b88:	7ff00000 	.word	0x7ff00000
    3b8c:	0000270f 	.word	0x0000270f
    3b90:	00005b41 	.word	0x00005b41
    3b94:	00005b44 	.word	0x00005b44
    3b98:	00005b14 	.word	0x00005b14
    3b9c:	00005b15 	.word	0x00005b15
    3ba0:	3ff00000 	.word	0x3ff00000
    3ba4:	fffffc01 	.word	0xfffffc01
    3ba8:	3ff80000 	.word	0x3ff80000
    3bac:	636f4361 	.word	0x636f4361
    3bb0:	3fd287a7 	.word	0x3fd287a7
    3bb4:	8b60c8b3 	.word	0x8b60c8b3
    3bb8:	3fc68a28 	.word	0x3fc68a28
    3bbc:	509f79fb 	.word	0x509f79fb
    3bc0:	3fd34413 	.word	0x3fd34413
    3bc4:	00005bd0 	.word	0x00005bd0
    3bc8:	00000432 	.word	0x00000432
    3bcc:	00000412 	.word	0x00000412
    3bd0:	fe100000 	.word	0xfe100000
    3bd4:	00005ba8 	.word	0x00005ba8
    3bd8:	9b03      	ldr	r3, [sp, #12]
    3bda:	2402      	movs	r4, #2
    3bdc:	2b00      	cmp	r3, #0
    3bde:	d016      	beq.n	3c0e <_dtoa_r+0x3c2>
    3be0:	9814      	ldr	r0, [sp, #80]	; 0x50
    3be2:	9915      	ldr	r1, [sp, #84]	; 0x54
    3be4:	425d      	negs	r5, r3
    3be6:	230f      	movs	r3, #15
    3be8:	4aca      	ldr	r2, [pc, #808]	; (3f14 <_dtoa_r+0x6c8>)
    3bea:	402b      	ands	r3, r5
    3bec:	00db      	lsls	r3, r3, #3
    3bee:	18d3      	adds	r3, r2, r3
    3bf0:	681a      	ldr	r2, [r3, #0]
    3bf2:	685b      	ldr	r3, [r3, #4]
    3bf4:	f7fe f90e 	bl	1e14 <__aeabi_dmul>
    3bf8:	2300      	movs	r3, #0
    3bfa:	9006      	str	r0, [sp, #24]
    3bfc:	9107      	str	r1, [sp, #28]
    3bfe:	4ec6      	ldr	r6, [pc, #792]	; (3f18 <_dtoa_r+0x6cc>)
    3c00:	112d      	asrs	r5, r5, #4
    3c02:	2d00      	cmp	r5, #0
    3c04:	d000      	beq.n	3c08 <_dtoa_r+0x3bc>
    3c06:	e08c      	b.n	3d22 <_dtoa_r+0x4d6>
    3c08:	2b00      	cmp	r3, #0
    3c0a:	d000      	beq.n	3c0e <_dtoa_r+0x3c2>
    3c0c:	e781      	b.n	3b12 <_dtoa_r+0x2c6>
    3c0e:	9b16      	ldr	r3, [sp, #88]	; 0x58
    3c10:	2b00      	cmp	r3, #0
    3c12:	d100      	bne.n	3c16 <_dtoa_r+0x3ca>
    3c14:	e091      	b.n	3d3a <_dtoa_r+0x4ee>
    3c16:	9a06      	ldr	r2, [sp, #24]
    3c18:	9b07      	ldr	r3, [sp, #28]
    3c1a:	9210      	str	r2, [sp, #64]	; 0x40
    3c1c:	9311      	str	r3, [sp, #68]	; 0x44
    3c1e:	9810      	ldr	r0, [sp, #64]	; 0x40
    3c20:	9911      	ldr	r1, [sp, #68]	; 0x44
    3c22:	2200      	movs	r2, #0
    3c24:	4bbd      	ldr	r3, [pc, #756]	; (3f1c <_dtoa_r+0x6d0>)
    3c26:	f7fe ff4f 	bl	2ac8 <__aeabi_dcmplt>
    3c2a:	2800      	cmp	r0, #0
    3c2c:	d100      	bne.n	3c30 <_dtoa_r+0x3e4>
    3c2e:	e084      	b.n	3d3a <_dtoa_r+0x4ee>
    3c30:	2f00      	cmp	r7, #0
    3c32:	d100      	bne.n	3c36 <_dtoa_r+0x3ea>
    3c34:	e081      	b.n	3d3a <_dtoa_r+0x4ee>
    3c36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    3c38:	2b00      	cmp	r3, #0
    3c3a:	dd3e      	ble.n	3cba <_dtoa_r+0x46e>
    3c3c:	9810      	ldr	r0, [sp, #64]	; 0x40
    3c3e:	9911      	ldr	r1, [sp, #68]	; 0x44
    3c40:	9b03      	ldr	r3, [sp, #12]
    3c42:	2200      	movs	r2, #0
    3c44:	1e5e      	subs	r6, r3, #1
    3c46:	4bb6      	ldr	r3, [pc, #728]	; (3f20 <_dtoa_r+0x6d4>)
    3c48:	f7fe f8e4 	bl	1e14 <__aeabi_dmul>
    3c4c:	9006      	str	r0, [sp, #24]
    3c4e:	9107      	str	r1, [sp, #28]
    3c50:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    3c52:	3401      	adds	r4, #1
    3c54:	0020      	movs	r0, r4
    3c56:	f7fe fea7 	bl	29a8 <__aeabi_i2d>
    3c5a:	9a06      	ldr	r2, [sp, #24]
    3c5c:	9b07      	ldr	r3, [sp, #28]
    3c5e:	f7fe f8d9 	bl	1e14 <__aeabi_dmul>
    3c62:	2200      	movs	r2, #0
    3c64:	4baf      	ldr	r3, [pc, #700]	; (3f24 <_dtoa_r+0x6d8>)
    3c66:	f001 fa67 	bl	5138 <__aeabi_dadd>
    3c6a:	9012      	str	r0, [sp, #72]	; 0x48
    3c6c:	9113      	str	r1, [sp, #76]	; 0x4c
    3c6e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3c70:	9c13      	ldr	r4, [sp, #76]	; 0x4c
    3c72:	4aad      	ldr	r2, [pc, #692]	; (3f28 <_dtoa_r+0x6dc>)
    3c74:	9310      	str	r3, [sp, #64]	; 0x40
    3c76:	9411      	str	r4, [sp, #68]	; 0x44
    3c78:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    3c7a:	189c      	adds	r4, r3, r2
    3c7c:	9411      	str	r4, [sp, #68]	; 0x44
    3c7e:	2d00      	cmp	r5, #0
    3c80:	d15e      	bne.n	3d40 <_dtoa_r+0x4f4>
    3c82:	9806      	ldr	r0, [sp, #24]
    3c84:	9907      	ldr	r1, [sp, #28]
    3c86:	2200      	movs	r2, #0
    3c88:	4ba8      	ldr	r3, [pc, #672]	; (3f2c <_dtoa_r+0x6e0>)
    3c8a:	f7fe fb43 	bl	2314 <__aeabi_dsub>
    3c8e:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3c90:	0023      	movs	r3, r4
    3c92:	9006      	str	r0, [sp, #24]
    3c94:	9107      	str	r1, [sp, #28]
    3c96:	f7fe ff2b 	bl	2af0 <__aeabi_dcmpgt>
    3c9a:	2800      	cmp	r0, #0
    3c9c:	d000      	beq.n	3ca0 <_dtoa_r+0x454>
    3c9e:	e301      	b.n	42a4 <_dtoa_r+0xa58>
    3ca0:	48a3      	ldr	r0, [pc, #652]	; (3f30 <_dtoa_r+0x6e4>)
    3ca2:	9913      	ldr	r1, [sp, #76]	; 0x4c
    3ca4:	4684      	mov	ip, r0
    3ca6:	4461      	add	r1, ip
    3ca8:	000b      	movs	r3, r1
    3caa:	9806      	ldr	r0, [sp, #24]
    3cac:	9907      	ldr	r1, [sp, #28]
    3cae:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3cb0:	f7fe ff0a 	bl	2ac8 <__aeabi_dcmplt>
    3cb4:	2800      	cmp	r0, #0
    3cb6:	d000      	beq.n	3cba <_dtoa_r+0x46e>
    3cb8:	e2e8      	b.n	428c <_dtoa_r+0xa40>
    3cba:	9b14      	ldr	r3, [sp, #80]	; 0x50
    3cbc:	9c15      	ldr	r4, [sp, #84]	; 0x54
    3cbe:	9306      	str	r3, [sp, #24]
    3cc0:	9407      	str	r4, [sp, #28]
    3cc2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    3cc4:	2b00      	cmp	r3, #0
    3cc6:	da00      	bge.n	3cca <_dtoa_r+0x47e>
    3cc8:	e157      	b.n	3f7a <_dtoa_r+0x72e>
    3cca:	9a03      	ldr	r2, [sp, #12]
    3ccc:	2a0e      	cmp	r2, #14
    3cce:	dd00      	ble.n	3cd2 <_dtoa_r+0x486>
    3cd0:	e153      	b.n	3f7a <_dtoa_r+0x72e>
    3cd2:	4b90      	ldr	r3, [pc, #576]	; (3f14 <_dtoa_r+0x6c8>)
    3cd4:	00d2      	lsls	r2, r2, #3
    3cd6:	189b      	adds	r3, r3, r2
    3cd8:	685c      	ldr	r4, [r3, #4]
    3cda:	681b      	ldr	r3, [r3, #0]
    3cdc:	9308      	str	r3, [sp, #32]
    3cde:	9409      	str	r4, [sp, #36]	; 0x24
    3ce0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    3ce2:	2b00      	cmp	r3, #0
    3ce4:	db00      	blt.n	3ce8 <_dtoa_r+0x49c>
    3ce6:	e0ce      	b.n	3e86 <_dtoa_r+0x63a>
    3ce8:	2f00      	cmp	r7, #0
    3cea:	dd00      	ble.n	3cee <_dtoa_r+0x4a2>
    3cec:	e0cb      	b.n	3e86 <_dtoa_r+0x63a>
    3cee:	d000      	beq.n	3cf2 <_dtoa_r+0x4a6>
    3cf0:	e2cf      	b.n	4292 <_dtoa_r+0xa46>
    3cf2:	9808      	ldr	r0, [sp, #32]
    3cf4:	9909      	ldr	r1, [sp, #36]	; 0x24
    3cf6:	2200      	movs	r2, #0
    3cf8:	4b8c      	ldr	r3, [pc, #560]	; (3f2c <_dtoa_r+0x6e0>)
    3cfa:	f7fe f88b 	bl	1e14 <__aeabi_dmul>
    3cfe:	9a06      	ldr	r2, [sp, #24]
    3d00:	9b07      	ldr	r3, [sp, #28]
    3d02:	f7fe feff 	bl	2b04 <__aeabi_dcmpge>
    3d06:	003e      	movs	r6, r7
    3d08:	9708      	str	r7, [sp, #32]
    3d0a:	2800      	cmp	r0, #0
    3d0c:	d000      	beq.n	3d10 <_dtoa_r+0x4c4>
    3d0e:	e2a4      	b.n	425a <_dtoa_r+0xa0e>
    3d10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    3d12:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    3d14:	1c5d      	adds	r5, r3, #1
    3d16:	2331      	movs	r3, #49	; 0x31
    3d18:	7013      	strb	r3, [r2, #0]
    3d1a:	9b03      	ldr	r3, [sp, #12]
    3d1c:	3301      	adds	r3, #1
    3d1e:	9303      	str	r3, [sp, #12]
    3d20:	e29f      	b.n	4262 <_dtoa_r+0xa16>
    3d22:	2201      	movs	r2, #1
    3d24:	4215      	tst	r5, r2
    3d26:	d005      	beq.n	3d34 <_dtoa_r+0x4e8>
    3d28:	18a4      	adds	r4, r4, r2
    3d2a:	6832      	ldr	r2, [r6, #0]
    3d2c:	6873      	ldr	r3, [r6, #4]
    3d2e:	f7fe f871 	bl	1e14 <__aeabi_dmul>
    3d32:	2301      	movs	r3, #1
    3d34:	106d      	asrs	r5, r5, #1
    3d36:	3608      	adds	r6, #8
    3d38:	e763      	b.n	3c02 <_dtoa_r+0x3b6>
    3d3a:	9e03      	ldr	r6, [sp, #12]
    3d3c:	003d      	movs	r5, r7
    3d3e:	e789      	b.n	3c54 <_dtoa_r+0x408>
    3d40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    3d42:	1e69      	subs	r1, r5, #1
    3d44:	1952      	adds	r2, r2, r5
    3d46:	9217      	str	r2, [sp, #92]	; 0x5c
    3d48:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    3d4a:	4b72      	ldr	r3, [pc, #456]	; (3f14 <_dtoa_r+0x6c8>)
    3d4c:	00c9      	lsls	r1, r1, #3
    3d4e:	2a00      	cmp	r2, #0
    3d50:	d04a      	beq.n	3de8 <_dtoa_r+0x59c>
    3d52:	185b      	adds	r3, r3, r1
    3d54:	681a      	ldr	r2, [r3, #0]
    3d56:	685b      	ldr	r3, [r3, #4]
    3d58:	2000      	movs	r0, #0
    3d5a:	4976      	ldr	r1, [pc, #472]	; (3f34 <_dtoa_r+0x6e8>)
    3d5c:	f7fd fd26 	bl	17ac <__aeabi_ddiv>
    3d60:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3d62:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3d64:	f7fe fad6 	bl	2314 <__aeabi_dsub>
    3d68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    3d6a:	9010      	str	r0, [sp, #64]	; 0x40
    3d6c:	9111      	str	r1, [sp, #68]	; 0x44
    3d6e:	9312      	str	r3, [sp, #72]	; 0x48
    3d70:	9806      	ldr	r0, [sp, #24]
    3d72:	9907      	ldr	r1, [sp, #28]
    3d74:	f7fe fde4 	bl	2940 <__aeabi_d2iz>
    3d78:	0004      	movs	r4, r0
    3d7a:	f7fe fe15 	bl	29a8 <__aeabi_i2d>
    3d7e:	0002      	movs	r2, r0
    3d80:	000b      	movs	r3, r1
    3d82:	9806      	ldr	r0, [sp, #24]
    3d84:	9907      	ldr	r1, [sp, #28]
    3d86:	f7fe fac5 	bl	2314 <__aeabi_dsub>
    3d8a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3d8c:	3430      	adds	r4, #48	; 0x30
    3d8e:	1c5d      	adds	r5, r3, #1
    3d90:	701c      	strb	r4, [r3, #0]
    3d92:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3d94:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3d96:	9006      	str	r0, [sp, #24]
    3d98:	9107      	str	r1, [sp, #28]
    3d9a:	f7fe fe95 	bl	2ac8 <__aeabi_dcmplt>
    3d9e:	2800      	cmp	r0, #0
    3da0:	d165      	bne.n	3e6e <_dtoa_r+0x622>
    3da2:	9a06      	ldr	r2, [sp, #24]
    3da4:	9b07      	ldr	r3, [sp, #28]
    3da6:	2000      	movs	r0, #0
    3da8:	495c      	ldr	r1, [pc, #368]	; (3f1c <_dtoa_r+0x6d0>)
    3daa:	f7fe fab3 	bl	2314 <__aeabi_dsub>
    3dae:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3db0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3db2:	f7fe fe89 	bl	2ac8 <__aeabi_dcmplt>
    3db6:	2800      	cmp	r0, #0
    3db8:	d000      	beq.n	3dbc <_dtoa_r+0x570>
    3dba:	e0be      	b.n	3f3a <_dtoa_r+0x6ee>
    3dbc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    3dbe:	429d      	cmp	r5, r3
    3dc0:	d100      	bne.n	3dc4 <_dtoa_r+0x578>
    3dc2:	e77a      	b.n	3cba <_dtoa_r+0x46e>
    3dc4:	9810      	ldr	r0, [sp, #64]	; 0x40
    3dc6:	9911      	ldr	r1, [sp, #68]	; 0x44
    3dc8:	2200      	movs	r2, #0
    3dca:	4b55      	ldr	r3, [pc, #340]	; (3f20 <_dtoa_r+0x6d4>)
    3dcc:	f7fe f822 	bl	1e14 <__aeabi_dmul>
    3dd0:	2200      	movs	r2, #0
    3dd2:	9010      	str	r0, [sp, #64]	; 0x40
    3dd4:	9111      	str	r1, [sp, #68]	; 0x44
    3dd6:	9806      	ldr	r0, [sp, #24]
    3dd8:	9907      	ldr	r1, [sp, #28]
    3dda:	4b51      	ldr	r3, [pc, #324]	; (3f20 <_dtoa_r+0x6d4>)
    3ddc:	f7fe f81a 	bl	1e14 <__aeabi_dmul>
    3de0:	9512      	str	r5, [sp, #72]	; 0x48
    3de2:	9006      	str	r0, [sp, #24]
    3de4:	9107      	str	r1, [sp, #28]
    3de6:	e7c3      	b.n	3d70 <_dtoa_r+0x524>
    3de8:	1859      	adds	r1, r3, r1
    3dea:	6808      	ldr	r0, [r1, #0]
    3dec:	6849      	ldr	r1, [r1, #4]
    3dee:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3df0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3df2:	f7fe f80f 	bl	1e14 <__aeabi_dmul>
    3df6:	9010      	str	r0, [sp, #64]	; 0x40
    3df8:	9111      	str	r1, [sp, #68]	; 0x44
    3dfa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    3dfc:	9d17      	ldr	r5, [sp, #92]	; 0x5c
    3dfe:	9806      	ldr	r0, [sp, #24]
    3e00:	9907      	ldr	r1, [sp, #28]
    3e02:	f7fe fd9d 	bl	2940 <__aeabi_d2iz>
    3e06:	9012      	str	r0, [sp, #72]	; 0x48
    3e08:	f7fe fdce 	bl	29a8 <__aeabi_i2d>
    3e0c:	0002      	movs	r2, r0
    3e0e:	000b      	movs	r3, r1
    3e10:	9806      	ldr	r0, [sp, #24]
    3e12:	9907      	ldr	r1, [sp, #28]
    3e14:	f7fe fa7e 	bl	2314 <__aeabi_dsub>
    3e18:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3e1a:	9006      	str	r0, [sp, #24]
    3e1c:	9107      	str	r1, [sp, #28]
    3e1e:	3330      	adds	r3, #48	; 0x30
    3e20:	7023      	strb	r3, [r4, #0]
    3e22:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    3e24:	3401      	adds	r4, #1
    3e26:	2200      	movs	r2, #0
    3e28:	42a3      	cmp	r3, r4
    3e2a:	d124      	bne.n	3e76 <_dtoa_r+0x62a>
    3e2c:	4b41      	ldr	r3, [pc, #260]	; (3f34 <_dtoa_r+0x6e8>)
    3e2e:	9810      	ldr	r0, [sp, #64]	; 0x40
    3e30:	9911      	ldr	r1, [sp, #68]	; 0x44
    3e32:	f001 f981 	bl	5138 <__aeabi_dadd>
    3e36:	0002      	movs	r2, r0
    3e38:	000b      	movs	r3, r1
    3e3a:	9806      	ldr	r0, [sp, #24]
    3e3c:	9907      	ldr	r1, [sp, #28]
    3e3e:	f7fe fe57 	bl	2af0 <__aeabi_dcmpgt>
    3e42:	2800      	cmp	r0, #0
    3e44:	d000      	beq.n	3e48 <_dtoa_r+0x5fc>
    3e46:	e078      	b.n	3f3a <_dtoa_r+0x6ee>
    3e48:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3e4a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3e4c:	2000      	movs	r0, #0
    3e4e:	4939      	ldr	r1, [pc, #228]	; (3f34 <_dtoa_r+0x6e8>)
    3e50:	f7fe fa60 	bl	2314 <__aeabi_dsub>
    3e54:	0002      	movs	r2, r0
    3e56:	000b      	movs	r3, r1
    3e58:	9806      	ldr	r0, [sp, #24]
    3e5a:	9907      	ldr	r1, [sp, #28]
    3e5c:	f7fe fe34 	bl	2ac8 <__aeabi_dcmplt>
    3e60:	2800      	cmp	r0, #0
    3e62:	d100      	bne.n	3e66 <_dtoa_r+0x61a>
    3e64:	e729      	b.n	3cba <_dtoa_r+0x46e>
    3e66:	1e6b      	subs	r3, r5, #1
    3e68:	781a      	ldrb	r2, [r3, #0]
    3e6a:	2a30      	cmp	r2, #48	; 0x30
    3e6c:	d001      	beq.n	3e72 <_dtoa_r+0x626>
    3e6e:	9603      	str	r6, [sp, #12]
    3e70:	e03f      	b.n	3ef2 <_dtoa_r+0x6a6>
    3e72:	001d      	movs	r5, r3
    3e74:	e7f7      	b.n	3e66 <_dtoa_r+0x61a>
    3e76:	9806      	ldr	r0, [sp, #24]
    3e78:	9907      	ldr	r1, [sp, #28]
    3e7a:	4b29      	ldr	r3, [pc, #164]	; (3f20 <_dtoa_r+0x6d4>)
    3e7c:	f7fd ffca 	bl	1e14 <__aeabi_dmul>
    3e80:	9006      	str	r0, [sp, #24]
    3e82:	9107      	str	r1, [sp, #28]
    3e84:	e7bb      	b.n	3dfe <_dtoa_r+0x5b2>
    3e86:	9e0a      	ldr	r6, [sp, #40]	; 0x28
    3e88:	9a08      	ldr	r2, [sp, #32]
    3e8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    3e8c:	9806      	ldr	r0, [sp, #24]
    3e8e:	9907      	ldr	r1, [sp, #28]
    3e90:	f7fd fc8c 	bl	17ac <__aeabi_ddiv>
    3e94:	f7fe fd54 	bl	2940 <__aeabi_d2iz>
    3e98:	0004      	movs	r4, r0
    3e9a:	f7fe fd85 	bl	29a8 <__aeabi_i2d>
    3e9e:	9a08      	ldr	r2, [sp, #32]
    3ea0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    3ea2:	f7fd ffb7 	bl	1e14 <__aeabi_dmul>
    3ea6:	000b      	movs	r3, r1
    3ea8:	0002      	movs	r2, r0
    3eaa:	9806      	ldr	r0, [sp, #24]
    3eac:	9907      	ldr	r1, [sp, #28]
    3eae:	f7fe fa31 	bl	2314 <__aeabi_dsub>
    3eb2:	0023      	movs	r3, r4
    3eb4:	3330      	adds	r3, #48	; 0x30
    3eb6:	7033      	strb	r3, [r6, #0]
    3eb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    3eba:	1c75      	adds	r5, r6, #1
    3ebc:	1aeb      	subs	r3, r5, r3
    3ebe:	429f      	cmp	r7, r3
    3ec0:	d14c      	bne.n	3f5c <_dtoa_r+0x710>
    3ec2:	0002      	movs	r2, r0
    3ec4:	000b      	movs	r3, r1
    3ec6:	f001 f937 	bl	5138 <__aeabi_dadd>
    3eca:	0006      	movs	r6, r0
    3ecc:	000f      	movs	r7, r1
    3ece:	0002      	movs	r2, r0
    3ed0:	000b      	movs	r3, r1
    3ed2:	9808      	ldr	r0, [sp, #32]
    3ed4:	9909      	ldr	r1, [sp, #36]	; 0x24
    3ed6:	f7fe fdf7 	bl	2ac8 <__aeabi_dcmplt>
    3eda:	2800      	cmp	r0, #0
    3edc:	d12c      	bne.n	3f38 <_dtoa_r+0x6ec>
    3ede:	9808      	ldr	r0, [sp, #32]
    3ee0:	9909      	ldr	r1, [sp, #36]	; 0x24
    3ee2:	0032      	movs	r2, r6
    3ee4:	003b      	movs	r3, r7
    3ee6:	f7fe fde9 	bl	2abc <__aeabi_dcmpeq>
    3eea:	2800      	cmp	r0, #0
    3eec:	d001      	beq.n	3ef2 <_dtoa_r+0x6a6>
    3eee:	07e3      	lsls	r3, r4, #31
    3ef0:	d422      	bmi.n	3f38 <_dtoa_r+0x6ec>
    3ef2:	9905      	ldr	r1, [sp, #20]
    3ef4:	9804      	ldr	r0, [sp, #16]
    3ef6:	f000 faf3 	bl	44e0 <_Bfree>
    3efa:	2300      	movs	r3, #0
    3efc:	702b      	strb	r3, [r5, #0]
    3efe:	9b03      	ldr	r3, [sp, #12]
    3f00:	9a24      	ldr	r2, [sp, #144]	; 0x90
    3f02:	3301      	adds	r3, #1
    3f04:	6013      	str	r3, [r2, #0]
    3f06:	9b26      	ldr	r3, [sp, #152]	; 0x98
    3f08:	2b00      	cmp	r3, #0
    3f0a:	d100      	bne.n	3f0e <_dtoa_r+0x6c2>
    3f0c:	e275      	b.n	43fa <_dtoa_r+0xbae>
    3f0e:	601d      	str	r5, [r3, #0]
    3f10:	e273      	b.n	43fa <_dtoa_r+0xbae>
    3f12:	46c0      	nop			; (mov r8, r8)
    3f14:	00005bd0 	.word	0x00005bd0
    3f18:	00005ba8 	.word	0x00005ba8
    3f1c:	3ff00000 	.word	0x3ff00000
    3f20:	40240000 	.word	0x40240000
    3f24:	401c0000 	.word	0x401c0000
    3f28:	fcc00000 	.word	0xfcc00000
    3f2c:	40140000 	.word	0x40140000
    3f30:	7cc00000 	.word	0x7cc00000
    3f34:	3fe00000 	.word	0x3fe00000
    3f38:	9e03      	ldr	r6, [sp, #12]
    3f3a:	1e6b      	subs	r3, r5, #1
    3f3c:	781a      	ldrb	r2, [r3, #0]
    3f3e:	2a39      	cmp	r2, #57	; 0x39
    3f40:	d106      	bne.n	3f50 <_dtoa_r+0x704>
    3f42:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    3f44:	429a      	cmp	r2, r3
    3f46:	d107      	bne.n	3f58 <_dtoa_r+0x70c>
    3f48:	2330      	movs	r3, #48	; 0x30
    3f4a:	7013      	strb	r3, [r2, #0]
    3f4c:	0013      	movs	r3, r2
    3f4e:	3601      	adds	r6, #1
    3f50:	781a      	ldrb	r2, [r3, #0]
    3f52:	3201      	adds	r2, #1
    3f54:	701a      	strb	r2, [r3, #0]
    3f56:	e78a      	b.n	3e6e <_dtoa_r+0x622>
    3f58:	001d      	movs	r5, r3
    3f5a:	e7ee      	b.n	3f3a <_dtoa_r+0x6ee>
    3f5c:	2200      	movs	r2, #0
    3f5e:	4bcf      	ldr	r3, [pc, #828]	; (429c <_dtoa_r+0xa50>)
    3f60:	f7fd ff58 	bl	1e14 <__aeabi_dmul>
    3f64:	2200      	movs	r2, #0
    3f66:	2300      	movs	r3, #0
    3f68:	9006      	str	r0, [sp, #24]
    3f6a:	9107      	str	r1, [sp, #28]
    3f6c:	002e      	movs	r6, r5
    3f6e:	f7fe fda5 	bl	2abc <__aeabi_dcmpeq>
    3f72:	2800      	cmp	r0, #0
    3f74:	d100      	bne.n	3f78 <_dtoa_r+0x72c>
    3f76:	e787      	b.n	3e88 <_dtoa_r+0x63c>
    3f78:	e7bb      	b.n	3ef2 <_dtoa_r+0x6a6>
    3f7a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    3f7c:	2a00      	cmp	r2, #0
    3f7e:	d100      	bne.n	3f82 <_dtoa_r+0x736>
    3f80:	e087      	b.n	4092 <_dtoa_r+0x846>
    3f82:	9a22      	ldr	r2, [sp, #136]	; 0x88
    3f84:	2a01      	cmp	r2, #1
    3f86:	dc6e      	bgt.n	4066 <_dtoa_r+0x81a>
    3f88:	9a18      	ldr	r2, [sp, #96]	; 0x60
    3f8a:	2a00      	cmp	r2, #0
    3f8c:	d067      	beq.n	405e <_dtoa_r+0x812>
    3f8e:	4ac4      	ldr	r2, [pc, #784]	; (42a0 <_dtoa_r+0xa54>)
    3f90:	189b      	adds	r3, r3, r2
    3f92:	9d08      	ldr	r5, [sp, #32]
    3f94:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    3f96:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    3f98:	2101      	movs	r1, #1
    3f9a:	18d2      	adds	r2, r2, r3
    3f9c:	920b      	str	r2, [sp, #44]	; 0x2c
    3f9e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    3fa0:	9804      	ldr	r0, [sp, #16]
    3fa2:	18d3      	adds	r3, r2, r3
    3fa4:	930c      	str	r3, [sp, #48]	; 0x30
    3fa6:	f000 fb39 	bl	461c <__i2b>
    3faa:	0006      	movs	r6, r0
    3fac:	2c00      	cmp	r4, #0
    3fae:	dd0e      	ble.n	3fce <_dtoa_r+0x782>
    3fb0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3fb2:	2b00      	cmp	r3, #0
    3fb4:	dd0b      	ble.n	3fce <_dtoa_r+0x782>
    3fb6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    3fb8:	0023      	movs	r3, r4
    3fba:	4294      	cmp	r4, r2
    3fbc:	dd00      	ble.n	3fc0 <_dtoa_r+0x774>
    3fbe:	0013      	movs	r3, r2
    3fc0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    3fc2:	1ae4      	subs	r4, r4, r3
    3fc4:	1ad2      	subs	r2, r2, r3
    3fc6:	920b      	str	r2, [sp, #44]	; 0x2c
    3fc8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    3fca:	1ad3      	subs	r3, r2, r3
    3fcc:	930c      	str	r3, [sp, #48]	; 0x30
    3fce:	9b08      	ldr	r3, [sp, #32]
    3fd0:	2b00      	cmp	r3, #0
    3fd2:	d01e      	beq.n	4012 <_dtoa_r+0x7c6>
    3fd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    3fd6:	2b00      	cmp	r3, #0
    3fd8:	d05f      	beq.n	409a <_dtoa_r+0x84e>
    3fda:	2d00      	cmp	r5, #0
    3fdc:	dd11      	ble.n	4002 <_dtoa_r+0x7b6>
    3fde:	0031      	movs	r1, r6
    3fe0:	002a      	movs	r2, r5
    3fe2:	9804      	ldr	r0, [sp, #16]
    3fe4:	f000 fbb2 	bl	474c <__pow5mult>
    3fe8:	9a05      	ldr	r2, [sp, #20]
    3fea:	0001      	movs	r1, r0
    3fec:	0006      	movs	r6, r0
    3fee:	9804      	ldr	r0, [sp, #16]
    3ff0:	f000 fb1d 	bl	462e <__multiply>
    3ff4:	9905      	ldr	r1, [sp, #20]
    3ff6:	9010      	str	r0, [sp, #64]	; 0x40
    3ff8:	9804      	ldr	r0, [sp, #16]
    3ffa:	f000 fa71 	bl	44e0 <_Bfree>
    3ffe:	9b10      	ldr	r3, [sp, #64]	; 0x40
    4000:	9305      	str	r3, [sp, #20]
    4002:	9b08      	ldr	r3, [sp, #32]
    4004:	1b5a      	subs	r2, r3, r5
    4006:	d004      	beq.n	4012 <_dtoa_r+0x7c6>
    4008:	9905      	ldr	r1, [sp, #20]
    400a:	9804      	ldr	r0, [sp, #16]
    400c:	f000 fb9e 	bl	474c <__pow5mult>
    4010:	9005      	str	r0, [sp, #20]
    4012:	2101      	movs	r1, #1
    4014:	9804      	ldr	r0, [sp, #16]
    4016:	f000 fb01 	bl	461c <__i2b>
    401a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    401c:	9008      	str	r0, [sp, #32]
    401e:	2b00      	cmp	r3, #0
    4020:	dd3d      	ble.n	409e <_dtoa_r+0x852>
    4022:	001a      	movs	r2, r3
    4024:	0001      	movs	r1, r0
    4026:	9804      	ldr	r0, [sp, #16]
    4028:	f000 fb90 	bl	474c <__pow5mult>
    402c:	9b22      	ldr	r3, [sp, #136]	; 0x88
    402e:	9008      	str	r0, [sp, #32]
    4030:	2500      	movs	r5, #0
    4032:	2b01      	cmp	r3, #1
    4034:	dc3b      	bgt.n	40ae <_dtoa_r+0x862>
    4036:	2500      	movs	r5, #0
    4038:	9b06      	ldr	r3, [sp, #24]
    403a:	42ab      	cmp	r3, r5
    403c:	d133      	bne.n	40a6 <_dtoa_r+0x85a>
    403e:	9b07      	ldr	r3, [sp, #28]
    4040:	031b      	lsls	r3, r3, #12
    4042:	42ab      	cmp	r3, r5
    4044:	d12f      	bne.n	40a6 <_dtoa_r+0x85a>
    4046:	9b19      	ldr	r3, [sp, #100]	; 0x64
    4048:	9a07      	ldr	r2, [sp, #28]
    404a:	4213      	tst	r3, r2
    404c:	d02b      	beq.n	40a6 <_dtoa_r+0x85a>
    404e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4050:	3501      	adds	r5, #1
    4052:	3301      	adds	r3, #1
    4054:	930b      	str	r3, [sp, #44]	; 0x2c
    4056:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4058:	3301      	adds	r3, #1
    405a:	930c      	str	r3, [sp, #48]	; 0x30
    405c:	e023      	b.n	40a6 <_dtoa_r+0x85a>
    405e:	2336      	movs	r3, #54	; 0x36
    4060:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    4062:	1a9b      	subs	r3, r3, r2
    4064:	e795      	b.n	3f92 <_dtoa_r+0x746>
    4066:	9b08      	ldr	r3, [sp, #32]
    4068:	1e7d      	subs	r5, r7, #1
    406a:	42ab      	cmp	r3, r5
    406c:	db06      	blt.n	407c <_dtoa_r+0x830>
    406e:	1b5d      	subs	r5, r3, r5
    4070:	2f00      	cmp	r7, #0
    4072:	da0b      	bge.n	408c <_dtoa_r+0x840>
    4074:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4076:	1bdc      	subs	r4, r3, r7
    4078:	2300      	movs	r3, #0
    407a:	e78c      	b.n	3f96 <_dtoa_r+0x74a>
    407c:	9b08      	ldr	r3, [sp, #32]
    407e:	9508      	str	r5, [sp, #32]
    4080:	1aea      	subs	r2, r5, r3
    4082:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4084:	2500      	movs	r5, #0
    4086:	189b      	adds	r3, r3, r2
    4088:	930f      	str	r3, [sp, #60]	; 0x3c
    408a:	e7f1      	b.n	4070 <_dtoa_r+0x824>
    408c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    408e:	003b      	movs	r3, r7
    4090:	e781      	b.n	3f96 <_dtoa_r+0x74a>
    4092:	9d08      	ldr	r5, [sp, #32]
    4094:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    4096:	9e0e      	ldr	r6, [sp, #56]	; 0x38
    4098:	e788      	b.n	3fac <_dtoa_r+0x760>
    409a:	9a08      	ldr	r2, [sp, #32]
    409c:	e7b4      	b.n	4008 <_dtoa_r+0x7bc>
    409e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    40a0:	2500      	movs	r5, #0
    40a2:	2b01      	cmp	r3, #1
    40a4:	ddc7      	ble.n	4036 <_dtoa_r+0x7ea>
    40a6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    40a8:	2001      	movs	r0, #1
    40aa:	2b00      	cmp	r3, #0
    40ac:	d00b      	beq.n	40c6 <_dtoa_r+0x87a>
    40ae:	9b08      	ldr	r3, [sp, #32]
    40b0:	9a08      	ldr	r2, [sp, #32]
    40b2:	691b      	ldr	r3, [r3, #16]
    40b4:	930f      	str	r3, [sp, #60]	; 0x3c
    40b6:	3303      	adds	r3, #3
    40b8:	009b      	lsls	r3, r3, #2
    40ba:	18d3      	adds	r3, r2, r3
    40bc:	6858      	ldr	r0, [r3, #4]
    40be:	f000 fa64 	bl	458a <__hi0bits>
    40c2:	2320      	movs	r3, #32
    40c4:	1a18      	subs	r0, r3, r0
    40c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    40c8:	18c0      	adds	r0, r0, r3
    40ca:	231f      	movs	r3, #31
    40cc:	4018      	ands	r0, r3
    40ce:	d100      	bne.n	40d2 <_dtoa_r+0x886>
    40d0:	e0ab      	b.n	422a <_dtoa_r+0x9de>
    40d2:	3301      	adds	r3, #1
    40d4:	1a1b      	subs	r3, r3, r0
    40d6:	2b04      	cmp	r3, #4
    40d8:	dc00      	bgt.n	40dc <_dtoa_r+0x890>
    40da:	e09b      	b.n	4214 <_dtoa_r+0x9c8>
    40dc:	231c      	movs	r3, #28
    40de:	1a18      	subs	r0, r3, r0
    40e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    40e2:	1824      	adds	r4, r4, r0
    40e4:	181b      	adds	r3, r3, r0
    40e6:	930b      	str	r3, [sp, #44]	; 0x2c
    40e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    40ea:	181b      	adds	r3, r3, r0
    40ec:	930c      	str	r3, [sp, #48]	; 0x30
    40ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    40f0:	2b00      	cmp	r3, #0
    40f2:	dd05      	ble.n	4100 <_dtoa_r+0x8b4>
    40f4:	001a      	movs	r2, r3
    40f6:	9905      	ldr	r1, [sp, #20]
    40f8:	9804      	ldr	r0, [sp, #16]
    40fa:	f000 fb79 	bl	47f0 <__lshift>
    40fe:	9005      	str	r0, [sp, #20]
    4100:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4102:	2b00      	cmp	r3, #0
    4104:	dd05      	ble.n	4112 <_dtoa_r+0x8c6>
    4106:	001a      	movs	r2, r3
    4108:	9908      	ldr	r1, [sp, #32]
    410a:	9804      	ldr	r0, [sp, #16]
    410c:	f000 fb70 	bl	47f0 <__lshift>
    4110:	9008      	str	r0, [sp, #32]
    4112:	9b16      	ldr	r3, [sp, #88]	; 0x58
    4114:	2b00      	cmp	r3, #0
    4116:	d100      	bne.n	411a <_dtoa_r+0x8ce>
    4118:	e089      	b.n	422e <_dtoa_r+0x9e2>
    411a:	9908      	ldr	r1, [sp, #32]
    411c:	9805      	ldr	r0, [sp, #20]
    411e:	f000 fbb8 	bl	4892 <__mcmp>
    4122:	2800      	cmp	r0, #0
    4124:	db00      	blt.n	4128 <_dtoa_r+0x8dc>
    4126:	e082      	b.n	422e <_dtoa_r+0x9e2>
    4128:	9b03      	ldr	r3, [sp, #12]
    412a:	220a      	movs	r2, #10
    412c:	3b01      	subs	r3, #1
    412e:	9303      	str	r3, [sp, #12]
    4130:	9905      	ldr	r1, [sp, #20]
    4132:	2300      	movs	r3, #0
    4134:	9804      	ldr	r0, [sp, #16]
    4136:	f000 f9ec 	bl	4512 <__multadd>
    413a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    413c:	9005      	str	r0, [sp, #20]
    413e:	2b00      	cmp	r3, #0
    4140:	d100      	bne.n	4144 <_dtoa_r+0x8f8>
    4142:	e15d      	b.n	4400 <_dtoa_r+0xbb4>
    4144:	2300      	movs	r3, #0
    4146:	0031      	movs	r1, r6
    4148:	220a      	movs	r2, #10
    414a:	9804      	ldr	r0, [sp, #16]
    414c:	f000 f9e1 	bl	4512 <__multadd>
    4150:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4152:	0006      	movs	r6, r0
    4154:	2b00      	cmp	r3, #0
    4156:	dc02      	bgt.n	415e <_dtoa_r+0x912>
    4158:	9b22      	ldr	r3, [sp, #136]	; 0x88
    415a:	2b02      	cmp	r3, #2
    415c:	dc6d      	bgt.n	423a <_dtoa_r+0x9ee>
    415e:	2c00      	cmp	r4, #0
    4160:	dd05      	ble.n	416e <_dtoa_r+0x922>
    4162:	0031      	movs	r1, r6
    4164:	0022      	movs	r2, r4
    4166:	9804      	ldr	r0, [sp, #16]
    4168:	f000 fb42 	bl	47f0 <__lshift>
    416c:	0006      	movs	r6, r0
    416e:	0030      	movs	r0, r6
    4170:	2d00      	cmp	r5, #0
    4172:	d011      	beq.n	4198 <_dtoa_r+0x94c>
    4174:	6871      	ldr	r1, [r6, #4]
    4176:	9804      	ldr	r0, [sp, #16]
    4178:	f000 f97a 	bl	4470 <_Balloc>
    417c:	0031      	movs	r1, r6
    417e:	0004      	movs	r4, r0
    4180:	6933      	ldr	r3, [r6, #16]
    4182:	310c      	adds	r1, #12
    4184:	1c9a      	adds	r2, r3, #2
    4186:	0092      	lsls	r2, r2, #2
    4188:	300c      	adds	r0, #12
    418a:	f000 f968 	bl	445e <memcpy>
    418e:	2201      	movs	r2, #1
    4190:	0021      	movs	r1, r4
    4192:	9804      	ldr	r0, [sp, #16]
    4194:	f000 fb2c 	bl	47f0 <__lshift>
    4198:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    419a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    419c:	3f01      	subs	r7, #1
    419e:	930b      	str	r3, [sp, #44]	; 0x2c
    41a0:	19db      	adds	r3, r3, r7
    41a2:	0037      	movs	r7, r6
    41a4:	0006      	movs	r6, r0
    41a6:	930f      	str	r3, [sp, #60]	; 0x3c
    41a8:	9908      	ldr	r1, [sp, #32]
    41aa:	9805      	ldr	r0, [sp, #20]
    41ac:	f7ff fac9 	bl	3742 <quorem>
    41b0:	0039      	movs	r1, r7
    41b2:	900d      	str	r0, [sp, #52]	; 0x34
    41b4:	0004      	movs	r4, r0
    41b6:	9805      	ldr	r0, [sp, #20]
    41b8:	f000 fb6b 	bl	4892 <__mcmp>
    41bc:	0032      	movs	r2, r6
    41be:	900e      	str	r0, [sp, #56]	; 0x38
    41c0:	9908      	ldr	r1, [sp, #32]
    41c2:	9804      	ldr	r0, [sp, #16]
    41c4:	f000 fb7e 	bl	48c4 <__mdiff>
    41c8:	2301      	movs	r3, #1
    41ca:	930c      	str	r3, [sp, #48]	; 0x30
    41cc:	68c3      	ldr	r3, [r0, #12]
    41ce:	3430      	adds	r4, #48	; 0x30
    41d0:	0005      	movs	r5, r0
    41d2:	2b00      	cmp	r3, #0
    41d4:	d104      	bne.n	41e0 <_dtoa_r+0x994>
    41d6:	0001      	movs	r1, r0
    41d8:	9805      	ldr	r0, [sp, #20]
    41da:	f000 fb5a 	bl	4892 <__mcmp>
    41de:	900c      	str	r0, [sp, #48]	; 0x30
    41e0:	0029      	movs	r1, r5
    41e2:	9804      	ldr	r0, [sp, #16]
    41e4:	f000 f97c 	bl	44e0 <_Bfree>
    41e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    41ea:	9a22      	ldr	r2, [sp, #136]	; 0x88
    41ec:	4313      	orrs	r3, r2
    41ee:	d000      	beq.n	41f2 <_dtoa_r+0x9a6>
    41f0:	e089      	b.n	4306 <_dtoa_r+0xaba>
    41f2:	9a06      	ldr	r2, [sp, #24]
    41f4:	3301      	adds	r3, #1
    41f6:	4213      	tst	r3, r2
    41f8:	d000      	beq.n	41fc <_dtoa_r+0x9b0>
    41fa:	e084      	b.n	4306 <_dtoa_r+0xaba>
    41fc:	2c39      	cmp	r4, #57	; 0x39
    41fe:	d100      	bne.n	4202 <_dtoa_r+0x9b6>
    4200:	e0a3      	b.n	434a <_dtoa_r+0xafe>
    4202:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    4204:	2b00      	cmp	r3, #0
    4206:	dd01      	ble.n	420c <_dtoa_r+0x9c0>
    4208:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    420a:	3431      	adds	r4, #49	; 0x31
    420c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    420e:	1c5d      	adds	r5, r3, #1
    4210:	701c      	strb	r4, [r3, #0]
    4212:	e027      	b.n	4264 <_dtoa_r+0xa18>
    4214:	2b04      	cmp	r3, #4
    4216:	d100      	bne.n	421a <_dtoa_r+0x9ce>
    4218:	e769      	b.n	40ee <_dtoa_r+0x8a2>
    421a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    421c:	331c      	adds	r3, #28
    421e:	18d2      	adds	r2, r2, r3
    4220:	920b      	str	r2, [sp, #44]	; 0x2c
    4222:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4224:	18e4      	adds	r4, r4, r3
    4226:	18d3      	adds	r3, r2, r3
    4228:	e760      	b.n	40ec <_dtoa_r+0x8a0>
    422a:	0003      	movs	r3, r0
    422c:	e7f5      	b.n	421a <_dtoa_r+0x9ce>
    422e:	2f00      	cmp	r7, #0
    4230:	dc3c      	bgt.n	42ac <_dtoa_r+0xa60>
    4232:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4234:	2b02      	cmp	r3, #2
    4236:	dd39      	ble.n	42ac <_dtoa_r+0xa60>
    4238:	970d      	str	r7, [sp, #52]	; 0x34
    423a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    423c:	2b00      	cmp	r3, #0
    423e:	d10c      	bne.n	425a <_dtoa_r+0xa0e>
    4240:	9908      	ldr	r1, [sp, #32]
    4242:	2205      	movs	r2, #5
    4244:	9804      	ldr	r0, [sp, #16]
    4246:	f000 f964 	bl	4512 <__multadd>
    424a:	9008      	str	r0, [sp, #32]
    424c:	0001      	movs	r1, r0
    424e:	9805      	ldr	r0, [sp, #20]
    4250:	f000 fb1f 	bl	4892 <__mcmp>
    4254:	2800      	cmp	r0, #0
    4256:	dd00      	ble.n	425a <_dtoa_r+0xa0e>
    4258:	e55a      	b.n	3d10 <_dtoa_r+0x4c4>
    425a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    425c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    425e:	43db      	mvns	r3, r3
    4260:	9303      	str	r3, [sp, #12]
    4262:	2700      	movs	r7, #0
    4264:	9908      	ldr	r1, [sp, #32]
    4266:	9804      	ldr	r0, [sp, #16]
    4268:	f000 f93a 	bl	44e0 <_Bfree>
    426c:	2e00      	cmp	r6, #0
    426e:	d100      	bne.n	4272 <_dtoa_r+0xa26>
    4270:	e63f      	b.n	3ef2 <_dtoa_r+0x6a6>
    4272:	2f00      	cmp	r7, #0
    4274:	d005      	beq.n	4282 <_dtoa_r+0xa36>
    4276:	42b7      	cmp	r7, r6
    4278:	d003      	beq.n	4282 <_dtoa_r+0xa36>
    427a:	0039      	movs	r1, r7
    427c:	9804      	ldr	r0, [sp, #16]
    427e:	f000 f92f 	bl	44e0 <_Bfree>
    4282:	0031      	movs	r1, r6
    4284:	9804      	ldr	r0, [sp, #16]
    4286:	f000 f92b 	bl	44e0 <_Bfree>
    428a:	e632      	b.n	3ef2 <_dtoa_r+0x6a6>
    428c:	9508      	str	r5, [sp, #32]
    428e:	002e      	movs	r6, r5
    4290:	e7e3      	b.n	425a <_dtoa_r+0xa0e>
    4292:	2300      	movs	r3, #0
    4294:	9308      	str	r3, [sp, #32]
    4296:	001e      	movs	r6, r3
    4298:	e7df      	b.n	425a <_dtoa_r+0xa0e>
    429a:	46c0      	nop			; (mov r8, r8)
    429c:	40240000 	.word	0x40240000
    42a0:	00000433 	.word	0x00000433
    42a4:	9603      	str	r6, [sp, #12]
    42a6:	9508      	str	r5, [sp, #32]
    42a8:	002e      	movs	r6, r5
    42aa:	e531      	b.n	3d10 <_dtoa_r+0x4c4>
    42ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    42ae:	970d      	str	r7, [sp, #52]	; 0x34
    42b0:	2b00      	cmp	r3, #0
    42b2:	d000      	beq.n	42b6 <_dtoa_r+0xa6a>
    42b4:	e753      	b.n	415e <_dtoa_r+0x912>
    42b6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    42b8:	9908      	ldr	r1, [sp, #32]
    42ba:	9805      	ldr	r0, [sp, #20]
    42bc:	f7ff fa41 	bl	3742 <quorem>
    42c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    42c2:	3030      	adds	r0, #48	; 0x30
    42c4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    42c6:	7028      	strb	r0, [r5, #0]
    42c8:	3501      	adds	r5, #1
    42ca:	0004      	movs	r4, r0
    42cc:	1aeb      	subs	r3, r5, r3
    42ce:	429a      	cmp	r2, r3
    42d0:	dc78      	bgt.n	43c4 <_dtoa_r+0xb78>
    42d2:	1e15      	subs	r5, r2, #0
    42d4:	dc00      	bgt.n	42d8 <_dtoa_r+0xa8c>
    42d6:	2501      	movs	r5, #1
    42d8:	2700      	movs	r7, #0
    42da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    42dc:	195d      	adds	r5, r3, r5
    42de:	9905      	ldr	r1, [sp, #20]
    42e0:	2201      	movs	r2, #1
    42e2:	9804      	ldr	r0, [sp, #16]
    42e4:	f000 fa84 	bl	47f0 <__lshift>
    42e8:	9908      	ldr	r1, [sp, #32]
    42ea:	9005      	str	r0, [sp, #20]
    42ec:	f000 fad1 	bl	4892 <__mcmp>
    42f0:	2800      	cmp	r0, #0
    42f2:	dc2f      	bgt.n	4354 <_dtoa_r+0xb08>
    42f4:	d101      	bne.n	42fa <_dtoa_r+0xaae>
    42f6:	07e3      	lsls	r3, r4, #31
    42f8:	d42c      	bmi.n	4354 <_dtoa_r+0xb08>
    42fa:	1e6b      	subs	r3, r5, #1
    42fc:	781a      	ldrb	r2, [r3, #0]
    42fe:	2a30      	cmp	r2, #48	; 0x30
    4300:	d1b0      	bne.n	4264 <_dtoa_r+0xa18>
    4302:	001d      	movs	r5, r3
    4304:	e7f9      	b.n	42fa <_dtoa_r+0xaae>
    4306:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    4308:	2b00      	cmp	r3, #0
    430a:	db07      	blt.n	431c <_dtoa_r+0xad0>
    430c:	001d      	movs	r5, r3
    430e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4310:	431d      	orrs	r5, r3
    4312:	d126      	bne.n	4362 <_dtoa_r+0xb16>
    4314:	2301      	movs	r3, #1
    4316:	9a06      	ldr	r2, [sp, #24]
    4318:	4213      	tst	r3, r2
    431a:	d122      	bne.n	4362 <_dtoa_r+0xb16>
    431c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    431e:	2b00      	cmp	r3, #0
    4320:	dc00      	bgt.n	4324 <_dtoa_r+0xad8>
    4322:	e773      	b.n	420c <_dtoa_r+0x9c0>
    4324:	9905      	ldr	r1, [sp, #20]
    4326:	2201      	movs	r2, #1
    4328:	9804      	ldr	r0, [sp, #16]
    432a:	f000 fa61 	bl	47f0 <__lshift>
    432e:	9908      	ldr	r1, [sp, #32]
    4330:	9005      	str	r0, [sp, #20]
    4332:	f000 faae 	bl	4892 <__mcmp>
    4336:	2800      	cmp	r0, #0
    4338:	dc04      	bgt.n	4344 <_dtoa_r+0xaf8>
    433a:	d000      	beq.n	433e <_dtoa_r+0xaf2>
    433c:	e766      	b.n	420c <_dtoa_r+0x9c0>
    433e:	07e3      	lsls	r3, r4, #31
    4340:	d400      	bmi.n	4344 <_dtoa_r+0xaf8>
    4342:	e763      	b.n	420c <_dtoa_r+0x9c0>
    4344:	2c39      	cmp	r4, #57	; 0x39
    4346:	d000      	beq.n	434a <_dtoa_r+0xafe>
    4348:	e75e      	b.n	4208 <_dtoa_r+0x9bc>
    434a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    434c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    434e:	1c5d      	adds	r5, r3, #1
    4350:	2339      	movs	r3, #57	; 0x39
    4352:	7013      	strb	r3, [r2, #0]
    4354:	1e6b      	subs	r3, r5, #1
    4356:	781a      	ldrb	r2, [r3, #0]
    4358:	2a39      	cmp	r2, #57	; 0x39
    435a:	d03b      	beq.n	43d4 <_dtoa_r+0xb88>
    435c:	3201      	adds	r2, #1
    435e:	701a      	strb	r2, [r3, #0]
    4360:	e780      	b.n	4264 <_dtoa_r+0xa18>
    4362:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4364:	3301      	adds	r3, #1
    4366:	930d      	str	r3, [sp, #52]	; 0x34
    4368:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    436a:	2b00      	cmp	r3, #0
    436c:	dd05      	ble.n	437a <_dtoa_r+0xb2e>
    436e:	2c39      	cmp	r4, #57	; 0x39
    4370:	d0eb      	beq.n	434a <_dtoa_r+0xafe>
    4372:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    4374:	3401      	adds	r4, #1
    4376:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4378:	e74a      	b.n	4210 <_dtoa_r+0x9c4>
    437a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    437c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    437e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    4380:	701c      	strb	r4, [r3, #0]
    4382:	4293      	cmp	r3, r2
    4384:	d0ab      	beq.n	42de <_dtoa_r+0xa92>
    4386:	2300      	movs	r3, #0
    4388:	220a      	movs	r2, #10
    438a:	9905      	ldr	r1, [sp, #20]
    438c:	9804      	ldr	r0, [sp, #16]
    438e:	f000 f8c0 	bl	4512 <__multadd>
    4392:	2300      	movs	r3, #0
    4394:	9005      	str	r0, [sp, #20]
    4396:	220a      	movs	r2, #10
    4398:	0039      	movs	r1, r7
    439a:	9804      	ldr	r0, [sp, #16]
    439c:	42b7      	cmp	r7, r6
    439e:	d106      	bne.n	43ae <_dtoa_r+0xb62>
    43a0:	f000 f8b7 	bl	4512 <__multadd>
    43a4:	0007      	movs	r7, r0
    43a6:	0006      	movs	r6, r0
    43a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    43aa:	930b      	str	r3, [sp, #44]	; 0x2c
    43ac:	e6fc      	b.n	41a8 <_dtoa_r+0x95c>
    43ae:	f000 f8b0 	bl	4512 <__multadd>
    43b2:	0031      	movs	r1, r6
    43b4:	0007      	movs	r7, r0
    43b6:	2300      	movs	r3, #0
    43b8:	220a      	movs	r2, #10
    43ba:	9804      	ldr	r0, [sp, #16]
    43bc:	f000 f8a9 	bl	4512 <__multadd>
    43c0:	0006      	movs	r6, r0
    43c2:	e7f1      	b.n	43a8 <_dtoa_r+0xb5c>
    43c4:	2300      	movs	r3, #0
    43c6:	220a      	movs	r2, #10
    43c8:	9905      	ldr	r1, [sp, #20]
    43ca:	9804      	ldr	r0, [sp, #16]
    43cc:	f000 f8a1 	bl	4512 <__multadd>
    43d0:	9005      	str	r0, [sp, #20]
    43d2:	e771      	b.n	42b8 <_dtoa_r+0xa6c>
    43d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    43d6:	429a      	cmp	r2, r3
    43d8:	d105      	bne.n	43e6 <_dtoa_r+0xb9a>
    43da:	9b03      	ldr	r3, [sp, #12]
    43dc:	3301      	adds	r3, #1
    43de:	9303      	str	r3, [sp, #12]
    43e0:	2331      	movs	r3, #49	; 0x31
    43e2:	7013      	strb	r3, [r2, #0]
    43e4:	e73e      	b.n	4264 <_dtoa_r+0xa18>
    43e6:	001d      	movs	r5, r3
    43e8:	e7b4      	b.n	4354 <_dtoa_r+0xb08>
    43ea:	4b0a      	ldr	r3, [pc, #40]	; (4414 <_dtoa_r+0xbc8>)
    43ec:	9a26      	ldr	r2, [sp, #152]	; 0x98
    43ee:	930a      	str	r3, [sp, #40]	; 0x28
    43f0:	4b09      	ldr	r3, [pc, #36]	; (4418 <_dtoa_r+0xbcc>)
    43f2:	2a00      	cmp	r2, #0
    43f4:	d001      	beq.n	43fa <_dtoa_r+0xbae>
    43f6:	9a26      	ldr	r2, [sp, #152]	; 0x98
    43f8:	6013      	str	r3, [r2, #0]
    43fa:	980a      	ldr	r0, [sp, #40]	; 0x28
    43fc:	b01d      	add	sp, #116	; 0x74
    43fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4400:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4402:	2b00      	cmp	r3, #0
    4404:	dd00      	ble.n	4408 <_dtoa_r+0xbbc>
    4406:	e756      	b.n	42b6 <_dtoa_r+0xa6a>
    4408:	9b22      	ldr	r3, [sp, #136]	; 0x88
    440a:	2b02      	cmp	r3, #2
    440c:	dc00      	bgt.n	4410 <_dtoa_r+0xbc4>
    440e:	e752      	b.n	42b6 <_dtoa_r+0xa6a>
    4410:	e713      	b.n	423a <_dtoa_r+0x9ee>
    4412:	46c0      	nop			; (mov r8, r8)
    4414:	00005b38 	.word	0x00005b38
    4418:	00005b40 	.word	0x00005b40

0000441c <_localeconv_r>:
    441c:	4b03      	ldr	r3, [pc, #12]	; (442c <_localeconv_r+0x10>)
    441e:	681b      	ldr	r3, [r3, #0]
    4420:	6a18      	ldr	r0, [r3, #32]
    4422:	2800      	cmp	r0, #0
    4424:	d100      	bne.n	4428 <_localeconv_r+0xc>
    4426:	4802      	ldr	r0, [pc, #8]	; (4430 <_localeconv_r+0x14>)
    4428:	30f0      	adds	r0, #240	; 0xf0
    442a:	4770      	bx	lr
    442c:	20000000 	.word	0x20000000
    4430:	20000064 	.word	0x20000064

00004434 <malloc>:
    4434:	b510      	push	{r4, lr}
    4436:	4b03      	ldr	r3, [pc, #12]	; (4444 <malloc+0x10>)
    4438:	0001      	movs	r1, r0
    443a:	6818      	ldr	r0, [r3, #0]
    443c:	f000 fb52 	bl	4ae4 <_malloc_r>
    4440:	bd10      	pop	{r4, pc}
    4442:	46c0      	nop			; (mov r8, r8)
    4444:	20000000 	.word	0x20000000

00004448 <memchr>:
    4448:	b2c9      	uxtb	r1, r1
    444a:	1882      	adds	r2, r0, r2
    444c:	4290      	cmp	r0, r2
    444e:	d101      	bne.n	4454 <memchr+0xc>
    4450:	2000      	movs	r0, #0
    4452:	4770      	bx	lr
    4454:	7803      	ldrb	r3, [r0, #0]
    4456:	428b      	cmp	r3, r1
    4458:	d0fb      	beq.n	4452 <memchr+0xa>
    445a:	3001      	adds	r0, #1
    445c:	e7f6      	b.n	444c <memchr+0x4>

0000445e <memcpy>:
    445e:	2300      	movs	r3, #0
    4460:	b510      	push	{r4, lr}
    4462:	429a      	cmp	r2, r3
    4464:	d100      	bne.n	4468 <memcpy+0xa>
    4466:	bd10      	pop	{r4, pc}
    4468:	5ccc      	ldrb	r4, [r1, r3]
    446a:	54c4      	strb	r4, [r0, r3]
    446c:	3301      	adds	r3, #1
    446e:	e7f8      	b.n	4462 <memcpy+0x4>

00004470 <_Balloc>:
    4470:	b570      	push	{r4, r5, r6, lr}
    4472:	6a46      	ldr	r6, [r0, #36]	; 0x24
    4474:	0004      	movs	r4, r0
    4476:	000d      	movs	r5, r1
    4478:	2e00      	cmp	r6, #0
    447a:	d107      	bne.n	448c <_Balloc+0x1c>
    447c:	2010      	movs	r0, #16
    447e:	f7ff ffd9 	bl	4434 <malloc>
    4482:	6260      	str	r0, [r4, #36]	; 0x24
    4484:	6046      	str	r6, [r0, #4]
    4486:	6086      	str	r6, [r0, #8]
    4488:	6006      	str	r6, [r0, #0]
    448a:	60c6      	str	r6, [r0, #12]
    448c:	6a66      	ldr	r6, [r4, #36]	; 0x24
    448e:	68f3      	ldr	r3, [r6, #12]
    4490:	2b00      	cmp	r3, #0
    4492:	d013      	beq.n	44bc <_Balloc+0x4c>
    4494:	6a63      	ldr	r3, [r4, #36]	; 0x24
    4496:	00aa      	lsls	r2, r5, #2
    4498:	68db      	ldr	r3, [r3, #12]
    449a:	189b      	adds	r3, r3, r2
    449c:	6818      	ldr	r0, [r3, #0]
    449e:	2800      	cmp	r0, #0
    44a0:	d118      	bne.n	44d4 <_Balloc+0x64>
    44a2:	2101      	movs	r1, #1
    44a4:	000e      	movs	r6, r1
    44a6:	40ae      	lsls	r6, r5
    44a8:	1d72      	adds	r2, r6, #5
    44aa:	0092      	lsls	r2, r2, #2
    44ac:	0020      	movs	r0, r4
    44ae:	f000 fac1 	bl	4a34 <_calloc_r>
    44b2:	2800      	cmp	r0, #0
    44b4:	d00c      	beq.n	44d0 <_Balloc+0x60>
    44b6:	6045      	str	r5, [r0, #4]
    44b8:	6086      	str	r6, [r0, #8]
    44ba:	e00d      	b.n	44d8 <_Balloc+0x68>
    44bc:	2221      	movs	r2, #33	; 0x21
    44be:	2104      	movs	r1, #4
    44c0:	0020      	movs	r0, r4
    44c2:	f000 fab7 	bl	4a34 <_calloc_r>
    44c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
    44c8:	60f0      	str	r0, [r6, #12]
    44ca:	68db      	ldr	r3, [r3, #12]
    44cc:	2b00      	cmp	r3, #0
    44ce:	d1e1      	bne.n	4494 <_Balloc+0x24>
    44d0:	2000      	movs	r0, #0
    44d2:	bd70      	pop	{r4, r5, r6, pc}
    44d4:	6802      	ldr	r2, [r0, #0]
    44d6:	601a      	str	r2, [r3, #0]
    44d8:	2300      	movs	r3, #0
    44da:	6103      	str	r3, [r0, #16]
    44dc:	60c3      	str	r3, [r0, #12]
    44de:	e7f8      	b.n	44d2 <_Balloc+0x62>

000044e0 <_Bfree>:
    44e0:	b570      	push	{r4, r5, r6, lr}
    44e2:	6a44      	ldr	r4, [r0, #36]	; 0x24
    44e4:	0006      	movs	r6, r0
    44e6:	000d      	movs	r5, r1
    44e8:	2c00      	cmp	r4, #0
    44ea:	d107      	bne.n	44fc <_Bfree+0x1c>
    44ec:	2010      	movs	r0, #16
    44ee:	f7ff ffa1 	bl	4434 <malloc>
    44f2:	6270      	str	r0, [r6, #36]	; 0x24
    44f4:	6044      	str	r4, [r0, #4]
    44f6:	6084      	str	r4, [r0, #8]
    44f8:	6004      	str	r4, [r0, #0]
    44fa:	60c4      	str	r4, [r0, #12]
    44fc:	2d00      	cmp	r5, #0
    44fe:	d007      	beq.n	4510 <_Bfree+0x30>
    4500:	6a73      	ldr	r3, [r6, #36]	; 0x24
    4502:	686a      	ldr	r2, [r5, #4]
    4504:	68db      	ldr	r3, [r3, #12]
    4506:	0092      	lsls	r2, r2, #2
    4508:	189b      	adds	r3, r3, r2
    450a:	681a      	ldr	r2, [r3, #0]
    450c:	602a      	str	r2, [r5, #0]
    450e:	601d      	str	r5, [r3, #0]
    4510:	bd70      	pop	{r4, r5, r6, pc}

00004512 <__multadd>:
    4512:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    4514:	001e      	movs	r6, r3
    4516:	2314      	movs	r3, #20
    4518:	469c      	mov	ip, r3
    451a:	0007      	movs	r7, r0
    451c:	000c      	movs	r4, r1
    451e:	2000      	movs	r0, #0
    4520:	690d      	ldr	r5, [r1, #16]
    4522:	448c      	add	ip, r1
    4524:	4663      	mov	r3, ip
    4526:	8819      	ldrh	r1, [r3, #0]
    4528:	681b      	ldr	r3, [r3, #0]
    452a:	4351      	muls	r1, r2
    452c:	0c1b      	lsrs	r3, r3, #16
    452e:	4353      	muls	r3, r2
    4530:	1989      	adds	r1, r1, r6
    4532:	0c0e      	lsrs	r6, r1, #16
    4534:	199b      	adds	r3, r3, r6
    4536:	b289      	uxth	r1, r1
    4538:	0c1e      	lsrs	r6, r3, #16
    453a:	041b      	lsls	r3, r3, #16
    453c:	185b      	adds	r3, r3, r1
    453e:	4661      	mov	r1, ip
    4540:	3001      	adds	r0, #1
    4542:	c108      	stmia	r1!, {r3}
    4544:	468c      	mov	ip, r1
    4546:	4285      	cmp	r5, r0
    4548:	dcec      	bgt.n	4524 <__multadd+0x12>
    454a:	2e00      	cmp	r6, #0
    454c:	d01b      	beq.n	4586 <__multadd+0x74>
    454e:	68a3      	ldr	r3, [r4, #8]
    4550:	429d      	cmp	r5, r3
    4552:	db12      	blt.n	457a <__multadd+0x68>
    4554:	6863      	ldr	r3, [r4, #4]
    4556:	0038      	movs	r0, r7
    4558:	1c59      	adds	r1, r3, #1
    455a:	f7ff ff89 	bl	4470 <_Balloc>
    455e:	0021      	movs	r1, r4
    4560:	6923      	ldr	r3, [r4, #16]
    4562:	9001      	str	r0, [sp, #4]
    4564:	1c9a      	adds	r2, r3, #2
    4566:	0092      	lsls	r2, r2, #2
    4568:	310c      	adds	r1, #12
    456a:	300c      	adds	r0, #12
    456c:	f7ff ff77 	bl	445e <memcpy>
    4570:	0021      	movs	r1, r4
    4572:	0038      	movs	r0, r7
    4574:	f7ff ffb4 	bl	44e0 <_Bfree>
    4578:	9c01      	ldr	r4, [sp, #4]
    457a:	1d2b      	adds	r3, r5, #4
    457c:	009b      	lsls	r3, r3, #2
    457e:	18e3      	adds	r3, r4, r3
    4580:	3501      	adds	r5, #1
    4582:	605e      	str	r6, [r3, #4]
    4584:	6125      	str	r5, [r4, #16]
    4586:	0020      	movs	r0, r4
    4588:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0000458a <__hi0bits>:
    458a:	0003      	movs	r3, r0
    458c:	0c02      	lsrs	r2, r0, #16
    458e:	2000      	movs	r0, #0
    4590:	4282      	cmp	r2, r0
    4592:	d101      	bne.n	4598 <__hi0bits+0xe>
    4594:	041b      	lsls	r3, r3, #16
    4596:	3010      	adds	r0, #16
    4598:	0e1a      	lsrs	r2, r3, #24
    459a:	d101      	bne.n	45a0 <__hi0bits+0x16>
    459c:	3008      	adds	r0, #8
    459e:	021b      	lsls	r3, r3, #8
    45a0:	0f1a      	lsrs	r2, r3, #28
    45a2:	d101      	bne.n	45a8 <__hi0bits+0x1e>
    45a4:	3004      	adds	r0, #4
    45a6:	011b      	lsls	r3, r3, #4
    45a8:	0f9a      	lsrs	r2, r3, #30
    45aa:	d101      	bne.n	45b0 <__hi0bits+0x26>
    45ac:	3002      	adds	r0, #2
    45ae:	009b      	lsls	r3, r3, #2
    45b0:	2b00      	cmp	r3, #0
    45b2:	db03      	blt.n	45bc <__hi0bits+0x32>
    45b4:	3001      	adds	r0, #1
    45b6:	005b      	lsls	r3, r3, #1
    45b8:	d400      	bmi.n	45bc <__hi0bits+0x32>
    45ba:	2020      	movs	r0, #32
    45bc:	4770      	bx	lr

000045be <__lo0bits>:
    45be:	2207      	movs	r2, #7
    45c0:	6803      	ldr	r3, [r0, #0]
    45c2:	b510      	push	{r4, lr}
    45c4:	0001      	movs	r1, r0
    45c6:	401a      	ands	r2, r3
    45c8:	d00d      	beq.n	45e6 <__lo0bits+0x28>
    45ca:	2401      	movs	r4, #1
    45cc:	2000      	movs	r0, #0
    45ce:	4223      	tst	r3, r4
    45d0:	d105      	bne.n	45de <__lo0bits+0x20>
    45d2:	3002      	adds	r0, #2
    45d4:	4203      	tst	r3, r0
    45d6:	d003      	beq.n	45e0 <__lo0bits+0x22>
    45d8:	40e3      	lsrs	r3, r4
    45da:	0020      	movs	r0, r4
    45dc:	600b      	str	r3, [r1, #0]
    45de:	bd10      	pop	{r4, pc}
    45e0:	089b      	lsrs	r3, r3, #2
    45e2:	600b      	str	r3, [r1, #0]
    45e4:	e7fb      	b.n	45de <__lo0bits+0x20>
    45e6:	b29c      	uxth	r4, r3
    45e8:	0010      	movs	r0, r2
    45ea:	2c00      	cmp	r4, #0
    45ec:	d101      	bne.n	45f2 <__lo0bits+0x34>
    45ee:	2010      	movs	r0, #16
    45f0:	0c1b      	lsrs	r3, r3, #16
    45f2:	b2da      	uxtb	r2, r3
    45f4:	2a00      	cmp	r2, #0
    45f6:	d101      	bne.n	45fc <__lo0bits+0x3e>
    45f8:	3008      	adds	r0, #8
    45fa:	0a1b      	lsrs	r3, r3, #8
    45fc:	071a      	lsls	r2, r3, #28
    45fe:	d101      	bne.n	4604 <__lo0bits+0x46>
    4600:	3004      	adds	r0, #4
    4602:	091b      	lsrs	r3, r3, #4
    4604:	079a      	lsls	r2, r3, #30
    4606:	d101      	bne.n	460c <__lo0bits+0x4e>
    4608:	3002      	adds	r0, #2
    460a:	089b      	lsrs	r3, r3, #2
    460c:	07da      	lsls	r2, r3, #31
    460e:	d4e8      	bmi.n	45e2 <__lo0bits+0x24>
    4610:	085b      	lsrs	r3, r3, #1
    4612:	d001      	beq.n	4618 <__lo0bits+0x5a>
    4614:	3001      	adds	r0, #1
    4616:	e7e4      	b.n	45e2 <__lo0bits+0x24>
    4618:	2020      	movs	r0, #32
    461a:	e7e0      	b.n	45de <__lo0bits+0x20>

0000461c <__i2b>:
    461c:	b510      	push	{r4, lr}
    461e:	000c      	movs	r4, r1
    4620:	2101      	movs	r1, #1
    4622:	f7ff ff25 	bl	4470 <_Balloc>
    4626:	2301      	movs	r3, #1
    4628:	6144      	str	r4, [r0, #20]
    462a:	6103      	str	r3, [r0, #16]
    462c:	bd10      	pop	{r4, pc}

0000462e <__multiply>:
    462e:	b5f0      	push	{r4, r5, r6, r7, lr}
    4630:	690b      	ldr	r3, [r1, #16]
    4632:	0015      	movs	r5, r2
    4634:	6912      	ldr	r2, [r2, #16]
    4636:	b089      	sub	sp, #36	; 0x24
    4638:	000c      	movs	r4, r1
    463a:	4293      	cmp	r3, r2
    463c:	da01      	bge.n	4642 <__multiply+0x14>
    463e:	002c      	movs	r4, r5
    4640:	000d      	movs	r5, r1
    4642:	6927      	ldr	r7, [r4, #16]
    4644:	692e      	ldr	r6, [r5, #16]
    4646:	68a2      	ldr	r2, [r4, #8]
    4648:	19bb      	adds	r3, r7, r6
    464a:	6861      	ldr	r1, [r4, #4]
    464c:	9301      	str	r3, [sp, #4]
    464e:	4293      	cmp	r3, r2
    4650:	dd00      	ble.n	4654 <__multiply+0x26>
    4652:	3101      	adds	r1, #1
    4654:	f7ff ff0c 	bl	4470 <_Balloc>
    4658:	0003      	movs	r3, r0
    465a:	3314      	adds	r3, #20
    465c:	9300      	str	r3, [sp, #0]
    465e:	9a00      	ldr	r2, [sp, #0]
    4660:	19bb      	adds	r3, r7, r6
    4662:	4694      	mov	ip, r2
    4664:	009b      	lsls	r3, r3, #2
    4666:	449c      	add	ip, r3
    4668:	0013      	movs	r3, r2
    466a:	2200      	movs	r2, #0
    466c:	9004      	str	r0, [sp, #16]
    466e:	4563      	cmp	r3, ip
    4670:	d31c      	bcc.n	46ac <__multiply+0x7e>
    4672:	002a      	movs	r2, r5
    4674:	3414      	adds	r4, #20
    4676:	00bf      	lsls	r7, r7, #2
    4678:	19e3      	adds	r3, r4, r7
    467a:	3214      	adds	r2, #20
    467c:	00b6      	lsls	r6, r6, #2
    467e:	9305      	str	r3, [sp, #20]
    4680:	1993      	adds	r3, r2, r6
    4682:	9402      	str	r4, [sp, #8]
    4684:	9306      	str	r3, [sp, #24]
    4686:	9b06      	ldr	r3, [sp, #24]
    4688:	429a      	cmp	r2, r3
    468a:	d311      	bcc.n	46b0 <__multiply+0x82>
    468c:	9b01      	ldr	r3, [sp, #4]
    468e:	2b00      	cmp	r3, #0
    4690:	dd06      	ble.n	46a0 <__multiply+0x72>
    4692:	2304      	movs	r3, #4
    4694:	425b      	negs	r3, r3
    4696:	449c      	add	ip, r3
    4698:	4663      	mov	r3, ip
    469a:	681b      	ldr	r3, [r3, #0]
    469c:	2b00      	cmp	r3, #0
    469e:	d051      	beq.n	4744 <__multiply+0x116>
    46a0:	9b04      	ldr	r3, [sp, #16]
    46a2:	9a01      	ldr	r2, [sp, #4]
    46a4:	0018      	movs	r0, r3
    46a6:	611a      	str	r2, [r3, #16]
    46a8:	b009      	add	sp, #36	; 0x24
    46aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    46ac:	c304      	stmia	r3!, {r2}
    46ae:	e7de      	b.n	466e <__multiply+0x40>
    46b0:	8814      	ldrh	r4, [r2, #0]
    46b2:	2c00      	cmp	r4, #0
    46b4:	d01e      	beq.n	46f4 <__multiply+0xc6>
    46b6:	2600      	movs	r6, #0
    46b8:	9d00      	ldr	r5, [sp, #0]
    46ba:	9f02      	ldr	r7, [sp, #8]
    46bc:	cf01      	ldmia	r7!, {r0}
    46be:	9507      	str	r5, [sp, #28]
    46c0:	cd08      	ldmia	r5!, {r3}
    46c2:	9303      	str	r3, [sp, #12]
    46c4:	b283      	uxth	r3, r0
    46c6:	4363      	muls	r3, r4
    46c8:	0019      	movs	r1, r3
    46ca:	466b      	mov	r3, sp
    46cc:	0c00      	lsrs	r0, r0, #16
    46ce:	899b      	ldrh	r3, [r3, #12]
    46d0:	4360      	muls	r0, r4
    46d2:	18cb      	adds	r3, r1, r3
    46d4:	9903      	ldr	r1, [sp, #12]
    46d6:	199b      	adds	r3, r3, r6
    46d8:	0c09      	lsrs	r1, r1, #16
    46da:	1841      	adds	r1, r0, r1
    46dc:	0c18      	lsrs	r0, r3, #16
    46de:	1809      	adds	r1, r1, r0
    46e0:	0c0e      	lsrs	r6, r1, #16
    46e2:	b29b      	uxth	r3, r3
    46e4:	0409      	lsls	r1, r1, #16
    46e6:	430b      	orrs	r3, r1
    46e8:	9907      	ldr	r1, [sp, #28]
    46ea:	600b      	str	r3, [r1, #0]
    46ec:	9b05      	ldr	r3, [sp, #20]
    46ee:	42bb      	cmp	r3, r7
    46f0:	d8e4      	bhi.n	46bc <__multiply+0x8e>
    46f2:	602e      	str	r6, [r5, #0]
    46f4:	6813      	ldr	r3, [r2, #0]
    46f6:	0c1b      	lsrs	r3, r3, #16
    46f8:	9303      	str	r3, [sp, #12]
    46fa:	d01e      	beq.n	473a <__multiply+0x10c>
    46fc:	2600      	movs	r6, #0
    46fe:	9b00      	ldr	r3, [sp, #0]
    4700:	9c02      	ldr	r4, [sp, #8]
    4702:	681b      	ldr	r3, [r3, #0]
    4704:	9800      	ldr	r0, [sp, #0]
    4706:	0007      	movs	r7, r0
    4708:	8821      	ldrh	r1, [r4, #0]
    470a:	9d03      	ldr	r5, [sp, #12]
    470c:	b29b      	uxth	r3, r3
    470e:	4369      	muls	r1, r5
    4710:	c820      	ldmia	r0!, {r5}
    4712:	0c2d      	lsrs	r5, r5, #16
    4714:	1949      	adds	r1, r1, r5
    4716:	198e      	adds	r6, r1, r6
    4718:	0431      	lsls	r1, r6, #16
    471a:	430b      	orrs	r3, r1
    471c:	603b      	str	r3, [r7, #0]
    471e:	cc08      	ldmia	r4!, {r3}
    4720:	9903      	ldr	r1, [sp, #12]
    4722:	0c1b      	lsrs	r3, r3, #16
    4724:	434b      	muls	r3, r1
    4726:	6879      	ldr	r1, [r7, #4]
    4728:	0c36      	lsrs	r6, r6, #16
    472a:	b289      	uxth	r1, r1
    472c:	185b      	adds	r3, r3, r1
    472e:	9905      	ldr	r1, [sp, #20]
    4730:	199b      	adds	r3, r3, r6
    4732:	0c1e      	lsrs	r6, r3, #16
    4734:	42a1      	cmp	r1, r4
    4736:	d8e6      	bhi.n	4706 <__multiply+0xd8>
    4738:	6003      	str	r3, [r0, #0]
    473a:	9b00      	ldr	r3, [sp, #0]
    473c:	3204      	adds	r2, #4
    473e:	3304      	adds	r3, #4
    4740:	9300      	str	r3, [sp, #0]
    4742:	e7a0      	b.n	4686 <__multiply+0x58>
    4744:	9b01      	ldr	r3, [sp, #4]
    4746:	3b01      	subs	r3, #1
    4748:	9301      	str	r3, [sp, #4]
    474a:	e79f      	b.n	468c <__multiply+0x5e>

0000474c <__pow5mult>:
    474c:	2303      	movs	r3, #3
    474e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    4750:	4013      	ands	r3, r2
    4752:	0005      	movs	r5, r0
    4754:	000e      	movs	r6, r1
    4756:	0014      	movs	r4, r2
    4758:	2b00      	cmp	r3, #0
    475a:	d008      	beq.n	476e <__pow5mult+0x22>
    475c:	4922      	ldr	r1, [pc, #136]	; (47e8 <__pow5mult+0x9c>)
    475e:	3b01      	subs	r3, #1
    4760:	009a      	lsls	r2, r3, #2
    4762:	5852      	ldr	r2, [r2, r1]
    4764:	2300      	movs	r3, #0
    4766:	0031      	movs	r1, r6
    4768:	f7ff fed3 	bl	4512 <__multadd>
    476c:	0006      	movs	r6, r0
    476e:	10a3      	asrs	r3, r4, #2
    4770:	9301      	str	r3, [sp, #4]
    4772:	d036      	beq.n	47e2 <__pow5mult+0x96>
    4774:	6a6c      	ldr	r4, [r5, #36]	; 0x24
    4776:	2c00      	cmp	r4, #0
    4778:	d107      	bne.n	478a <__pow5mult+0x3e>
    477a:	2010      	movs	r0, #16
    477c:	f7ff fe5a 	bl	4434 <malloc>
    4780:	6268      	str	r0, [r5, #36]	; 0x24
    4782:	6044      	str	r4, [r0, #4]
    4784:	6084      	str	r4, [r0, #8]
    4786:	6004      	str	r4, [r0, #0]
    4788:	60c4      	str	r4, [r0, #12]
    478a:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    478c:	68bc      	ldr	r4, [r7, #8]
    478e:	2c00      	cmp	r4, #0
    4790:	d107      	bne.n	47a2 <__pow5mult+0x56>
    4792:	4916      	ldr	r1, [pc, #88]	; (47ec <__pow5mult+0xa0>)
    4794:	0028      	movs	r0, r5
    4796:	f7ff ff41 	bl	461c <__i2b>
    479a:	2300      	movs	r3, #0
    479c:	0004      	movs	r4, r0
    479e:	60b8      	str	r0, [r7, #8]
    47a0:	6003      	str	r3, [r0, #0]
    47a2:	2201      	movs	r2, #1
    47a4:	9b01      	ldr	r3, [sp, #4]
    47a6:	4213      	tst	r3, r2
    47a8:	d00a      	beq.n	47c0 <__pow5mult+0x74>
    47aa:	0031      	movs	r1, r6
    47ac:	0022      	movs	r2, r4
    47ae:	0028      	movs	r0, r5
    47b0:	f7ff ff3d 	bl	462e <__multiply>
    47b4:	0007      	movs	r7, r0
    47b6:	0031      	movs	r1, r6
    47b8:	0028      	movs	r0, r5
    47ba:	f7ff fe91 	bl	44e0 <_Bfree>
    47be:	003e      	movs	r6, r7
    47c0:	9b01      	ldr	r3, [sp, #4]
    47c2:	105b      	asrs	r3, r3, #1
    47c4:	9301      	str	r3, [sp, #4]
    47c6:	d00c      	beq.n	47e2 <__pow5mult+0x96>
    47c8:	6820      	ldr	r0, [r4, #0]
    47ca:	2800      	cmp	r0, #0
    47cc:	d107      	bne.n	47de <__pow5mult+0x92>
    47ce:	0022      	movs	r2, r4
    47d0:	0021      	movs	r1, r4
    47d2:	0028      	movs	r0, r5
    47d4:	f7ff ff2b 	bl	462e <__multiply>
    47d8:	2300      	movs	r3, #0
    47da:	6020      	str	r0, [r4, #0]
    47dc:	6003      	str	r3, [r0, #0]
    47de:	0004      	movs	r4, r0
    47e0:	e7df      	b.n	47a2 <__pow5mult+0x56>
    47e2:	0030      	movs	r0, r6
    47e4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    47e6:	46c0      	nop			; (mov r8, r8)
    47e8:	00005c98 	.word	0x00005c98
    47ec:	00000271 	.word	0x00000271

000047f0 <__lshift>:
    47f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    47f2:	000d      	movs	r5, r1
    47f4:	0017      	movs	r7, r2
    47f6:	692b      	ldr	r3, [r5, #16]
    47f8:	1154      	asrs	r4, r2, #5
    47fa:	b085      	sub	sp, #20
    47fc:	18e3      	adds	r3, r4, r3
    47fe:	9302      	str	r3, [sp, #8]
    4800:	3301      	adds	r3, #1
    4802:	9301      	str	r3, [sp, #4]
    4804:	6849      	ldr	r1, [r1, #4]
    4806:	68ab      	ldr	r3, [r5, #8]
    4808:	9003      	str	r0, [sp, #12]
    480a:	9a01      	ldr	r2, [sp, #4]
    480c:	4293      	cmp	r3, r2
    480e:	db34      	blt.n	487a <__lshift+0x8a>
    4810:	9803      	ldr	r0, [sp, #12]
    4812:	f7ff fe2d 	bl	4470 <_Balloc>
    4816:	2300      	movs	r3, #0
    4818:	0002      	movs	r2, r0
    481a:	0006      	movs	r6, r0
    481c:	0019      	movs	r1, r3
    481e:	3214      	adds	r2, #20
    4820:	42a3      	cmp	r3, r4
    4822:	db2d      	blt.n	4880 <__lshift+0x90>
    4824:	43e3      	mvns	r3, r4
    4826:	17db      	asrs	r3, r3, #31
    4828:	401c      	ands	r4, r3
    482a:	002b      	movs	r3, r5
    482c:	211f      	movs	r1, #31
    482e:	00a4      	lsls	r4, r4, #2
    4830:	1914      	adds	r4, r2, r4
    4832:	692a      	ldr	r2, [r5, #16]
    4834:	3314      	adds	r3, #20
    4836:	0092      	lsls	r2, r2, #2
    4838:	189a      	adds	r2, r3, r2
    483a:	400f      	ands	r7, r1
    483c:	d024      	beq.n	4888 <__lshift+0x98>
    483e:	3101      	adds	r1, #1
    4840:	1bc9      	subs	r1, r1, r7
    4842:	468c      	mov	ip, r1
    4844:	2100      	movs	r1, #0
    4846:	6818      	ldr	r0, [r3, #0]
    4848:	40b8      	lsls	r0, r7
    484a:	4301      	orrs	r1, r0
    484c:	4660      	mov	r0, ip
    484e:	6021      	str	r1, [r4, #0]
    4850:	cb02      	ldmia	r3!, {r1}
    4852:	3404      	adds	r4, #4
    4854:	40c1      	lsrs	r1, r0
    4856:	429a      	cmp	r2, r3
    4858:	d8f5      	bhi.n	4846 <__lshift+0x56>
    485a:	6021      	str	r1, [r4, #0]
    485c:	2900      	cmp	r1, #0
    485e:	d002      	beq.n	4866 <__lshift+0x76>
    4860:	9b02      	ldr	r3, [sp, #8]
    4862:	3302      	adds	r3, #2
    4864:	9301      	str	r3, [sp, #4]
    4866:	9b01      	ldr	r3, [sp, #4]
    4868:	9803      	ldr	r0, [sp, #12]
    486a:	3b01      	subs	r3, #1
    486c:	6133      	str	r3, [r6, #16]
    486e:	0029      	movs	r1, r5
    4870:	f7ff fe36 	bl	44e0 <_Bfree>
    4874:	0030      	movs	r0, r6
    4876:	b005      	add	sp, #20
    4878:	bdf0      	pop	{r4, r5, r6, r7, pc}
    487a:	3101      	adds	r1, #1
    487c:	005b      	lsls	r3, r3, #1
    487e:	e7c4      	b.n	480a <__lshift+0x1a>
    4880:	0098      	lsls	r0, r3, #2
    4882:	5011      	str	r1, [r2, r0]
    4884:	3301      	adds	r3, #1
    4886:	e7cb      	b.n	4820 <__lshift+0x30>
    4888:	cb02      	ldmia	r3!, {r1}
    488a:	c402      	stmia	r4!, {r1}
    488c:	429a      	cmp	r2, r3
    488e:	d8fb      	bhi.n	4888 <__lshift+0x98>
    4890:	e7e9      	b.n	4866 <__lshift+0x76>

00004892 <__mcmp>:
    4892:	690a      	ldr	r2, [r1, #16]
    4894:	6903      	ldr	r3, [r0, #16]
    4896:	b530      	push	{r4, r5, lr}
    4898:	1a9b      	subs	r3, r3, r2
    489a:	d10e      	bne.n	48ba <__mcmp+0x28>
    489c:	0092      	lsls	r2, r2, #2
    489e:	3014      	adds	r0, #20
    48a0:	3114      	adds	r1, #20
    48a2:	1884      	adds	r4, r0, r2
    48a4:	1889      	adds	r1, r1, r2
    48a6:	3c04      	subs	r4, #4
    48a8:	3904      	subs	r1, #4
    48aa:	6822      	ldr	r2, [r4, #0]
    48ac:	680d      	ldr	r5, [r1, #0]
    48ae:	42aa      	cmp	r2, r5
    48b0:	d005      	beq.n	48be <__mcmp+0x2c>
    48b2:	42aa      	cmp	r2, r5
    48b4:	4192      	sbcs	r2, r2
    48b6:	2301      	movs	r3, #1
    48b8:	4313      	orrs	r3, r2
    48ba:	0018      	movs	r0, r3
    48bc:	bd30      	pop	{r4, r5, pc}
    48be:	42a0      	cmp	r0, r4
    48c0:	d3f1      	bcc.n	48a6 <__mcmp+0x14>
    48c2:	e7fa      	b.n	48ba <__mcmp+0x28>

000048c4 <__mdiff>:
    48c4:	b5f0      	push	{r4, r5, r6, r7, lr}
    48c6:	000d      	movs	r5, r1
    48c8:	b085      	sub	sp, #20
    48ca:	0007      	movs	r7, r0
    48cc:	0011      	movs	r1, r2
    48ce:	0028      	movs	r0, r5
    48d0:	0014      	movs	r4, r2
    48d2:	f7ff ffde 	bl	4892 <__mcmp>
    48d6:	1e06      	subs	r6, r0, #0
    48d8:	d108      	bne.n	48ec <__mdiff+0x28>
    48da:	0001      	movs	r1, r0
    48dc:	0038      	movs	r0, r7
    48de:	f7ff fdc7 	bl	4470 <_Balloc>
    48e2:	2301      	movs	r3, #1
    48e4:	6146      	str	r6, [r0, #20]
    48e6:	6103      	str	r3, [r0, #16]
    48e8:	b005      	add	sp, #20
    48ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    48ec:	2301      	movs	r3, #1
    48ee:	9301      	str	r3, [sp, #4]
    48f0:	2800      	cmp	r0, #0
    48f2:	db04      	blt.n	48fe <__mdiff+0x3a>
    48f4:	0023      	movs	r3, r4
    48f6:	002c      	movs	r4, r5
    48f8:	001d      	movs	r5, r3
    48fa:	2300      	movs	r3, #0
    48fc:	9301      	str	r3, [sp, #4]
    48fe:	6861      	ldr	r1, [r4, #4]
    4900:	0038      	movs	r0, r7
    4902:	f7ff fdb5 	bl	4470 <_Balloc>
    4906:	002f      	movs	r7, r5
    4908:	2200      	movs	r2, #0
    490a:	9b01      	ldr	r3, [sp, #4]
    490c:	6926      	ldr	r6, [r4, #16]
    490e:	60c3      	str	r3, [r0, #12]
    4910:	3414      	adds	r4, #20
    4912:	00b3      	lsls	r3, r6, #2
    4914:	18e3      	adds	r3, r4, r3
    4916:	9302      	str	r3, [sp, #8]
    4918:	692b      	ldr	r3, [r5, #16]
    491a:	3714      	adds	r7, #20
    491c:	009b      	lsls	r3, r3, #2
    491e:	18fb      	adds	r3, r7, r3
    4920:	9303      	str	r3, [sp, #12]
    4922:	0003      	movs	r3, r0
    4924:	4694      	mov	ip, r2
    4926:	3314      	adds	r3, #20
    4928:	cc20      	ldmia	r4!, {r5}
    492a:	cf04      	ldmia	r7!, {r2}
    492c:	9201      	str	r2, [sp, #4]
    492e:	b2aa      	uxth	r2, r5
    4930:	4494      	add	ip, r2
    4932:	466a      	mov	r2, sp
    4934:	4661      	mov	r1, ip
    4936:	8892      	ldrh	r2, [r2, #4]
    4938:	0c2d      	lsrs	r5, r5, #16
    493a:	1a8a      	subs	r2, r1, r2
    493c:	9901      	ldr	r1, [sp, #4]
    493e:	0c09      	lsrs	r1, r1, #16
    4940:	1a69      	subs	r1, r5, r1
    4942:	1415      	asrs	r5, r2, #16
    4944:	1949      	adds	r1, r1, r5
    4946:	140d      	asrs	r5, r1, #16
    4948:	b292      	uxth	r2, r2
    494a:	0409      	lsls	r1, r1, #16
    494c:	430a      	orrs	r2, r1
    494e:	601a      	str	r2, [r3, #0]
    4950:	9a03      	ldr	r2, [sp, #12]
    4952:	46ac      	mov	ip, r5
    4954:	3304      	adds	r3, #4
    4956:	42ba      	cmp	r2, r7
    4958:	d8e6      	bhi.n	4928 <__mdiff+0x64>
    495a:	9902      	ldr	r1, [sp, #8]
    495c:	001a      	movs	r2, r3
    495e:	428c      	cmp	r4, r1
    4960:	d305      	bcc.n	496e <__mdiff+0xaa>
    4962:	3a04      	subs	r2, #4
    4964:	6813      	ldr	r3, [r2, #0]
    4966:	2b00      	cmp	r3, #0
    4968:	d00e      	beq.n	4988 <__mdiff+0xc4>
    496a:	6106      	str	r6, [r0, #16]
    496c:	e7bc      	b.n	48e8 <__mdiff+0x24>
    496e:	cc04      	ldmia	r4!, {r2}
    4970:	b291      	uxth	r1, r2
    4972:	4461      	add	r1, ip
    4974:	140d      	asrs	r5, r1, #16
    4976:	0c12      	lsrs	r2, r2, #16
    4978:	1952      	adds	r2, r2, r5
    497a:	1415      	asrs	r5, r2, #16
    497c:	b289      	uxth	r1, r1
    497e:	0412      	lsls	r2, r2, #16
    4980:	430a      	orrs	r2, r1
    4982:	46ac      	mov	ip, r5
    4984:	c304      	stmia	r3!, {r2}
    4986:	e7e8      	b.n	495a <__mdiff+0x96>
    4988:	3e01      	subs	r6, #1
    498a:	e7ea      	b.n	4962 <__mdiff+0x9e>

0000498c <__d2b>:
    498c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    498e:	001d      	movs	r5, r3
    4990:	2101      	movs	r1, #1
    4992:	9f08      	ldr	r7, [sp, #32]
    4994:	0014      	movs	r4, r2
    4996:	f7ff fd6b 	bl	4470 <_Balloc>
    499a:	032b      	lsls	r3, r5, #12
    499c:	006d      	lsls	r5, r5, #1
    499e:	0006      	movs	r6, r0
    49a0:	0b1b      	lsrs	r3, r3, #12
    49a2:	0d6d      	lsrs	r5, r5, #21
    49a4:	d124      	bne.n	49f0 <__d2b+0x64>
    49a6:	9301      	str	r3, [sp, #4]
    49a8:	2c00      	cmp	r4, #0
    49aa:	d027      	beq.n	49fc <__d2b+0x70>
    49ac:	4668      	mov	r0, sp
    49ae:	9400      	str	r4, [sp, #0]
    49b0:	f7ff fe05 	bl	45be <__lo0bits>
    49b4:	9c00      	ldr	r4, [sp, #0]
    49b6:	2800      	cmp	r0, #0
    49b8:	d01e      	beq.n	49f8 <__d2b+0x6c>
    49ba:	9b01      	ldr	r3, [sp, #4]
    49bc:	2120      	movs	r1, #32
    49be:	001a      	movs	r2, r3
    49c0:	1a09      	subs	r1, r1, r0
    49c2:	408a      	lsls	r2, r1
    49c4:	40c3      	lsrs	r3, r0
    49c6:	4322      	orrs	r2, r4
    49c8:	6172      	str	r2, [r6, #20]
    49ca:	9301      	str	r3, [sp, #4]
    49cc:	9c01      	ldr	r4, [sp, #4]
    49ce:	61b4      	str	r4, [r6, #24]
    49d0:	1e63      	subs	r3, r4, #1
    49d2:	419c      	sbcs	r4, r3
    49d4:	3401      	adds	r4, #1
    49d6:	6134      	str	r4, [r6, #16]
    49d8:	2d00      	cmp	r5, #0
    49da:	d018      	beq.n	4a0e <__d2b+0x82>
    49dc:	4b12      	ldr	r3, [pc, #72]	; (4a28 <__d2b+0x9c>)
    49de:	18ed      	adds	r5, r5, r3
    49e0:	2335      	movs	r3, #53	; 0x35
    49e2:	182d      	adds	r5, r5, r0
    49e4:	603d      	str	r5, [r7, #0]
    49e6:	1a18      	subs	r0, r3, r0
    49e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    49ea:	6018      	str	r0, [r3, #0]
    49ec:	0030      	movs	r0, r6
    49ee:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    49f0:	2280      	movs	r2, #128	; 0x80
    49f2:	0352      	lsls	r2, r2, #13
    49f4:	4313      	orrs	r3, r2
    49f6:	e7d6      	b.n	49a6 <__d2b+0x1a>
    49f8:	6174      	str	r4, [r6, #20]
    49fa:	e7e7      	b.n	49cc <__d2b+0x40>
    49fc:	a801      	add	r0, sp, #4
    49fe:	f7ff fdde 	bl	45be <__lo0bits>
    4a02:	2401      	movs	r4, #1
    4a04:	9b01      	ldr	r3, [sp, #4]
    4a06:	6134      	str	r4, [r6, #16]
    4a08:	6173      	str	r3, [r6, #20]
    4a0a:	3020      	adds	r0, #32
    4a0c:	e7e4      	b.n	49d8 <__d2b+0x4c>
    4a0e:	4b07      	ldr	r3, [pc, #28]	; (4a2c <__d2b+0xa0>)
    4a10:	18c0      	adds	r0, r0, r3
    4a12:	4b07      	ldr	r3, [pc, #28]	; (4a30 <__d2b+0xa4>)
    4a14:	6038      	str	r0, [r7, #0]
    4a16:	18e3      	adds	r3, r4, r3
    4a18:	009b      	lsls	r3, r3, #2
    4a1a:	18f3      	adds	r3, r6, r3
    4a1c:	6958      	ldr	r0, [r3, #20]
    4a1e:	f7ff fdb4 	bl	458a <__hi0bits>
    4a22:	0164      	lsls	r4, r4, #5
    4a24:	1a20      	subs	r0, r4, r0
    4a26:	e7df      	b.n	49e8 <__d2b+0x5c>
    4a28:	fffffbcd 	.word	0xfffffbcd
    4a2c:	fffffbce 	.word	0xfffffbce
    4a30:	3fffffff 	.word	0x3fffffff

00004a34 <_calloc_r>:
    4a34:	434a      	muls	r2, r1
    4a36:	b570      	push	{r4, r5, r6, lr}
    4a38:	0011      	movs	r1, r2
    4a3a:	0014      	movs	r4, r2
    4a3c:	f000 f852 	bl	4ae4 <_malloc_r>
    4a40:	1e05      	subs	r5, r0, #0
    4a42:	d003      	beq.n	4a4c <_calloc_r+0x18>
    4a44:	0022      	movs	r2, r4
    4a46:	2100      	movs	r1, #0
    4a48:	f7fe f9a8 	bl	2d9c <memset>
    4a4c:	0028      	movs	r0, r5
    4a4e:	bd70      	pop	{r4, r5, r6, pc}

00004a50 <_free_r>:
    4a50:	b570      	push	{r4, r5, r6, lr}
    4a52:	0005      	movs	r5, r0
    4a54:	2900      	cmp	r1, #0
    4a56:	d010      	beq.n	4a7a <_free_r+0x2a>
    4a58:	1f0c      	subs	r4, r1, #4
    4a5a:	6823      	ldr	r3, [r4, #0]
    4a5c:	2b00      	cmp	r3, #0
    4a5e:	da00      	bge.n	4a62 <_free_r+0x12>
    4a60:	18e4      	adds	r4, r4, r3
    4a62:	0028      	movs	r0, r5
    4a64:	f000 fa38 	bl	4ed8 <__malloc_lock>
    4a68:	4a1d      	ldr	r2, [pc, #116]	; (4ae0 <_free_r+0x90>)
    4a6a:	6813      	ldr	r3, [r2, #0]
    4a6c:	2b00      	cmp	r3, #0
    4a6e:	d105      	bne.n	4a7c <_free_r+0x2c>
    4a70:	6063      	str	r3, [r4, #4]
    4a72:	6014      	str	r4, [r2, #0]
    4a74:	0028      	movs	r0, r5
    4a76:	f000 fa30 	bl	4eda <__malloc_unlock>
    4a7a:	bd70      	pop	{r4, r5, r6, pc}
    4a7c:	42a3      	cmp	r3, r4
    4a7e:	d909      	bls.n	4a94 <_free_r+0x44>
    4a80:	6821      	ldr	r1, [r4, #0]
    4a82:	1860      	adds	r0, r4, r1
    4a84:	4283      	cmp	r3, r0
    4a86:	d1f3      	bne.n	4a70 <_free_r+0x20>
    4a88:	6818      	ldr	r0, [r3, #0]
    4a8a:	685b      	ldr	r3, [r3, #4]
    4a8c:	1841      	adds	r1, r0, r1
    4a8e:	6021      	str	r1, [r4, #0]
    4a90:	e7ee      	b.n	4a70 <_free_r+0x20>
    4a92:	0013      	movs	r3, r2
    4a94:	685a      	ldr	r2, [r3, #4]
    4a96:	2a00      	cmp	r2, #0
    4a98:	d001      	beq.n	4a9e <_free_r+0x4e>
    4a9a:	42a2      	cmp	r2, r4
    4a9c:	d9f9      	bls.n	4a92 <_free_r+0x42>
    4a9e:	6819      	ldr	r1, [r3, #0]
    4aa0:	1858      	adds	r0, r3, r1
    4aa2:	42a0      	cmp	r0, r4
    4aa4:	d10b      	bne.n	4abe <_free_r+0x6e>
    4aa6:	6820      	ldr	r0, [r4, #0]
    4aa8:	1809      	adds	r1, r1, r0
    4aaa:	1858      	adds	r0, r3, r1
    4aac:	6019      	str	r1, [r3, #0]
    4aae:	4282      	cmp	r2, r0
    4ab0:	d1e0      	bne.n	4a74 <_free_r+0x24>
    4ab2:	6810      	ldr	r0, [r2, #0]
    4ab4:	6852      	ldr	r2, [r2, #4]
    4ab6:	1841      	adds	r1, r0, r1
    4ab8:	6019      	str	r1, [r3, #0]
    4aba:	605a      	str	r2, [r3, #4]
    4abc:	e7da      	b.n	4a74 <_free_r+0x24>
    4abe:	42a0      	cmp	r0, r4
    4ac0:	d902      	bls.n	4ac8 <_free_r+0x78>
    4ac2:	230c      	movs	r3, #12
    4ac4:	602b      	str	r3, [r5, #0]
    4ac6:	e7d5      	b.n	4a74 <_free_r+0x24>
    4ac8:	6821      	ldr	r1, [r4, #0]
    4aca:	1860      	adds	r0, r4, r1
    4acc:	4282      	cmp	r2, r0
    4ace:	d103      	bne.n	4ad8 <_free_r+0x88>
    4ad0:	6810      	ldr	r0, [r2, #0]
    4ad2:	6852      	ldr	r2, [r2, #4]
    4ad4:	1841      	adds	r1, r0, r1
    4ad6:	6021      	str	r1, [r4, #0]
    4ad8:	6062      	str	r2, [r4, #4]
    4ada:	605c      	str	r4, [r3, #4]
    4adc:	e7ca      	b.n	4a74 <_free_r+0x24>
    4ade:	46c0      	nop			; (mov r8, r8)
    4ae0:	2000033c 	.word	0x2000033c

00004ae4 <_malloc_r>:
    4ae4:	2303      	movs	r3, #3
    4ae6:	b570      	push	{r4, r5, r6, lr}
    4ae8:	1ccd      	adds	r5, r1, #3
    4aea:	439d      	bics	r5, r3
    4aec:	3508      	adds	r5, #8
    4aee:	0006      	movs	r6, r0
    4af0:	2d0c      	cmp	r5, #12
    4af2:	d21e      	bcs.n	4b32 <_malloc_r+0x4e>
    4af4:	250c      	movs	r5, #12
    4af6:	42a9      	cmp	r1, r5
    4af8:	d81d      	bhi.n	4b36 <_malloc_r+0x52>
    4afa:	0030      	movs	r0, r6
    4afc:	f000 f9ec 	bl	4ed8 <__malloc_lock>
    4b00:	4a25      	ldr	r2, [pc, #148]	; (4b98 <_malloc_r+0xb4>)
    4b02:	6814      	ldr	r4, [r2, #0]
    4b04:	0021      	movs	r1, r4
    4b06:	2900      	cmp	r1, #0
    4b08:	d119      	bne.n	4b3e <_malloc_r+0x5a>
    4b0a:	4c24      	ldr	r4, [pc, #144]	; (4b9c <_malloc_r+0xb8>)
    4b0c:	6823      	ldr	r3, [r4, #0]
    4b0e:	2b00      	cmp	r3, #0
    4b10:	d103      	bne.n	4b1a <_malloc_r+0x36>
    4b12:	0030      	movs	r0, r6
    4b14:	f000 f9aa 	bl	4e6c <_sbrk_r>
    4b18:	6020      	str	r0, [r4, #0]
    4b1a:	0029      	movs	r1, r5
    4b1c:	0030      	movs	r0, r6
    4b1e:	f000 f9a5 	bl	4e6c <_sbrk_r>
    4b22:	1c43      	adds	r3, r0, #1
    4b24:	d12c      	bne.n	4b80 <_malloc_r+0x9c>
    4b26:	230c      	movs	r3, #12
    4b28:	0030      	movs	r0, r6
    4b2a:	6033      	str	r3, [r6, #0]
    4b2c:	f000 f9d5 	bl	4eda <__malloc_unlock>
    4b30:	e003      	b.n	4b3a <_malloc_r+0x56>
    4b32:	2d00      	cmp	r5, #0
    4b34:	dadf      	bge.n	4af6 <_malloc_r+0x12>
    4b36:	230c      	movs	r3, #12
    4b38:	6033      	str	r3, [r6, #0]
    4b3a:	2000      	movs	r0, #0
    4b3c:	bd70      	pop	{r4, r5, r6, pc}
    4b3e:	680b      	ldr	r3, [r1, #0]
    4b40:	1b5b      	subs	r3, r3, r5
    4b42:	d41a      	bmi.n	4b7a <_malloc_r+0x96>
    4b44:	2b0b      	cmp	r3, #11
    4b46:	d903      	bls.n	4b50 <_malloc_r+0x6c>
    4b48:	600b      	str	r3, [r1, #0]
    4b4a:	18cc      	adds	r4, r1, r3
    4b4c:	6025      	str	r5, [r4, #0]
    4b4e:	e003      	b.n	4b58 <_malloc_r+0x74>
    4b50:	428c      	cmp	r4, r1
    4b52:	d10e      	bne.n	4b72 <_malloc_r+0x8e>
    4b54:	6863      	ldr	r3, [r4, #4]
    4b56:	6013      	str	r3, [r2, #0]
    4b58:	0030      	movs	r0, r6
    4b5a:	f000 f9be 	bl	4eda <__malloc_unlock>
    4b5e:	0020      	movs	r0, r4
    4b60:	2207      	movs	r2, #7
    4b62:	300b      	adds	r0, #11
    4b64:	1d23      	adds	r3, r4, #4
    4b66:	4390      	bics	r0, r2
    4b68:	1ac3      	subs	r3, r0, r3
    4b6a:	d0e7      	beq.n	4b3c <_malloc_r+0x58>
    4b6c:	425a      	negs	r2, r3
    4b6e:	50e2      	str	r2, [r4, r3]
    4b70:	e7e4      	b.n	4b3c <_malloc_r+0x58>
    4b72:	684b      	ldr	r3, [r1, #4]
    4b74:	6063      	str	r3, [r4, #4]
    4b76:	000c      	movs	r4, r1
    4b78:	e7ee      	b.n	4b58 <_malloc_r+0x74>
    4b7a:	000c      	movs	r4, r1
    4b7c:	6849      	ldr	r1, [r1, #4]
    4b7e:	e7c2      	b.n	4b06 <_malloc_r+0x22>
    4b80:	2303      	movs	r3, #3
    4b82:	1cc4      	adds	r4, r0, #3
    4b84:	439c      	bics	r4, r3
    4b86:	42a0      	cmp	r0, r4
    4b88:	d0e0      	beq.n	4b4c <_malloc_r+0x68>
    4b8a:	1a21      	subs	r1, r4, r0
    4b8c:	0030      	movs	r0, r6
    4b8e:	f000 f96d 	bl	4e6c <_sbrk_r>
    4b92:	1c43      	adds	r3, r0, #1
    4b94:	d1da      	bne.n	4b4c <_malloc_r+0x68>
    4b96:	e7c6      	b.n	4b26 <_malloc_r+0x42>
    4b98:	2000033c 	.word	0x2000033c
    4b9c:	20000340 	.word	0x20000340

00004ba0 <__ssputs_r>:
    4ba0:	b5f0      	push	{r4, r5, r6, r7, lr}
    4ba2:	688e      	ldr	r6, [r1, #8]
    4ba4:	b085      	sub	sp, #20
    4ba6:	0007      	movs	r7, r0
    4ba8:	000c      	movs	r4, r1
    4baa:	9203      	str	r2, [sp, #12]
    4bac:	9301      	str	r3, [sp, #4]
    4bae:	429e      	cmp	r6, r3
    4bb0:	d839      	bhi.n	4c26 <__ssputs_r+0x86>
    4bb2:	2390      	movs	r3, #144	; 0x90
    4bb4:	898a      	ldrh	r2, [r1, #12]
    4bb6:	00db      	lsls	r3, r3, #3
    4bb8:	421a      	tst	r2, r3
    4bba:	d034      	beq.n	4c26 <__ssputs_r+0x86>
    4bbc:	2503      	movs	r5, #3
    4bbe:	6909      	ldr	r1, [r1, #16]
    4bc0:	6823      	ldr	r3, [r4, #0]
    4bc2:	1a5b      	subs	r3, r3, r1
    4bc4:	9302      	str	r3, [sp, #8]
    4bc6:	6963      	ldr	r3, [r4, #20]
    4bc8:	9802      	ldr	r0, [sp, #8]
    4bca:	435d      	muls	r5, r3
    4bcc:	0feb      	lsrs	r3, r5, #31
    4bce:	195d      	adds	r5, r3, r5
    4bd0:	9b01      	ldr	r3, [sp, #4]
    4bd2:	106d      	asrs	r5, r5, #1
    4bd4:	3301      	adds	r3, #1
    4bd6:	181b      	adds	r3, r3, r0
    4bd8:	42ab      	cmp	r3, r5
    4bda:	d900      	bls.n	4bde <__ssputs_r+0x3e>
    4bdc:	001d      	movs	r5, r3
    4bde:	0553      	lsls	r3, r2, #21
    4be0:	d532      	bpl.n	4c48 <__ssputs_r+0xa8>
    4be2:	0029      	movs	r1, r5
    4be4:	0038      	movs	r0, r7
    4be6:	f7ff ff7d 	bl	4ae4 <_malloc_r>
    4bea:	1e06      	subs	r6, r0, #0
    4bec:	d109      	bne.n	4c02 <__ssputs_r+0x62>
    4bee:	230c      	movs	r3, #12
    4bf0:	603b      	str	r3, [r7, #0]
    4bf2:	2340      	movs	r3, #64	; 0x40
    4bf4:	2001      	movs	r0, #1
    4bf6:	89a2      	ldrh	r2, [r4, #12]
    4bf8:	4240      	negs	r0, r0
    4bfa:	4313      	orrs	r3, r2
    4bfc:	81a3      	strh	r3, [r4, #12]
    4bfe:	b005      	add	sp, #20
    4c00:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4c02:	9a02      	ldr	r2, [sp, #8]
    4c04:	6921      	ldr	r1, [r4, #16]
    4c06:	f7ff fc2a 	bl	445e <memcpy>
    4c0a:	89a3      	ldrh	r3, [r4, #12]
    4c0c:	4a14      	ldr	r2, [pc, #80]	; (4c60 <__ssputs_r+0xc0>)
    4c0e:	401a      	ands	r2, r3
    4c10:	2380      	movs	r3, #128	; 0x80
    4c12:	4313      	orrs	r3, r2
    4c14:	81a3      	strh	r3, [r4, #12]
    4c16:	9b02      	ldr	r3, [sp, #8]
    4c18:	6126      	str	r6, [r4, #16]
    4c1a:	18f6      	adds	r6, r6, r3
    4c1c:	6026      	str	r6, [r4, #0]
    4c1e:	6165      	str	r5, [r4, #20]
    4c20:	9e01      	ldr	r6, [sp, #4]
    4c22:	1aed      	subs	r5, r5, r3
    4c24:	60a5      	str	r5, [r4, #8]
    4c26:	9b01      	ldr	r3, [sp, #4]
    4c28:	42b3      	cmp	r3, r6
    4c2a:	d200      	bcs.n	4c2e <__ssputs_r+0x8e>
    4c2c:	001e      	movs	r6, r3
    4c2e:	0032      	movs	r2, r6
    4c30:	9903      	ldr	r1, [sp, #12]
    4c32:	6820      	ldr	r0, [r4, #0]
    4c34:	f000 f93e 	bl	4eb4 <memmove>
    4c38:	68a3      	ldr	r3, [r4, #8]
    4c3a:	2000      	movs	r0, #0
    4c3c:	1b9b      	subs	r3, r3, r6
    4c3e:	60a3      	str	r3, [r4, #8]
    4c40:	6823      	ldr	r3, [r4, #0]
    4c42:	199e      	adds	r6, r3, r6
    4c44:	6026      	str	r6, [r4, #0]
    4c46:	e7da      	b.n	4bfe <__ssputs_r+0x5e>
    4c48:	002a      	movs	r2, r5
    4c4a:	0038      	movs	r0, r7
    4c4c:	f000 f946 	bl	4edc <_realloc_r>
    4c50:	1e06      	subs	r6, r0, #0
    4c52:	d1e0      	bne.n	4c16 <__ssputs_r+0x76>
    4c54:	6921      	ldr	r1, [r4, #16]
    4c56:	0038      	movs	r0, r7
    4c58:	f7ff fefa 	bl	4a50 <_free_r>
    4c5c:	e7c7      	b.n	4bee <__ssputs_r+0x4e>
    4c5e:	46c0      	nop			; (mov r8, r8)
    4c60:	fffffb7f 	.word	0xfffffb7f

00004c64 <_svfiprintf_r>:
    4c64:	b5f0      	push	{r4, r5, r6, r7, lr}
    4c66:	b09f      	sub	sp, #124	; 0x7c
    4c68:	9002      	str	r0, [sp, #8]
    4c6a:	9305      	str	r3, [sp, #20]
    4c6c:	898b      	ldrh	r3, [r1, #12]
    4c6e:	000f      	movs	r7, r1
    4c70:	0016      	movs	r6, r2
    4c72:	061b      	lsls	r3, r3, #24
    4c74:	d511      	bpl.n	4c9a <_svfiprintf_r+0x36>
    4c76:	690b      	ldr	r3, [r1, #16]
    4c78:	2b00      	cmp	r3, #0
    4c7a:	d10e      	bne.n	4c9a <_svfiprintf_r+0x36>
    4c7c:	2140      	movs	r1, #64	; 0x40
    4c7e:	f7ff ff31 	bl	4ae4 <_malloc_r>
    4c82:	6038      	str	r0, [r7, #0]
    4c84:	6138      	str	r0, [r7, #16]
    4c86:	2800      	cmp	r0, #0
    4c88:	d105      	bne.n	4c96 <_svfiprintf_r+0x32>
    4c8a:	230c      	movs	r3, #12
    4c8c:	9a02      	ldr	r2, [sp, #8]
    4c8e:	3801      	subs	r0, #1
    4c90:	6013      	str	r3, [r2, #0]
    4c92:	b01f      	add	sp, #124	; 0x7c
    4c94:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4c96:	2340      	movs	r3, #64	; 0x40
    4c98:	617b      	str	r3, [r7, #20]
    4c9a:	2300      	movs	r3, #0
    4c9c:	ad06      	add	r5, sp, #24
    4c9e:	616b      	str	r3, [r5, #20]
    4ca0:	3320      	adds	r3, #32
    4ca2:	766b      	strb	r3, [r5, #25]
    4ca4:	3310      	adds	r3, #16
    4ca6:	76ab      	strb	r3, [r5, #26]
    4ca8:	0034      	movs	r4, r6
    4caa:	7823      	ldrb	r3, [r4, #0]
    4cac:	2b00      	cmp	r3, #0
    4cae:	d147      	bne.n	4d40 <_svfiprintf_r+0xdc>
    4cb0:	1ba3      	subs	r3, r4, r6
    4cb2:	9304      	str	r3, [sp, #16]
    4cb4:	d00d      	beq.n	4cd2 <_svfiprintf_r+0x6e>
    4cb6:	1ba3      	subs	r3, r4, r6
    4cb8:	0032      	movs	r2, r6
    4cba:	0039      	movs	r1, r7
    4cbc:	9802      	ldr	r0, [sp, #8]
    4cbe:	f7ff ff6f 	bl	4ba0 <__ssputs_r>
    4cc2:	1c43      	adds	r3, r0, #1
    4cc4:	d100      	bne.n	4cc8 <_svfiprintf_r+0x64>
    4cc6:	e0b5      	b.n	4e34 <_svfiprintf_r+0x1d0>
    4cc8:	696a      	ldr	r2, [r5, #20]
    4cca:	9b04      	ldr	r3, [sp, #16]
    4ccc:	4694      	mov	ip, r2
    4cce:	4463      	add	r3, ip
    4cd0:	616b      	str	r3, [r5, #20]
    4cd2:	7823      	ldrb	r3, [r4, #0]
    4cd4:	2b00      	cmp	r3, #0
    4cd6:	d100      	bne.n	4cda <_svfiprintf_r+0x76>
    4cd8:	e0ac      	b.n	4e34 <_svfiprintf_r+0x1d0>
    4cda:	2201      	movs	r2, #1
    4cdc:	2300      	movs	r3, #0
    4cde:	4252      	negs	r2, r2
    4ce0:	606a      	str	r2, [r5, #4]
    4ce2:	a902      	add	r1, sp, #8
    4ce4:	3254      	adds	r2, #84	; 0x54
    4ce6:	1852      	adds	r2, r2, r1
    4ce8:	3401      	adds	r4, #1
    4cea:	602b      	str	r3, [r5, #0]
    4cec:	60eb      	str	r3, [r5, #12]
    4cee:	60ab      	str	r3, [r5, #8]
    4cf0:	7013      	strb	r3, [r2, #0]
    4cf2:	65ab      	str	r3, [r5, #88]	; 0x58
    4cf4:	4e58      	ldr	r6, [pc, #352]	; (4e58 <_svfiprintf_r+0x1f4>)
    4cf6:	2205      	movs	r2, #5
    4cf8:	7821      	ldrb	r1, [r4, #0]
    4cfa:	0030      	movs	r0, r6
    4cfc:	f7ff fba4 	bl	4448 <memchr>
    4d00:	1c62      	adds	r2, r4, #1
    4d02:	2800      	cmp	r0, #0
    4d04:	d120      	bne.n	4d48 <_svfiprintf_r+0xe4>
    4d06:	6829      	ldr	r1, [r5, #0]
    4d08:	06cb      	lsls	r3, r1, #27
    4d0a:	d504      	bpl.n	4d16 <_svfiprintf_r+0xb2>
    4d0c:	2353      	movs	r3, #83	; 0x53
    4d0e:	ae02      	add	r6, sp, #8
    4d10:	3020      	adds	r0, #32
    4d12:	199b      	adds	r3, r3, r6
    4d14:	7018      	strb	r0, [r3, #0]
    4d16:	070b      	lsls	r3, r1, #28
    4d18:	d504      	bpl.n	4d24 <_svfiprintf_r+0xc0>
    4d1a:	2353      	movs	r3, #83	; 0x53
    4d1c:	202b      	movs	r0, #43	; 0x2b
    4d1e:	ae02      	add	r6, sp, #8
    4d20:	199b      	adds	r3, r3, r6
    4d22:	7018      	strb	r0, [r3, #0]
    4d24:	7823      	ldrb	r3, [r4, #0]
    4d26:	2b2a      	cmp	r3, #42	; 0x2a
    4d28:	d016      	beq.n	4d58 <_svfiprintf_r+0xf4>
    4d2a:	2000      	movs	r0, #0
    4d2c:	210a      	movs	r1, #10
    4d2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4d30:	7822      	ldrb	r2, [r4, #0]
    4d32:	3a30      	subs	r2, #48	; 0x30
    4d34:	2a09      	cmp	r2, #9
    4d36:	d955      	bls.n	4de4 <_svfiprintf_r+0x180>
    4d38:	2800      	cmp	r0, #0
    4d3a:	d015      	beq.n	4d68 <_svfiprintf_r+0x104>
    4d3c:	9309      	str	r3, [sp, #36]	; 0x24
    4d3e:	e013      	b.n	4d68 <_svfiprintf_r+0x104>
    4d40:	2b25      	cmp	r3, #37	; 0x25
    4d42:	d0b5      	beq.n	4cb0 <_svfiprintf_r+0x4c>
    4d44:	3401      	adds	r4, #1
    4d46:	e7b0      	b.n	4caa <_svfiprintf_r+0x46>
    4d48:	2301      	movs	r3, #1
    4d4a:	1b80      	subs	r0, r0, r6
    4d4c:	4083      	lsls	r3, r0
    4d4e:	6829      	ldr	r1, [r5, #0]
    4d50:	0014      	movs	r4, r2
    4d52:	430b      	orrs	r3, r1
    4d54:	602b      	str	r3, [r5, #0]
    4d56:	e7cd      	b.n	4cf4 <_svfiprintf_r+0x90>
    4d58:	9b05      	ldr	r3, [sp, #20]
    4d5a:	1d18      	adds	r0, r3, #4
    4d5c:	681b      	ldr	r3, [r3, #0]
    4d5e:	9005      	str	r0, [sp, #20]
    4d60:	2b00      	cmp	r3, #0
    4d62:	db39      	blt.n	4dd8 <_svfiprintf_r+0x174>
    4d64:	9309      	str	r3, [sp, #36]	; 0x24
    4d66:	0014      	movs	r4, r2
    4d68:	7823      	ldrb	r3, [r4, #0]
    4d6a:	2b2e      	cmp	r3, #46	; 0x2e
    4d6c:	d10b      	bne.n	4d86 <_svfiprintf_r+0x122>
    4d6e:	7863      	ldrb	r3, [r4, #1]
    4d70:	1c62      	adds	r2, r4, #1
    4d72:	2b2a      	cmp	r3, #42	; 0x2a
    4d74:	d13e      	bne.n	4df4 <_svfiprintf_r+0x190>
    4d76:	9b05      	ldr	r3, [sp, #20]
    4d78:	3402      	adds	r4, #2
    4d7a:	1d1a      	adds	r2, r3, #4
    4d7c:	681b      	ldr	r3, [r3, #0]
    4d7e:	9205      	str	r2, [sp, #20]
    4d80:	2b00      	cmp	r3, #0
    4d82:	db34      	blt.n	4dee <_svfiprintf_r+0x18a>
    4d84:	9307      	str	r3, [sp, #28]
    4d86:	4e35      	ldr	r6, [pc, #212]	; (4e5c <_svfiprintf_r+0x1f8>)
    4d88:	7821      	ldrb	r1, [r4, #0]
    4d8a:	2203      	movs	r2, #3
    4d8c:	0030      	movs	r0, r6
    4d8e:	f7ff fb5b 	bl	4448 <memchr>
    4d92:	2800      	cmp	r0, #0
    4d94:	d006      	beq.n	4da4 <_svfiprintf_r+0x140>
    4d96:	2340      	movs	r3, #64	; 0x40
    4d98:	1b80      	subs	r0, r0, r6
    4d9a:	4083      	lsls	r3, r0
    4d9c:	682a      	ldr	r2, [r5, #0]
    4d9e:	3401      	adds	r4, #1
    4da0:	4313      	orrs	r3, r2
    4da2:	602b      	str	r3, [r5, #0]
    4da4:	7821      	ldrb	r1, [r4, #0]
    4da6:	2206      	movs	r2, #6
    4da8:	482d      	ldr	r0, [pc, #180]	; (4e60 <_svfiprintf_r+0x1fc>)
    4daa:	1c66      	adds	r6, r4, #1
    4dac:	7629      	strb	r1, [r5, #24]
    4dae:	f7ff fb4b 	bl	4448 <memchr>
    4db2:	2800      	cmp	r0, #0
    4db4:	d046      	beq.n	4e44 <_svfiprintf_r+0x1e0>
    4db6:	4b2b      	ldr	r3, [pc, #172]	; (4e64 <_svfiprintf_r+0x200>)
    4db8:	2b00      	cmp	r3, #0
    4dba:	d12f      	bne.n	4e1c <_svfiprintf_r+0x1b8>
    4dbc:	6829      	ldr	r1, [r5, #0]
    4dbe:	9b05      	ldr	r3, [sp, #20]
    4dc0:	2207      	movs	r2, #7
    4dc2:	05c9      	lsls	r1, r1, #23
    4dc4:	d528      	bpl.n	4e18 <_svfiprintf_r+0x1b4>
    4dc6:	189b      	adds	r3, r3, r2
    4dc8:	4393      	bics	r3, r2
    4dca:	3308      	adds	r3, #8
    4dcc:	9305      	str	r3, [sp, #20]
    4dce:	696b      	ldr	r3, [r5, #20]
    4dd0:	9a03      	ldr	r2, [sp, #12]
    4dd2:	189b      	adds	r3, r3, r2
    4dd4:	616b      	str	r3, [r5, #20]
    4dd6:	e767      	b.n	4ca8 <_svfiprintf_r+0x44>
    4dd8:	425b      	negs	r3, r3
    4dda:	60eb      	str	r3, [r5, #12]
    4ddc:	2302      	movs	r3, #2
    4dde:	430b      	orrs	r3, r1
    4de0:	602b      	str	r3, [r5, #0]
    4de2:	e7c0      	b.n	4d66 <_svfiprintf_r+0x102>
    4de4:	434b      	muls	r3, r1
    4de6:	3401      	adds	r4, #1
    4de8:	189b      	adds	r3, r3, r2
    4dea:	2001      	movs	r0, #1
    4dec:	e7a0      	b.n	4d30 <_svfiprintf_r+0xcc>
    4dee:	2301      	movs	r3, #1
    4df0:	425b      	negs	r3, r3
    4df2:	e7c7      	b.n	4d84 <_svfiprintf_r+0x120>
    4df4:	2300      	movs	r3, #0
    4df6:	0014      	movs	r4, r2
    4df8:	200a      	movs	r0, #10
    4dfa:	001a      	movs	r2, r3
    4dfc:	606b      	str	r3, [r5, #4]
    4dfe:	7821      	ldrb	r1, [r4, #0]
    4e00:	3930      	subs	r1, #48	; 0x30
    4e02:	2909      	cmp	r1, #9
    4e04:	d903      	bls.n	4e0e <_svfiprintf_r+0x1aa>
    4e06:	2b00      	cmp	r3, #0
    4e08:	d0bd      	beq.n	4d86 <_svfiprintf_r+0x122>
    4e0a:	9207      	str	r2, [sp, #28]
    4e0c:	e7bb      	b.n	4d86 <_svfiprintf_r+0x122>
    4e0e:	4342      	muls	r2, r0
    4e10:	3401      	adds	r4, #1
    4e12:	1852      	adds	r2, r2, r1
    4e14:	2301      	movs	r3, #1
    4e16:	e7f2      	b.n	4dfe <_svfiprintf_r+0x19a>
    4e18:	3307      	adds	r3, #7
    4e1a:	e7d5      	b.n	4dc8 <_svfiprintf_r+0x164>
    4e1c:	ab05      	add	r3, sp, #20
    4e1e:	9300      	str	r3, [sp, #0]
    4e20:	003a      	movs	r2, r7
    4e22:	4b11      	ldr	r3, [pc, #68]	; (4e68 <_svfiprintf_r+0x204>)
    4e24:	0029      	movs	r1, r5
    4e26:	9802      	ldr	r0, [sp, #8]
    4e28:	f7fe f85c 	bl	2ee4 <_printf_float>
    4e2c:	9003      	str	r0, [sp, #12]
    4e2e:	9b03      	ldr	r3, [sp, #12]
    4e30:	3301      	adds	r3, #1
    4e32:	d1cc      	bne.n	4dce <_svfiprintf_r+0x16a>
    4e34:	89bb      	ldrh	r3, [r7, #12]
    4e36:	980b      	ldr	r0, [sp, #44]	; 0x2c
    4e38:	065b      	lsls	r3, r3, #25
    4e3a:	d400      	bmi.n	4e3e <_svfiprintf_r+0x1da>
    4e3c:	e729      	b.n	4c92 <_svfiprintf_r+0x2e>
    4e3e:	2001      	movs	r0, #1
    4e40:	4240      	negs	r0, r0
    4e42:	e726      	b.n	4c92 <_svfiprintf_r+0x2e>
    4e44:	ab05      	add	r3, sp, #20
    4e46:	9300      	str	r3, [sp, #0]
    4e48:	003a      	movs	r2, r7
    4e4a:	4b07      	ldr	r3, [pc, #28]	; (4e68 <_svfiprintf_r+0x204>)
    4e4c:	0029      	movs	r1, r5
    4e4e:	9802      	ldr	r0, [sp, #8]
    4e50:	f7fe fb02 	bl	3458 <_printf_i>
    4e54:	e7ea      	b.n	4e2c <_svfiprintf_r+0x1c8>
    4e56:	46c0      	nop			; (mov r8, r8)
    4e58:	00005ca4 	.word	0x00005ca4
    4e5c:	00005caa 	.word	0x00005caa
    4e60:	00005cae 	.word	0x00005cae
    4e64:	00002ee5 	.word	0x00002ee5
    4e68:	00004ba1 	.word	0x00004ba1

00004e6c <_sbrk_r>:
    4e6c:	2300      	movs	r3, #0
    4e6e:	b570      	push	{r4, r5, r6, lr}
    4e70:	4c06      	ldr	r4, [pc, #24]	; (4e8c <_sbrk_r+0x20>)
    4e72:	0005      	movs	r5, r0
    4e74:	0008      	movs	r0, r1
    4e76:	6023      	str	r3, [r4, #0]
    4e78:	f7fb ff22 	bl	cc0 <_sbrk>
    4e7c:	1c43      	adds	r3, r0, #1
    4e7e:	d103      	bne.n	4e88 <_sbrk_r+0x1c>
    4e80:	6823      	ldr	r3, [r4, #0]
    4e82:	2b00      	cmp	r3, #0
    4e84:	d000      	beq.n	4e88 <_sbrk_r+0x1c>
    4e86:	602b      	str	r3, [r5, #0]
    4e88:	bd70      	pop	{r4, r5, r6, pc}
    4e8a:	46c0      	nop			; (mov r8, r8)
    4e8c:	200003b0 	.word	0x200003b0

00004e90 <__ascii_mbtowc>:
    4e90:	b082      	sub	sp, #8
    4e92:	2900      	cmp	r1, #0
    4e94:	d100      	bne.n	4e98 <__ascii_mbtowc+0x8>
    4e96:	a901      	add	r1, sp, #4
    4e98:	1e10      	subs	r0, r2, #0
    4e9a:	d006      	beq.n	4eaa <__ascii_mbtowc+0x1a>
    4e9c:	2b00      	cmp	r3, #0
    4e9e:	d006      	beq.n	4eae <__ascii_mbtowc+0x1e>
    4ea0:	7813      	ldrb	r3, [r2, #0]
    4ea2:	600b      	str	r3, [r1, #0]
    4ea4:	7810      	ldrb	r0, [r2, #0]
    4ea6:	1e43      	subs	r3, r0, #1
    4ea8:	4198      	sbcs	r0, r3
    4eaa:	b002      	add	sp, #8
    4eac:	4770      	bx	lr
    4eae:	2002      	movs	r0, #2
    4eb0:	4240      	negs	r0, r0
    4eb2:	e7fa      	b.n	4eaa <__ascii_mbtowc+0x1a>

00004eb4 <memmove>:
    4eb4:	b510      	push	{r4, lr}
    4eb6:	4288      	cmp	r0, r1
    4eb8:	d902      	bls.n	4ec0 <memmove+0xc>
    4eba:	188b      	adds	r3, r1, r2
    4ebc:	4298      	cmp	r0, r3
    4ebe:	d308      	bcc.n	4ed2 <memmove+0x1e>
    4ec0:	2300      	movs	r3, #0
    4ec2:	429a      	cmp	r2, r3
    4ec4:	d007      	beq.n	4ed6 <memmove+0x22>
    4ec6:	5ccc      	ldrb	r4, [r1, r3]
    4ec8:	54c4      	strb	r4, [r0, r3]
    4eca:	3301      	adds	r3, #1
    4ecc:	e7f9      	b.n	4ec2 <memmove+0xe>
    4ece:	5c8b      	ldrb	r3, [r1, r2]
    4ed0:	5483      	strb	r3, [r0, r2]
    4ed2:	3a01      	subs	r2, #1
    4ed4:	d2fb      	bcs.n	4ece <memmove+0x1a>
    4ed6:	bd10      	pop	{r4, pc}

00004ed8 <__malloc_lock>:
    4ed8:	4770      	bx	lr

00004eda <__malloc_unlock>:
    4eda:	4770      	bx	lr

00004edc <_realloc_r>:
    4edc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4ede:	0007      	movs	r7, r0
    4ee0:	000d      	movs	r5, r1
    4ee2:	0016      	movs	r6, r2
    4ee4:	2900      	cmp	r1, #0
    4ee6:	d105      	bne.n	4ef4 <_realloc_r+0x18>
    4ee8:	0011      	movs	r1, r2
    4eea:	f7ff fdfb 	bl	4ae4 <_malloc_r>
    4eee:	0004      	movs	r4, r0
    4ef0:	0020      	movs	r0, r4
    4ef2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4ef4:	2a00      	cmp	r2, #0
    4ef6:	d103      	bne.n	4f00 <_realloc_r+0x24>
    4ef8:	f7ff fdaa 	bl	4a50 <_free_r>
    4efc:	0034      	movs	r4, r6
    4efe:	e7f7      	b.n	4ef0 <_realloc_r+0x14>
    4f00:	f000 f81e 	bl	4f40 <_malloc_usable_size_r>
    4f04:	002c      	movs	r4, r5
    4f06:	4286      	cmp	r6, r0
    4f08:	d9f2      	bls.n	4ef0 <_realloc_r+0x14>
    4f0a:	0031      	movs	r1, r6
    4f0c:	0038      	movs	r0, r7
    4f0e:	f7ff fde9 	bl	4ae4 <_malloc_r>
    4f12:	1e04      	subs	r4, r0, #0
    4f14:	d0ec      	beq.n	4ef0 <_realloc_r+0x14>
    4f16:	0029      	movs	r1, r5
    4f18:	0032      	movs	r2, r6
    4f1a:	f7ff faa0 	bl	445e <memcpy>
    4f1e:	0029      	movs	r1, r5
    4f20:	0038      	movs	r0, r7
    4f22:	f7ff fd95 	bl	4a50 <_free_r>
    4f26:	e7e3      	b.n	4ef0 <_realloc_r+0x14>

00004f28 <__ascii_wctomb>:
    4f28:	1e0b      	subs	r3, r1, #0
    4f2a:	d004      	beq.n	4f36 <__ascii_wctomb+0xe>
    4f2c:	2aff      	cmp	r2, #255	; 0xff
    4f2e:	d904      	bls.n	4f3a <__ascii_wctomb+0x12>
    4f30:	238a      	movs	r3, #138	; 0x8a
    4f32:	6003      	str	r3, [r0, #0]
    4f34:	3b8b      	subs	r3, #139	; 0x8b
    4f36:	0018      	movs	r0, r3
    4f38:	4770      	bx	lr
    4f3a:	700a      	strb	r2, [r1, #0]
    4f3c:	2301      	movs	r3, #1
    4f3e:	e7fa      	b.n	4f36 <__ascii_wctomb+0xe>

00004f40 <_malloc_usable_size_r>:
    4f40:	1f0b      	subs	r3, r1, #4
    4f42:	681b      	ldr	r3, [r3, #0]
    4f44:	1f18      	subs	r0, r3, #4
    4f46:	2b00      	cmp	r3, #0
    4f48:	da01      	bge.n	4f4e <_malloc_usable_size_r+0xe>
    4f4a:	580b      	ldr	r3, [r1, r0]
    4f4c:	18c0      	adds	r0, r0, r3
    4f4e:	4770      	bx	lr

00004f50 <__gnu_thumb1_case_uqi>:
    4f50:	b402      	push	{r1}
    4f52:	4671      	mov	r1, lr
    4f54:	0849      	lsrs	r1, r1, #1
    4f56:	0049      	lsls	r1, r1, #1
    4f58:	5c09      	ldrb	r1, [r1, r0]
    4f5a:	0049      	lsls	r1, r1, #1
    4f5c:	448e      	add	lr, r1
    4f5e:	bc02      	pop	{r1}
    4f60:	4770      	bx	lr
    4f62:	46c0      	nop			; (mov r8, r8)

00004f64 <__divsi3>:
    4f64:	4603      	mov	r3, r0
    4f66:	430b      	orrs	r3, r1
    4f68:	d47f      	bmi.n	506a <__divsi3+0x106>
    4f6a:	2200      	movs	r2, #0
    4f6c:	0843      	lsrs	r3, r0, #1
    4f6e:	428b      	cmp	r3, r1
    4f70:	d374      	bcc.n	505c <__divsi3+0xf8>
    4f72:	0903      	lsrs	r3, r0, #4
    4f74:	428b      	cmp	r3, r1
    4f76:	d35f      	bcc.n	5038 <__divsi3+0xd4>
    4f78:	0a03      	lsrs	r3, r0, #8
    4f7a:	428b      	cmp	r3, r1
    4f7c:	d344      	bcc.n	5008 <__divsi3+0xa4>
    4f7e:	0b03      	lsrs	r3, r0, #12
    4f80:	428b      	cmp	r3, r1
    4f82:	d328      	bcc.n	4fd6 <__divsi3+0x72>
    4f84:	0c03      	lsrs	r3, r0, #16
    4f86:	428b      	cmp	r3, r1
    4f88:	d30d      	bcc.n	4fa6 <__divsi3+0x42>
    4f8a:	22ff      	movs	r2, #255	; 0xff
    4f8c:	0209      	lsls	r1, r1, #8
    4f8e:	ba12      	rev	r2, r2
    4f90:	0c03      	lsrs	r3, r0, #16
    4f92:	428b      	cmp	r3, r1
    4f94:	d302      	bcc.n	4f9c <__divsi3+0x38>
    4f96:	1212      	asrs	r2, r2, #8
    4f98:	0209      	lsls	r1, r1, #8
    4f9a:	d065      	beq.n	5068 <__divsi3+0x104>
    4f9c:	0b03      	lsrs	r3, r0, #12
    4f9e:	428b      	cmp	r3, r1
    4fa0:	d319      	bcc.n	4fd6 <__divsi3+0x72>
    4fa2:	e000      	b.n	4fa6 <__divsi3+0x42>
    4fa4:	0a09      	lsrs	r1, r1, #8
    4fa6:	0bc3      	lsrs	r3, r0, #15
    4fa8:	428b      	cmp	r3, r1
    4faa:	d301      	bcc.n	4fb0 <__divsi3+0x4c>
    4fac:	03cb      	lsls	r3, r1, #15
    4fae:	1ac0      	subs	r0, r0, r3
    4fb0:	4152      	adcs	r2, r2
    4fb2:	0b83      	lsrs	r3, r0, #14
    4fb4:	428b      	cmp	r3, r1
    4fb6:	d301      	bcc.n	4fbc <__divsi3+0x58>
    4fb8:	038b      	lsls	r3, r1, #14
    4fba:	1ac0      	subs	r0, r0, r3
    4fbc:	4152      	adcs	r2, r2
    4fbe:	0b43      	lsrs	r3, r0, #13
    4fc0:	428b      	cmp	r3, r1
    4fc2:	d301      	bcc.n	4fc8 <__divsi3+0x64>
    4fc4:	034b      	lsls	r3, r1, #13
    4fc6:	1ac0      	subs	r0, r0, r3
    4fc8:	4152      	adcs	r2, r2
    4fca:	0b03      	lsrs	r3, r0, #12
    4fcc:	428b      	cmp	r3, r1
    4fce:	d301      	bcc.n	4fd4 <__divsi3+0x70>
    4fd0:	030b      	lsls	r3, r1, #12
    4fd2:	1ac0      	subs	r0, r0, r3
    4fd4:	4152      	adcs	r2, r2
    4fd6:	0ac3      	lsrs	r3, r0, #11
    4fd8:	428b      	cmp	r3, r1
    4fda:	d301      	bcc.n	4fe0 <__divsi3+0x7c>
    4fdc:	02cb      	lsls	r3, r1, #11
    4fde:	1ac0      	subs	r0, r0, r3
    4fe0:	4152      	adcs	r2, r2
    4fe2:	0a83      	lsrs	r3, r0, #10
    4fe4:	428b      	cmp	r3, r1
    4fe6:	d301      	bcc.n	4fec <__divsi3+0x88>
    4fe8:	028b      	lsls	r3, r1, #10
    4fea:	1ac0      	subs	r0, r0, r3
    4fec:	4152      	adcs	r2, r2
    4fee:	0a43      	lsrs	r3, r0, #9
    4ff0:	428b      	cmp	r3, r1
    4ff2:	d301      	bcc.n	4ff8 <__divsi3+0x94>
    4ff4:	024b      	lsls	r3, r1, #9
    4ff6:	1ac0      	subs	r0, r0, r3
    4ff8:	4152      	adcs	r2, r2
    4ffa:	0a03      	lsrs	r3, r0, #8
    4ffc:	428b      	cmp	r3, r1
    4ffe:	d301      	bcc.n	5004 <__divsi3+0xa0>
    5000:	020b      	lsls	r3, r1, #8
    5002:	1ac0      	subs	r0, r0, r3
    5004:	4152      	adcs	r2, r2
    5006:	d2cd      	bcs.n	4fa4 <__divsi3+0x40>
    5008:	09c3      	lsrs	r3, r0, #7
    500a:	428b      	cmp	r3, r1
    500c:	d301      	bcc.n	5012 <__divsi3+0xae>
    500e:	01cb      	lsls	r3, r1, #7
    5010:	1ac0      	subs	r0, r0, r3
    5012:	4152      	adcs	r2, r2
    5014:	0983      	lsrs	r3, r0, #6
    5016:	428b      	cmp	r3, r1
    5018:	d301      	bcc.n	501e <__divsi3+0xba>
    501a:	018b      	lsls	r3, r1, #6
    501c:	1ac0      	subs	r0, r0, r3
    501e:	4152      	adcs	r2, r2
    5020:	0943      	lsrs	r3, r0, #5
    5022:	428b      	cmp	r3, r1
    5024:	d301      	bcc.n	502a <__divsi3+0xc6>
    5026:	014b      	lsls	r3, r1, #5
    5028:	1ac0      	subs	r0, r0, r3
    502a:	4152      	adcs	r2, r2
    502c:	0903      	lsrs	r3, r0, #4
    502e:	428b      	cmp	r3, r1
    5030:	d301      	bcc.n	5036 <__divsi3+0xd2>
    5032:	010b      	lsls	r3, r1, #4
    5034:	1ac0      	subs	r0, r0, r3
    5036:	4152      	adcs	r2, r2
    5038:	08c3      	lsrs	r3, r0, #3
    503a:	428b      	cmp	r3, r1
    503c:	d301      	bcc.n	5042 <__divsi3+0xde>
    503e:	00cb      	lsls	r3, r1, #3
    5040:	1ac0      	subs	r0, r0, r3
    5042:	4152      	adcs	r2, r2
    5044:	0883      	lsrs	r3, r0, #2
    5046:	428b      	cmp	r3, r1
    5048:	d301      	bcc.n	504e <__divsi3+0xea>
    504a:	008b      	lsls	r3, r1, #2
    504c:	1ac0      	subs	r0, r0, r3
    504e:	4152      	adcs	r2, r2
    5050:	0843      	lsrs	r3, r0, #1
    5052:	428b      	cmp	r3, r1
    5054:	d301      	bcc.n	505a <__divsi3+0xf6>
    5056:	004b      	lsls	r3, r1, #1
    5058:	1ac0      	subs	r0, r0, r3
    505a:	4152      	adcs	r2, r2
    505c:	1a41      	subs	r1, r0, r1
    505e:	d200      	bcs.n	5062 <__divsi3+0xfe>
    5060:	4601      	mov	r1, r0
    5062:	4152      	adcs	r2, r2
    5064:	4610      	mov	r0, r2
    5066:	4770      	bx	lr
    5068:	e05d      	b.n	5126 <__divsi3+0x1c2>
    506a:	0fca      	lsrs	r2, r1, #31
    506c:	d000      	beq.n	5070 <__divsi3+0x10c>
    506e:	4249      	negs	r1, r1
    5070:	1003      	asrs	r3, r0, #32
    5072:	d300      	bcc.n	5076 <__divsi3+0x112>
    5074:	4240      	negs	r0, r0
    5076:	4053      	eors	r3, r2
    5078:	2200      	movs	r2, #0
    507a:	469c      	mov	ip, r3
    507c:	0903      	lsrs	r3, r0, #4
    507e:	428b      	cmp	r3, r1
    5080:	d32d      	bcc.n	50de <__divsi3+0x17a>
    5082:	0a03      	lsrs	r3, r0, #8
    5084:	428b      	cmp	r3, r1
    5086:	d312      	bcc.n	50ae <__divsi3+0x14a>
    5088:	22fc      	movs	r2, #252	; 0xfc
    508a:	0189      	lsls	r1, r1, #6
    508c:	ba12      	rev	r2, r2
    508e:	0a03      	lsrs	r3, r0, #8
    5090:	428b      	cmp	r3, r1
    5092:	d30c      	bcc.n	50ae <__divsi3+0x14a>
    5094:	0189      	lsls	r1, r1, #6
    5096:	1192      	asrs	r2, r2, #6
    5098:	428b      	cmp	r3, r1
    509a:	d308      	bcc.n	50ae <__divsi3+0x14a>
    509c:	0189      	lsls	r1, r1, #6
    509e:	1192      	asrs	r2, r2, #6
    50a0:	428b      	cmp	r3, r1
    50a2:	d304      	bcc.n	50ae <__divsi3+0x14a>
    50a4:	0189      	lsls	r1, r1, #6
    50a6:	d03a      	beq.n	511e <__divsi3+0x1ba>
    50a8:	1192      	asrs	r2, r2, #6
    50aa:	e000      	b.n	50ae <__divsi3+0x14a>
    50ac:	0989      	lsrs	r1, r1, #6
    50ae:	09c3      	lsrs	r3, r0, #7
    50b0:	428b      	cmp	r3, r1
    50b2:	d301      	bcc.n	50b8 <__divsi3+0x154>
    50b4:	01cb      	lsls	r3, r1, #7
    50b6:	1ac0      	subs	r0, r0, r3
    50b8:	4152      	adcs	r2, r2
    50ba:	0983      	lsrs	r3, r0, #6
    50bc:	428b      	cmp	r3, r1
    50be:	d301      	bcc.n	50c4 <__divsi3+0x160>
    50c0:	018b      	lsls	r3, r1, #6
    50c2:	1ac0      	subs	r0, r0, r3
    50c4:	4152      	adcs	r2, r2
    50c6:	0943      	lsrs	r3, r0, #5
    50c8:	428b      	cmp	r3, r1
    50ca:	d301      	bcc.n	50d0 <__divsi3+0x16c>
    50cc:	014b      	lsls	r3, r1, #5
    50ce:	1ac0      	subs	r0, r0, r3
    50d0:	4152      	adcs	r2, r2
    50d2:	0903      	lsrs	r3, r0, #4
    50d4:	428b      	cmp	r3, r1
    50d6:	d301      	bcc.n	50dc <__divsi3+0x178>
    50d8:	010b      	lsls	r3, r1, #4
    50da:	1ac0      	subs	r0, r0, r3
    50dc:	4152      	adcs	r2, r2
    50de:	08c3      	lsrs	r3, r0, #3
    50e0:	428b      	cmp	r3, r1
    50e2:	d301      	bcc.n	50e8 <__divsi3+0x184>
    50e4:	00cb      	lsls	r3, r1, #3
    50e6:	1ac0      	subs	r0, r0, r3
    50e8:	4152      	adcs	r2, r2
    50ea:	0883      	lsrs	r3, r0, #2
    50ec:	428b      	cmp	r3, r1
    50ee:	d301      	bcc.n	50f4 <__divsi3+0x190>
    50f0:	008b      	lsls	r3, r1, #2
    50f2:	1ac0      	subs	r0, r0, r3
    50f4:	4152      	adcs	r2, r2
    50f6:	d2d9      	bcs.n	50ac <__divsi3+0x148>
    50f8:	0843      	lsrs	r3, r0, #1
    50fa:	428b      	cmp	r3, r1
    50fc:	d301      	bcc.n	5102 <__divsi3+0x19e>
    50fe:	004b      	lsls	r3, r1, #1
    5100:	1ac0      	subs	r0, r0, r3
    5102:	4152      	adcs	r2, r2
    5104:	1a41      	subs	r1, r0, r1
    5106:	d200      	bcs.n	510a <__divsi3+0x1a6>
    5108:	4601      	mov	r1, r0
    510a:	4663      	mov	r3, ip
    510c:	4152      	adcs	r2, r2
    510e:	105b      	asrs	r3, r3, #1
    5110:	4610      	mov	r0, r2
    5112:	d301      	bcc.n	5118 <__divsi3+0x1b4>
    5114:	4240      	negs	r0, r0
    5116:	2b00      	cmp	r3, #0
    5118:	d500      	bpl.n	511c <__divsi3+0x1b8>
    511a:	4249      	negs	r1, r1
    511c:	4770      	bx	lr
    511e:	4663      	mov	r3, ip
    5120:	105b      	asrs	r3, r3, #1
    5122:	d300      	bcc.n	5126 <__divsi3+0x1c2>
    5124:	4240      	negs	r0, r0
    5126:	b501      	push	{r0, lr}
    5128:	2000      	movs	r0, #0
    512a:	f7fc fb3d 	bl	17a8 <__aeabi_idiv0>
    512e:	bd02      	pop	{r1, pc}

00005130 <__aeabi_idivmod>:
    5130:	2900      	cmp	r1, #0
    5132:	d0f8      	beq.n	5126 <__divsi3+0x1c2>
    5134:	e716      	b.n	4f64 <__divsi3>
    5136:	4770      	bx	lr

00005138 <__aeabi_dadd>:
    5138:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    513a:	4645      	mov	r5, r8
    513c:	46de      	mov	lr, fp
    513e:	4657      	mov	r7, sl
    5140:	464e      	mov	r6, r9
    5142:	030c      	lsls	r4, r1, #12
    5144:	b5e0      	push	{r5, r6, r7, lr}
    5146:	004e      	lsls	r6, r1, #1
    5148:	0fc9      	lsrs	r1, r1, #31
    514a:	4688      	mov	r8, r1
    514c:	000d      	movs	r5, r1
    514e:	0a61      	lsrs	r1, r4, #9
    5150:	0f44      	lsrs	r4, r0, #29
    5152:	430c      	orrs	r4, r1
    5154:	00c7      	lsls	r7, r0, #3
    5156:	0319      	lsls	r1, r3, #12
    5158:	0058      	lsls	r0, r3, #1
    515a:	0fdb      	lsrs	r3, r3, #31
    515c:	469b      	mov	fp, r3
    515e:	0a4b      	lsrs	r3, r1, #9
    5160:	0f51      	lsrs	r1, r2, #29
    5162:	430b      	orrs	r3, r1
    5164:	0d76      	lsrs	r6, r6, #21
    5166:	0d40      	lsrs	r0, r0, #21
    5168:	0019      	movs	r1, r3
    516a:	00d2      	lsls	r2, r2, #3
    516c:	45d8      	cmp	r8, fp
    516e:	d100      	bne.n	5172 <__aeabi_dadd+0x3a>
    5170:	e0ae      	b.n	52d0 <__aeabi_dadd+0x198>
    5172:	1a35      	subs	r5, r6, r0
    5174:	2d00      	cmp	r5, #0
    5176:	dc00      	bgt.n	517a <__aeabi_dadd+0x42>
    5178:	e0f6      	b.n	5368 <__aeabi_dadd+0x230>
    517a:	2800      	cmp	r0, #0
    517c:	d10f      	bne.n	519e <__aeabi_dadd+0x66>
    517e:	4313      	orrs	r3, r2
    5180:	d100      	bne.n	5184 <__aeabi_dadd+0x4c>
    5182:	e0db      	b.n	533c <__aeabi_dadd+0x204>
    5184:	1e6b      	subs	r3, r5, #1
    5186:	2b00      	cmp	r3, #0
    5188:	d000      	beq.n	518c <__aeabi_dadd+0x54>
    518a:	e137      	b.n	53fc <__aeabi_dadd+0x2c4>
    518c:	1aba      	subs	r2, r7, r2
    518e:	4297      	cmp	r7, r2
    5190:	41bf      	sbcs	r7, r7
    5192:	1a64      	subs	r4, r4, r1
    5194:	427f      	negs	r7, r7
    5196:	1be4      	subs	r4, r4, r7
    5198:	2601      	movs	r6, #1
    519a:	0017      	movs	r7, r2
    519c:	e024      	b.n	51e8 <__aeabi_dadd+0xb0>
    519e:	4bc6      	ldr	r3, [pc, #792]	; (54b8 <__aeabi_dadd+0x380>)
    51a0:	429e      	cmp	r6, r3
    51a2:	d04d      	beq.n	5240 <__aeabi_dadd+0x108>
    51a4:	2380      	movs	r3, #128	; 0x80
    51a6:	041b      	lsls	r3, r3, #16
    51a8:	4319      	orrs	r1, r3
    51aa:	2d38      	cmp	r5, #56	; 0x38
    51ac:	dd00      	ble.n	51b0 <__aeabi_dadd+0x78>
    51ae:	e107      	b.n	53c0 <__aeabi_dadd+0x288>
    51b0:	2d1f      	cmp	r5, #31
    51b2:	dd00      	ble.n	51b6 <__aeabi_dadd+0x7e>
    51b4:	e138      	b.n	5428 <__aeabi_dadd+0x2f0>
    51b6:	2020      	movs	r0, #32
    51b8:	1b43      	subs	r3, r0, r5
    51ba:	469a      	mov	sl, r3
    51bc:	000b      	movs	r3, r1
    51be:	4650      	mov	r0, sl
    51c0:	4083      	lsls	r3, r0
    51c2:	4699      	mov	r9, r3
    51c4:	0013      	movs	r3, r2
    51c6:	4648      	mov	r0, r9
    51c8:	40eb      	lsrs	r3, r5
    51ca:	4318      	orrs	r0, r3
    51cc:	0003      	movs	r3, r0
    51ce:	4650      	mov	r0, sl
    51d0:	4082      	lsls	r2, r0
    51d2:	1e50      	subs	r0, r2, #1
    51d4:	4182      	sbcs	r2, r0
    51d6:	40e9      	lsrs	r1, r5
    51d8:	431a      	orrs	r2, r3
    51da:	1aba      	subs	r2, r7, r2
    51dc:	1a61      	subs	r1, r4, r1
    51de:	4297      	cmp	r7, r2
    51e0:	41a4      	sbcs	r4, r4
    51e2:	0017      	movs	r7, r2
    51e4:	4264      	negs	r4, r4
    51e6:	1b0c      	subs	r4, r1, r4
    51e8:	0223      	lsls	r3, r4, #8
    51ea:	d562      	bpl.n	52b2 <__aeabi_dadd+0x17a>
    51ec:	0264      	lsls	r4, r4, #9
    51ee:	0a65      	lsrs	r5, r4, #9
    51f0:	2d00      	cmp	r5, #0
    51f2:	d100      	bne.n	51f6 <__aeabi_dadd+0xbe>
    51f4:	e0df      	b.n	53b6 <__aeabi_dadd+0x27e>
    51f6:	0028      	movs	r0, r5
    51f8:	f7fd fc8e 	bl	2b18 <__clzsi2>
    51fc:	0003      	movs	r3, r0
    51fe:	3b08      	subs	r3, #8
    5200:	2b1f      	cmp	r3, #31
    5202:	dd00      	ble.n	5206 <__aeabi_dadd+0xce>
    5204:	e0d2      	b.n	53ac <__aeabi_dadd+0x274>
    5206:	2220      	movs	r2, #32
    5208:	003c      	movs	r4, r7
    520a:	1ad2      	subs	r2, r2, r3
    520c:	409d      	lsls	r5, r3
    520e:	40d4      	lsrs	r4, r2
    5210:	409f      	lsls	r7, r3
    5212:	4325      	orrs	r5, r4
    5214:	429e      	cmp	r6, r3
    5216:	dd00      	ble.n	521a <__aeabi_dadd+0xe2>
    5218:	e0c4      	b.n	53a4 <__aeabi_dadd+0x26c>
    521a:	1b9e      	subs	r6, r3, r6
    521c:	1c73      	adds	r3, r6, #1
    521e:	2b1f      	cmp	r3, #31
    5220:	dd00      	ble.n	5224 <__aeabi_dadd+0xec>
    5222:	e0f1      	b.n	5408 <__aeabi_dadd+0x2d0>
    5224:	2220      	movs	r2, #32
    5226:	0038      	movs	r0, r7
    5228:	0029      	movs	r1, r5
    522a:	1ad2      	subs	r2, r2, r3
    522c:	40d8      	lsrs	r0, r3
    522e:	4091      	lsls	r1, r2
    5230:	4097      	lsls	r7, r2
    5232:	002c      	movs	r4, r5
    5234:	4301      	orrs	r1, r0
    5236:	1e78      	subs	r0, r7, #1
    5238:	4187      	sbcs	r7, r0
    523a:	40dc      	lsrs	r4, r3
    523c:	2600      	movs	r6, #0
    523e:	430f      	orrs	r7, r1
    5240:	077b      	lsls	r3, r7, #29
    5242:	d009      	beq.n	5258 <__aeabi_dadd+0x120>
    5244:	230f      	movs	r3, #15
    5246:	403b      	ands	r3, r7
    5248:	2b04      	cmp	r3, #4
    524a:	d005      	beq.n	5258 <__aeabi_dadd+0x120>
    524c:	1d3b      	adds	r3, r7, #4
    524e:	42bb      	cmp	r3, r7
    5250:	41bf      	sbcs	r7, r7
    5252:	427f      	negs	r7, r7
    5254:	19e4      	adds	r4, r4, r7
    5256:	001f      	movs	r7, r3
    5258:	0223      	lsls	r3, r4, #8
    525a:	d52c      	bpl.n	52b6 <__aeabi_dadd+0x17e>
    525c:	4b96      	ldr	r3, [pc, #600]	; (54b8 <__aeabi_dadd+0x380>)
    525e:	3601      	adds	r6, #1
    5260:	429e      	cmp	r6, r3
    5262:	d100      	bne.n	5266 <__aeabi_dadd+0x12e>
    5264:	e09a      	b.n	539c <__aeabi_dadd+0x264>
    5266:	4645      	mov	r5, r8
    5268:	4b94      	ldr	r3, [pc, #592]	; (54bc <__aeabi_dadd+0x384>)
    526a:	08ff      	lsrs	r7, r7, #3
    526c:	401c      	ands	r4, r3
    526e:	0760      	lsls	r0, r4, #29
    5270:	0576      	lsls	r6, r6, #21
    5272:	0264      	lsls	r4, r4, #9
    5274:	4307      	orrs	r7, r0
    5276:	0b24      	lsrs	r4, r4, #12
    5278:	0d76      	lsrs	r6, r6, #21
    527a:	2100      	movs	r1, #0
    527c:	0324      	lsls	r4, r4, #12
    527e:	0b23      	lsrs	r3, r4, #12
    5280:	0d0c      	lsrs	r4, r1, #20
    5282:	4a8f      	ldr	r2, [pc, #572]	; (54c0 <__aeabi_dadd+0x388>)
    5284:	0524      	lsls	r4, r4, #20
    5286:	431c      	orrs	r4, r3
    5288:	4014      	ands	r4, r2
    528a:	0533      	lsls	r3, r6, #20
    528c:	4323      	orrs	r3, r4
    528e:	005b      	lsls	r3, r3, #1
    5290:	07ed      	lsls	r5, r5, #31
    5292:	085b      	lsrs	r3, r3, #1
    5294:	432b      	orrs	r3, r5
    5296:	0038      	movs	r0, r7
    5298:	0019      	movs	r1, r3
    529a:	bc3c      	pop	{r2, r3, r4, r5}
    529c:	4690      	mov	r8, r2
    529e:	4699      	mov	r9, r3
    52a0:	46a2      	mov	sl, r4
    52a2:	46ab      	mov	fp, r5
    52a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    52a6:	4664      	mov	r4, ip
    52a8:	4304      	orrs	r4, r0
    52aa:	d100      	bne.n	52ae <__aeabi_dadd+0x176>
    52ac:	e211      	b.n	56d2 <__aeabi_dadd+0x59a>
    52ae:	0004      	movs	r4, r0
    52b0:	4667      	mov	r7, ip
    52b2:	077b      	lsls	r3, r7, #29
    52b4:	d1c6      	bne.n	5244 <__aeabi_dadd+0x10c>
    52b6:	4645      	mov	r5, r8
    52b8:	0760      	lsls	r0, r4, #29
    52ba:	08ff      	lsrs	r7, r7, #3
    52bc:	4307      	orrs	r7, r0
    52be:	08e4      	lsrs	r4, r4, #3
    52c0:	4b7d      	ldr	r3, [pc, #500]	; (54b8 <__aeabi_dadd+0x380>)
    52c2:	429e      	cmp	r6, r3
    52c4:	d030      	beq.n	5328 <__aeabi_dadd+0x1f0>
    52c6:	0324      	lsls	r4, r4, #12
    52c8:	0576      	lsls	r6, r6, #21
    52ca:	0b24      	lsrs	r4, r4, #12
    52cc:	0d76      	lsrs	r6, r6, #21
    52ce:	e7d4      	b.n	527a <__aeabi_dadd+0x142>
    52d0:	1a33      	subs	r3, r6, r0
    52d2:	469a      	mov	sl, r3
    52d4:	2b00      	cmp	r3, #0
    52d6:	dd78      	ble.n	53ca <__aeabi_dadd+0x292>
    52d8:	2800      	cmp	r0, #0
    52da:	d031      	beq.n	5340 <__aeabi_dadd+0x208>
    52dc:	4876      	ldr	r0, [pc, #472]	; (54b8 <__aeabi_dadd+0x380>)
    52de:	4286      	cmp	r6, r0
    52e0:	d0ae      	beq.n	5240 <__aeabi_dadd+0x108>
    52e2:	2080      	movs	r0, #128	; 0x80
    52e4:	0400      	lsls	r0, r0, #16
    52e6:	4301      	orrs	r1, r0
    52e8:	4653      	mov	r3, sl
    52ea:	2b38      	cmp	r3, #56	; 0x38
    52ec:	dc00      	bgt.n	52f0 <__aeabi_dadd+0x1b8>
    52ee:	e0e9      	b.n	54c4 <__aeabi_dadd+0x38c>
    52f0:	430a      	orrs	r2, r1
    52f2:	1e51      	subs	r1, r2, #1
    52f4:	418a      	sbcs	r2, r1
    52f6:	2100      	movs	r1, #0
    52f8:	19d2      	adds	r2, r2, r7
    52fa:	42ba      	cmp	r2, r7
    52fc:	41bf      	sbcs	r7, r7
    52fe:	1909      	adds	r1, r1, r4
    5300:	427c      	negs	r4, r7
    5302:	0017      	movs	r7, r2
    5304:	190c      	adds	r4, r1, r4
    5306:	0223      	lsls	r3, r4, #8
    5308:	d5d3      	bpl.n	52b2 <__aeabi_dadd+0x17a>
    530a:	4b6b      	ldr	r3, [pc, #428]	; (54b8 <__aeabi_dadd+0x380>)
    530c:	3601      	adds	r6, #1
    530e:	429e      	cmp	r6, r3
    5310:	d100      	bne.n	5314 <__aeabi_dadd+0x1dc>
    5312:	e13a      	b.n	558a <__aeabi_dadd+0x452>
    5314:	2001      	movs	r0, #1
    5316:	4b69      	ldr	r3, [pc, #420]	; (54bc <__aeabi_dadd+0x384>)
    5318:	401c      	ands	r4, r3
    531a:	087b      	lsrs	r3, r7, #1
    531c:	4007      	ands	r7, r0
    531e:	431f      	orrs	r7, r3
    5320:	07e0      	lsls	r0, r4, #31
    5322:	4307      	orrs	r7, r0
    5324:	0864      	lsrs	r4, r4, #1
    5326:	e78b      	b.n	5240 <__aeabi_dadd+0x108>
    5328:	0023      	movs	r3, r4
    532a:	433b      	orrs	r3, r7
    532c:	d100      	bne.n	5330 <__aeabi_dadd+0x1f8>
    532e:	e1cb      	b.n	56c8 <__aeabi_dadd+0x590>
    5330:	2280      	movs	r2, #128	; 0x80
    5332:	0312      	lsls	r2, r2, #12
    5334:	4314      	orrs	r4, r2
    5336:	0324      	lsls	r4, r4, #12
    5338:	0b24      	lsrs	r4, r4, #12
    533a:	e79e      	b.n	527a <__aeabi_dadd+0x142>
    533c:	002e      	movs	r6, r5
    533e:	e77f      	b.n	5240 <__aeabi_dadd+0x108>
    5340:	0008      	movs	r0, r1
    5342:	4310      	orrs	r0, r2
    5344:	d100      	bne.n	5348 <__aeabi_dadd+0x210>
    5346:	e0b4      	b.n	54b2 <__aeabi_dadd+0x37a>
    5348:	1e58      	subs	r0, r3, #1
    534a:	2800      	cmp	r0, #0
    534c:	d000      	beq.n	5350 <__aeabi_dadd+0x218>
    534e:	e0de      	b.n	550e <__aeabi_dadd+0x3d6>
    5350:	18ba      	adds	r2, r7, r2
    5352:	42ba      	cmp	r2, r7
    5354:	419b      	sbcs	r3, r3
    5356:	1864      	adds	r4, r4, r1
    5358:	425b      	negs	r3, r3
    535a:	18e4      	adds	r4, r4, r3
    535c:	0017      	movs	r7, r2
    535e:	2601      	movs	r6, #1
    5360:	0223      	lsls	r3, r4, #8
    5362:	d5a6      	bpl.n	52b2 <__aeabi_dadd+0x17a>
    5364:	2602      	movs	r6, #2
    5366:	e7d5      	b.n	5314 <__aeabi_dadd+0x1dc>
    5368:	2d00      	cmp	r5, #0
    536a:	d16e      	bne.n	544a <__aeabi_dadd+0x312>
    536c:	1c70      	adds	r0, r6, #1
    536e:	0540      	lsls	r0, r0, #21
    5370:	0d40      	lsrs	r0, r0, #21
    5372:	2801      	cmp	r0, #1
    5374:	dc00      	bgt.n	5378 <__aeabi_dadd+0x240>
    5376:	e0f9      	b.n	556c <__aeabi_dadd+0x434>
    5378:	1ab8      	subs	r0, r7, r2
    537a:	4684      	mov	ip, r0
    537c:	4287      	cmp	r7, r0
    537e:	4180      	sbcs	r0, r0
    5380:	1ae5      	subs	r5, r4, r3
    5382:	4240      	negs	r0, r0
    5384:	1a2d      	subs	r5, r5, r0
    5386:	0228      	lsls	r0, r5, #8
    5388:	d400      	bmi.n	538c <__aeabi_dadd+0x254>
    538a:	e089      	b.n	54a0 <__aeabi_dadd+0x368>
    538c:	1bd7      	subs	r7, r2, r7
    538e:	42ba      	cmp	r2, r7
    5390:	4192      	sbcs	r2, r2
    5392:	1b1c      	subs	r4, r3, r4
    5394:	4252      	negs	r2, r2
    5396:	1aa5      	subs	r5, r4, r2
    5398:	46d8      	mov	r8, fp
    539a:	e729      	b.n	51f0 <__aeabi_dadd+0xb8>
    539c:	4645      	mov	r5, r8
    539e:	2400      	movs	r4, #0
    53a0:	2700      	movs	r7, #0
    53a2:	e76a      	b.n	527a <__aeabi_dadd+0x142>
    53a4:	4c45      	ldr	r4, [pc, #276]	; (54bc <__aeabi_dadd+0x384>)
    53a6:	1af6      	subs	r6, r6, r3
    53a8:	402c      	ands	r4, r5
    53aa:	e749      	b.n	5240 <__aeabi_dadd+0x108>
    53ac:	003d      	movs	r5, r7
    53ae:	3828      	subs	r0, #40	; 0x28
    53b0:	4085      	lsls	r5, r0
    53b2:	2700      	movs	r7, #0
    53b4:	e72e      	b.n	5214 <__aeabi_dadd+0xdc>
    53b6:	0038      	movs	r0, r7
    53b8:	f7fd fbae 	bl	2b18 <__clzsi2>
    53bc:	3020      	adds	r0, #32
    53be:	e71d      	b.n	51fc <__aeabi_dadd+0xc4>
    53c0:	430a      	orrs	r2, r1
    53c2:	1e51      	subs	r1, r2, #1
    53c4:	418a      	sbcs	r2, r1
    53c6:	2100      	movs	r1, #0
    53c8:	e707      	b.n	51da <__aeabi_dadd+0xa2>
    53ca:	2b00      	cmp	r3, #0
    53cc:	d000      	beq.n	53d0 <__aeabi_dadd+0x298>
    53ce:	e0f3      	b.n	55b8 <__aeabi_dadd+0x480>
    53d0:	1c70      	adds	r0, r6, #1
    53d2:	0543      	lsls	r3, r0, #21
    53d4:	0d5b      	lsrs	r3, r3, #21
    53d6:	2b01      	cmp	r3, #1
    53d8:	dc00      	bgt.n	53dc <__aeabi_dadd+0x2a4>
    53da:	e0ad      	b.n	5538 <__aeabi_dadd+0x400>
    53dc:	4b36      	ldr	r3, [pc, #216]	; (54b8 <__aeabi_dadd+0x380>)
    53de:	4298      	cmp	r0, r3
    53e0:	d100      	bne.n	53e4 <__aeabi_dadd+0x2ac>
    53e2:	e0d1      	b.n	5588 <__aeabi_dadd+0x450>
    53e4:	18ba      	adds	r2, r7, r2
    53e6:	42ba      	cmp	r2, r7
    53e8:	41bf      	sbcs	r7, r7
    53ea:	1864      	adds	r4, r4, r1
    53ec:	427f      	negs	r7, r7
    53ee:	19e4      	adds	r4, r4, r7
    53f0:	07e7      	lsls	r7, r4, #31
    53f2:	0852      	lsrs	r2, r2, #1
    53f4:	4317      	orrs	r7, r2
    53f6:	0864      	lsrs	r4, r4, #1
    53f8:	0006      	movs	r6, r0
    53fa:	e721      	b.n	5240 <__aeabi_dadd+0x108>
    53fc:	482e      	ldr	r0, [pc, #184]	; (54b8 <__aeabi_dadd+0x380>)
    53fe:	4285      	cmp	r5, r0
    5400:	d100      	bne.n	5404 <__aeabi_dadd+0x2cc>
    5402:	e093      	b.n	552c <__aeabi_dadd+0x3f4>
    5404:	001d      	movs	r5, r3
    5406:	e6d0      	b.n	51aa <__aeabi_dadd+0x72>
    5408:	0029      	movs	r1, r5
    540a:	3e1f      	subs	r6, #31
    540c:	40f1      	lsrs	r1, r6
    540e:	2b20      	cmp	r3, #32
    5410:	d100      	bne.n	5414 <__aeabi_dadd+0x2dc>
    5412:	e08d      	b.n	5530 <__aeabi_dadd+0x3f8>
    5414:	2240      	movs	r2, #64	; 0x40
    5416:	1ad3      	subs	r3, r2, r3
    5418:	409d      	lsls	r5, r3
    541a:	432f      	orrs	r7, r5
    541c:	1e7d      	subs	r5, r7, #1
    541e:	41af      	sbcs	r7, r5
    5420:	2400      	movs	r4, #0
    5422:	430f      	orrs	r7, r1
    5424:	2600      	movs	r6, #0
    5426:	e744      	b.n	52b2 <__aeabi_dadd+0x17a>
    5428:	002b      	movs	r3, r5
    542a:	0008      	movs	r0, r1
    542c:	3b20      	subs	r3, #32
    542e:	40d8      	lsrs	r0, r3
    5430:	0003      	movs	r3, r0
    5432:	2d20      	cmp	r5, #32
    5434:	d100      	bne.n	5438 <__aeabi_dadd+0x300>
    5436:	e07d      	b.n	5534 <__aeabi_dadd+0x3fc>
    5438:	2040      	movs	r0, #64	; 0x40
    543a:	1b45      	subs	r5, r0, r5
    543c:	40a9      	lsls	r1, r5
    543e:	430a      	orrs	r2, r1
    5440:	1e51      	subs	r1, r2, #1
    5442:	418a      	sbcs	r2, r1
    5444:	2100      	movs	r1, #0
    5446:	431a      	orrs	r2, r3
    5448:	e6c7      	b.n	51da <__aeabi_dadd+0xa2>
    544a:	2e00      	cmp	r6, #0
    544c:	d050      	beq.n	54f0 <__aeabi_dadd+0x3b8>
    544e:	4e1a      	ldr	r6, [pc, #104]	; (54b8 <__aeabi_dadd+0x380>)
    5450:	42b0      	cmp	r0, r6
    5452:	d057      	beq.n	5504 <__aeabi_dadd+0x3cc>
    5454:	2680      	movs	r6, #128	; 0x80
    5456:	426b      	negs	r3, r5
    5458:	4699      	mov	r9, r3
    545a:	0436      	lsls	r6, r6, #16
    545c:	4334      	orrs	r4, r6
    545e:	464b      	mov	r3, r9
    5460:	2b38      	cmp	r3, #56	; 0x38
    5462:	dd00      	ble.n	5466 <__aeabi_dadd+0x32e>
    5464:	e0d6      	b.n	5614 <__aeabi_dadd+0x4dc>
    5466:	2b1f      	cmp	r3, #31
    5468:	dd00      	ble.n	546c <__aeabi_dadd+0x334>
    546a:	e135      	b.n	56d8 <__aeabi_dadd+0x5a0>
    546c:	2620      	movs	r6, #32
    546e:	1af5      	subs	r5, r6, r3
    5470:	0026      	movs	r6, r4
    5472:	40ae      	lsls	r6, r5
    5474:	46b2      	mov	sl, r6
    5476:	003e      	movs	r6, r7
    5478:	40de      	lsrs	r6, r3
    547a:	46ac      	mov	ip, r5
    547c:	0035      	movs	r5, r6
    547e:	4656      	mov	r6, sl
    5480:	432e      	orrs	r6, r5
    5482:	4665      	mov	r5, ip
    5484:	40af      	lsls	r7, r5
    5486:	1e7d      	subs	r5, r7, #1
    5488:	41af      	sbcs	r7, r5
    548a:	40dc      	lsrs	r4, r3
    548c:	4337      	orrs	r7, r6
    548e:	1bd7      	subs	r7, r2, r7
    5490:	42ba      	cmp	r2, r7
    5492:	4192      	sbcs	r2, r2
    5494:	1b0c      	subs	r4, r1, r4
    5496:	4252      	negs	r2, r2
    5498:	1aa4      	subs	r4, r4, r2
    549a:	0006      	movs	r6, r0
    549c:	46d8      	mov	r8, fp
    549e:	e6a3      	b.n	51e8 <__aeabi_dadd+0xb0>
    54a0:	4664      	mov	r4, ip
    54a2:	4667      	mov	r7, ip
    54a4:	432c      	orrs	r4, r5
    54a6:	d000      	beq.n	54aa <__aeabi_dadd+0x372>
    54a8:	e6a2      	b.n	51f0 <__aeabi_dadd+0xb8>
    54aa:	2500      	movs	r5, #0
    54ac:	2600      	movs	r6, #0
    54ae:	2700      	movs	r7, #0
    54b0:	e706      	b.n	52c0 <__aeabi_dadd+0x188>
    54b2:	001e      	movs	r6, r3
    54b4:	e6c4      	b.n	5240 <__aeabi_dadd+0x108>
    54b6:	46c0      	nop			; (mov r8, r8)
    54b8:	000007ff 	.word	0x000007ff
    54bc:	ff7fffff 	.word	0xff7fffff
    54c0:	800fffff 	.word	0x800fffff
    54c4:	2b1f      	cmp	r3, #31
    54c6:	dc63      	bgt.n	5590 <__aeabi_dadd+0x458>
    54c8:	2020      	movs	r0, #32
    54ca:	1ac3      	subs	r3, r0, r3
    54cc:	0008      	movs	r0, r1
    54ce:	4098      	lsls	r0, r3
    54d0:	469c      	mov	ip, r3
    54d2:	4683      	mov	fp, r0
    54d4:	4653      	mov	r3, sl
    54d6:	0010      	movs	r0, r2
    54d8:	40d8      	lsrs	r0, r3
    54da:	0003      	movs	r3, r0
    54dc:	4658      	mov	r0, fp
    54de:	4318      	orrs	r0, r3
    54e0:	4663      	mov	r3, ip
    54e2:	409a      	lsls	r2, r3
    54e4:	1e53      	subs	r3, r2, #1
    54e6:	419a      	sbcs	r2, r3
    54e8:	4653      	mov	r3, sl
    54ea:	4302      	orrs	r2, r0
    54ec:	40d9      	lsrs	r1, r3
    54ee:	e703      	b.n	52f8 <__aeabi_dadd+0x1c0>
    54f0:	0026      	movs	r6, r4
    54f2:	433e      	orrs	r6, r7
    54f4:	d006      	beq.n	5504 <__aeabi_dadd+0x3cc>
    54f6:	43eb      	mvns	r3, r5
    54f8:	4699      	mov	r9, r3
    54fa:	2b00      	cmp	r3, #0
    54fc:	d0c7      	beq.n	548e <__aeabi_dadd+0x356>
    54fe:	4e94      	ldr	r6, [pc, #592]	; (5750 <__aeabi_dadd+0x618>)
    5500:	42b0      	cmp	r0, r6
    5502:	d1ac      	bne.n	545e <__aeabi_dadd+0x326>
    5504:	000c      	movs	r4, r1
    5506:	0017      	movs	r7, r2
    5508:	0006      	movs	r6, r0
    550a:	46d8      	mov	r8, fp
    550c:	e698      	b.n	5240 <__aeabi_dadd+0x108>
    550e:	4b90      	ldr	r3, [pc, #576]	; (5750 <__aeabi_dadd+0x618>)
    5510:	459a      	cmp	sl, r3
    5512:	d00b      	beq.n	552c <__aeabi_dadd+0x3f4>
    5514:	4682      	mov	sl, r0
    5516:	e6e7      	b.n	52e8 <__aeabi_dadd+0x1b0>
    5518:	2800      	cmp	r0, #0
    551a:	d000      	beq.n	551e <__aeabi_dadd+0x3e6>
    551c:	e09e      	b.n	565c <__aeabi_dadd+0x524>
    551e:	0018      	movs	r0, r3
    5520:	4310      	orrs	r0, r2
    5522:	d100      	bne.n	5526 <__aeabi_dadd+0x3ee>
    5524:	e0e9      	b.n	56fa <__aeabi_dadd+0x5c2>
    5526:	001c      	movs	r4, r3
    5528:	0017      	movs	r7, r2
    552a:	46d8      	mov	r8, fp
    552c:	4e88      	ldr	r6, [pc, #544]	; (5750 <__aeabi_dadd+0x618>)
    552e:	e687      	b.n	5240 <__aeabi_dadd+0x108>
    5530:	2500      	movs	r5, #0
    5532:	e772      	b.n	541a <__aeabi_dadd+0x2e2>
    5534:	2100      	movs	r1, #0
    5536:	e782      	b.n	543e <__aeabi_dadd+0x306>
    5538:	0023      	movs	r3, r4
    553a:	433b      	orrs	r3, r7
    553c:	2e00      	cmp	r6, #0
    553e:	d000      	beq.n	5542 <__aeabi_dadd+0x40a>
    5540:	e0ab      	b.n	569a <__aeabi_dadd+0x562>
    5542:	2b00      	cmp	r3, #0
    5544:	d100      	bne.n	5548 <__aeabi_dadd+0x410>
    5546:	e0e7      	b.n	5718 <__aeabi_dadd+0x5e0>
    5548:	000b      	movs	r3, r1
    554a:	4313      	orrs	r3, r2
    554c:	d100      	bne.n	5550 <__aeabi_dadd+0x418>
    554e:	e677      	b.n	5240 <__aeabi_dadd+0x108>
    5550:	18ba      	adds	r2, r7, r2
    5552:	42ba      	cmp	r2, r7
    5554:	41bf      	sbcs	r7, r7
    5556:	1864      	adds	r4, r4, r1
    5558:	427f      	negs	r7, r7
    555a:	19e4      	adds	r4, r4, r7
    555c:	0223      	lsls	r3, r4, #8
    555e:	d400      	bmi.n	5562 <__aeabi_dadd+0x42a>
    5560:	e0f2      	b.n	5748 <__aeabi_dadd+0x610>
    5562:	4b7c      	ldr	r3, [pc, #496]	; (5754 <__aeabi_dadd+0x61c>)
    5564:	0017      	movs	r7, r2
    5566:	401c      	ands	r4, r3
    5568:	0006      	movs	r6, r0
    556a:	e669      	b.n	5240 <__aeabi_dadd+0x108>
    556c:	0020      	movs	r0, r4
    556e:	4338      	orrs	r0, r7
    5570:	2e00      	cmp	r6, #0
    5572:	d1d1      	bne.n	5518 <__aeabi_dadd+0x3e0>
    5574:	2800      	cmp	r0, #0
    5576:	d15b      	bne.n	5630 <__aeabi_dadd+0x4f8>
    5578:	001c      	movs	r4, r3
    557a:	4314      	orrs	r4, r2
    557c:	d100      	bne.n	5580 <__aeabi_dadd+0x448>
    557e:	e0a8      	b.n	56d2 <__aeabi_dadd+0x59a>
    5580:	001c      	movs	r4, r3
    5582:	0017      	movs	r7, r2
    5584:	46d8      	mov	r8, fp
    5586:	e65b      	b.n	5240 <__aeabi_dadd+0x108>
    5588:	0006      	movs	r6, r0
    558a:	2400      	movs	r4, #0
    558c:	2700      	movs	r7, #0
    558e:	e697      	b.n	52c0 <__aeabi_dadd+0x188>
    5590:	4650      	mov	r0, sl
    5592:	000b      	movs	r3, r1
    5594:	3820      	subs	r0, #32
    5596:	40c3      	lsrs	r3, r0
    5598:	4699      	mov	r9, r3
    559a:	4653      	mov	r3, sl
    559c:	2b20      	cmp	r3, #32
    559e:	d100      	bne.n	55a2 <__aeabi_dadd+0x46a>
    55a0:	e095      	b.n	56ce <__aeabi_dadd+0x596>
    55a2:	2340      	movs	r3, #64	; 0x40
    55a4:	4650      	mov	r0, sl
    55a6:	1a1b      	subs	r3, r3, r0
    55a8:	4099      	lsls	r1, r3
    55aa:	430a      	orrs	r2, r1
    55ac:	1e51      	subs	r1, r2, #1
    55ae:	418a      	sbcs	r2, r1
    55b0:	464b      	mov	r3, r9
    55b2:	2100      	movs	r1, #0
    55b4:	431a      	orrs	r2, r3
    55b6:	e69f      	b.n	52f8 <__aeabi_dadd+0x1c0>
    55b8:	2e00      	cmp	r6, #0
    55ba:	d130      	bne.n	561e <__aeabi_dadd+0x4e6>
    55bc:	0026      	movs	r6, r4
    55be:	433e      	orrs	r6, r7
    55c0:	d067      	beq.n	5692 <__aeabi_dadd+0x55a>
    55c2:	43db      	mvns	r3, r3
    55c4:	469a      	mov	sl, r3
    55c6:	2b00      	cmp	r3, #0
    55c8:	d01c      	beq.n	5604 <__aeabi_dadd+0x4cc>
    55ca:	4e61      	ldr	r6, [pc, #388]	; (5750 <__aeabi_dadd+0x618>)
    55cc:	42b0      	cmp	r0, r6
    55ce:	d060      	beq.n	5692 <__aeabi_dadd+0x55a>
    55d0:	4653      	mov	r3, sl
    55d2:	2b38      	cmp	r3, #56	; 0x38
    55d4:	dd00      	ble.n	55d8 <__aeabi_dadd+0x4a0>
    55d6:	e096      	b.n	5706 <__aeabi_dadd+0x5ce>
    55d8:	2b1f      	cmp	r3, #31
    55da:	dd00      	ble.n	55de <__aeabi_dadd+0x4a6>
    55dc:	e09f      	b.n	571e <__aeabi_dadd+0x5e6>
    55de:	2620      	movs	r6, #32
    55e0:	1af3      	subs	r3, r6, r3
    55e2:	0026      	movs	r6, r4
    55e4:	409e      	lsls	r6, r3
    55e6:	469c      	mov	ip, r3
    55e8:	46b3      	mov	fp, r6
    55ea:	4653      	mov	r3, sl
    55ec:	003e      	movs	r6, r7
    55ee:	40de      	lsrs	r6, r3
    55f0:	0033      	movs	r3, r6
    55f2:	465e      	mov	r6, fp
    55f4:	431e      	orrs	r6, r3
    55f6:	4663      	mov	r3, ip
    55f8:	409f      	lsls	r7, r3
    55fa:	1e7b      	subs	r3, r7, #1
    55fc:	419f      	sbcs	r7, r3
    55fe:	4653      	mov	r3, sl
    5600:	40dc      	lsrs	r4, r3
    5602:	4337      	orrs	r7, r6
    5604:	18bf      	adds	r7, r7, r2
    5606:	4297      	cmp	r7, r2
    5608:	4192      	sbcs	r2, r2
    560a:	1864      	adds	r4, r4, r1
    560c:	4252      	negs	r2, r2
    560e:	18a4      	adds	r4, r4, r2
    5610:	0006      	movs	r6, r0
    5612:	e678      	b.n	5306 <__aeabi_dadd+0x1ce>
    5614:	4327      	orrs	r7, r4
    5616:	1e7c      	subs	r4, r7, #1
    5618:	41a7      	sbcs	r7, r4
    561a:	2400      	movs	r4, #0
    561c:	e737      	b.n	548e <__aeabi_dadd+0x356>
    561e:	4e4c      	ldr	r6, [pc, #304]	; (5750 <__aeabi_dadd+0x618>)
    5620:	42b0      	cmp	r0, r6
    5622:	d036      	beq.n	5692 <__aeabi_dadd+0x55a>
    5624:	2680      	movs	r6, #128	; 0x80
    5626:	425b      	negs	r3, r3
    5628:	0436      	lsls	r6, r6, #16
    562a:	469a      	mov	sl, r3
    562c:	4334      	orrs	r4, r6
    562e:	e7cf      	b.n	55d0 <__aeabi_dadd+0x498>
    5630:	0018      	movs	r0, r3
    5632:	4310      	orrs	r0, r2
    5634:	d100      	bne.n	5638 <__aeabi_dadd+0x500>
    5636:	e603      	b.n	5240 <__aeabi_dadd+0x108>
    5638:	1ab8      	subs	r0, r7, r2
    563a:	4684      	mov	ip, r0
    563c:	4567      	cmp	r7, ip
    563e:	41ad      	sbcs	r5, r5
    5640:	1ae0      	subs	r0, r4, r3
    5642:	426d      	negs	r5, r5
    5644:	1b40      	subs	r0, r0, r5
    5646:	0205      	lsls	r5, r0, #8
    5648:	d400      	bmi.n	564c <__aeabi_dadd+0x514>
    564a:	e62c      	b.n	52a6 <__aeabi_dadd+0x16e>
    564c:	1bd7      	subs	r7, r2, r7
    564e:	42ba      	cmp	r2, r7
    5650:	4192      	sbcs	r2, r2
    5652:	1b1c      	subs	r4, r3, r4
    5654:	4252      	negs	r2, r2
    5656:	1aa4      	subs	r4, r4, r2
    5658:	46d8      	mov	r8, fp
    565a:	e5f1      	b.n	5240 <__aeabi_dadd+0x108>
    565c:	0018      	movs	r0, r3
    565e:	4310      	orrs	r0, r2
    5660:	d100      	bne.n	5664 <__aeabi_dadd+0x52c>
    5662:	e763      	b.n	552c <__aeabi_dadd+0x3f4>
    5664:	08f8      	lsrs	r0, r7, #3
    5666:	0767      	lsls	r7, r4, #29
    5668:	4307      	orrs	r7, r0
    566a:	2080      	movs	r0, #128	; 0x80
    566c:	08e4      	lsrs	r4, r4, #3
    566e:	0300      	lsls	r0, r0, #12
    5670:	4204      	tst	r4, r0
    5672:	d008      	beq.n	5686 <__aeabi_dadd+0x54e>
    5674:	08dd      	lsrs	r5, r3, #3
    5676:	4205      	tst	r5, r0
    5678:	d105      	bne.n	5686 <__aeabi_dadd+0x54e>
    567a:	08d2      	lsrs	r2, r2, #3
    567c:	0759      	lsls	r1, r3, #29
    567e:	4311      	orrs	r1, r2
    5680:	000f      	movs	r7, r1
    5682:	002c      	movs	r4, r5
    5684:	46d8      	mov	r8, fp
    5686:	0f7b      	lsrs	r3, r7, #29
    5688:	00e4      	lsls	r4, r4, #3
    568a:	431c      	orrs	r4, r3
    568c:	00ff      	lsls	r7, r7, #3
    568e:	4e30      	ldr	r6, [pc, #192]	; (5750 <__aeabi_dadd+0x618>)
    5690:	e5d6      	b.n	5240 <__aeabi_dadd+0x108>
    5692:	000c      	movs	r4, r1
    5694:	0017      	movs	r7, r2
    5696:	0006      	movs	r6, r0
    5698:	e5d2      	b.n	5240 <__aeabi_dadd+0x108>
    569a:	2b00      	cmp	r3, #0
    569c:	d038      	beq.n	5710 <__aeabi_dadd+0x5d8>
    569e:	000b      	movs	r3, r1
    56a0:	4313      	orrs	r3, r2
    56a2:	d100      	bne.n	56a6 <__aeabi_dadd+0x56e>
    56a4:	e742      	b.n	552c <__aeabi_dadd+0x3f4>
    56a6:	08f8      	lsrs	r0, r7, #3
    56a8:	0767      	lsls	r7, r4, #29
    56aa:	4307      	orrs	r7, r0
    56ac:	2080      	movs	r0, #128	; 0x80
    56ae:	08e4      	lsrs	r4, r4, #3
    56b0:	0300      	lsls	r0, r0, #12
    56b2:	4204      	tst	r4, r0
    56b4:	d0e7      	beq.n	5686 <__aeabi_dadd+0x54e>
    56b6:	08cb      	lsrs	r3, r1, #3
    56b8:	4203      	tst	r3, r0
    56ba:	d1e4      	bne.n	5686 <__aeabi_dadd+0x54e>
    56bc:	08d2      	lsrs	r2, r2, #3
    56be:	0749      	lsls	r1, r1, #29
    56c0:	4311      	orrs	r1, r2
    56c2:	000f      	movs	r7, r1
    56c4:	001c      	movs	r4, r3
    56c6:	e7de      	b.n	5686 <__aeabi_dadd+0x54e>
    56c8:	2700      	movs	r7, #0
    56ca:	2400      	movs	r4, #0
    56cc:	e5d5      	b.n	527a <__aeabi_dadd+0x142>
    56ce:	2100      	movs	r1, #0
    56d0:	e76b      	b.n	55aa <__aeabi_dadd+0x472>
    56d2:	2500      	movs	r5, #0
    56d4:	2700      	movs	r7, #0
    56d6:	e5f3      	b.n	52c0 <__aeabi_dadd+0x188>
    56d8:	464e      	mov	r6, r9
    56da:	0025      	movs	r5, r4
    56dc:	3e20      	subs	r6, #32
    56de:	40f5      	lsrs	r5, r6
    56e0:	464b      	mov	r3, r9
    56e2:	002e      	movs	r6, r5
    56e4:	2b20      	cmp	r3, #32
    56e6:	d02d      	beq.n	5744 <__aeabi_dadd+0x60c>
    56e8:	2540      	movs	r5, #64	; 0x40
    56ea:	1aed      	subs	r5, r5, r3
    56ec:	40ac      	lsls	r4, r5
    56ee:	4327      	orrs	r7, r4
    56f0:	1e7c      	subs	r4, r7, #1
    56f2:	41a7      	sbcs	r7, r4
    56f4:	2400      	movs	r4, #0
    56f6:	4337      	orrs	r7, r6
    56f8:	e6c9      	b.n	548e <__aeabi_dadd+0x356>
    56fa:	2480      	movs	r4, #128	; 0x80
    56fc:	2500      	movs	r5, #0
    56fe:	0324      	lsls	r4, r4, #12
    5700:	4e13      	ldr	r6, [pc, #76]	; (5750 <__aeabi_dadd+0x618>)
    5702:	2700      	movs	r7, #0
    5704:	e5dc      	b.n	52c0 <__aeabi_dadd+0x188>
    5706:	4327      	orrs	r7, r4
    5708:	1e7c      	subs	r4, r7, #1
    570a:	41a7      	sbcs	r7, r4
    570c:	2400      	movs	r4, #0
    570e:	e779      	b.n	5604 <__aeabi_dadd+0x4cc>
    5710:	000c      	movs	r4, r1
    5712:	0017      	movs	r7, r2
    5714:	4e0e      	ldr	r6, [pc, #56]	; (5750 <__aeabi_dadd+0x618>)
    5716:	e593      	b.n	5240 <__aeabi_dadd+0x108>
    5718:	000c      	movs	r4, r1
    571a:	0017      	movs	r7, r2
    571c:	e590      	b.n	5240 <__aeabi_dadd+0x108>
    571e:	4656      	mov	r6, sl
    5720:	0023      	movs	r3, r4
    5722:	3e20      	subs	r6, #32
    5724:	40f3      	lsrs	r3, r6
    5726:	4699      	mov	r9, r3
    5728:	4653      	mov	r3, sl
    572a:	2b20      	cmp	r3, #32
    572c:	d00e      	beq.n	574c <__aeabi_dadd+0x614>
    572e:	2340      	movs	r3, #64	; 0x40
    5730:	4656      	mov	r6, sl
    5732:	1b9b      	subs	r3, r3, r6
    5734:	409c      	lsls	r4, r3
    5736:	4327      	orrs	r7, r4
    5738:	1e7c      	subs	r4, r7, #1
    573a:	41a7      	sbcs	r7, r4
    573c:	464b      	mov	r3, r9
    573e:	2400      	movs	r4, #0
    5740:	431f      	orrs	r7, r3
    5742:	e75f      	b.n	5604 <__aeabi_dadd+0x4cc>
    5744:	2400      	movs	r4, #0
    5746:	e7d2      	b.n	56ee <__aeabi_dadd+0x5b6>
    5748:	0017      	movs	r7, r2
    574a:	e5b2      	b.n	52b2 <__aeabi_dadd+0x17a>
    574c:	2400      	movs	r4, #0
    574e:	e7f2      	b.n	5736 <__aeabi_dadd+0x5fe>
    5750:	000007ff 	.word	0x000007ff
    5754:	ff7fffff 	.word	0xff7fffff

00005758 <__aeabi_dcmpun>:
    5758:	b570      	push	{r4, r5, r6, lr}
    575a:	4e0e      	ldr	r6, [pc, #56]	; (5794 <__aeabi_dcmpun+0x3c>)
    575c:	030d      	lsls	r5, r1, #12
    575e:	031c      	lsls	r4, r3, #12
    5760:	0049      	lsls	r1, r1, #1
    5762:	005b      	lsls	r3, r3, #1
    5764:	0b2d      	lsrs	r5, r5, #12
    5766:	0d49      	lsrs	r1, r1, #21
    5768:	0b24      	lsrs	r4, r4, #12
    576a:	0d5b      	lsrs	r3, r3, #21
    576c:	42b1      	cmp	r1, r6
    576e:	d004      	beq.n	577a <__aeabi_dcmpun+0x22>
    5770:	4908      	ldr	r1, [pc, #32]	; (5794 <__aeabi_dcmpun+0x3c>)
    5772:	2000      	movs	r0, #0
    5774:	428b      	cmp	r3, r1
    5776:	d008      	beq.n	578a <__aeabi_dcmpun+0x32>
    5778:	bd70      	pop	{r4, r5, r6, pc}
    577a:	4305      	orrs	r5, r0
    577c:	2001      	movs	r0, #1
    577e:	2d00      	cmp	r5, #0
    5780:	d1fa      	bne.n	5778 <__aeabi_dcmpun+0x20>
    5782:	4904      	ldr	r1, [pc, #16]	; (5794 <__aeabi_dcmpun+0x3c>)
    5784:	2000      	movs	r0, #0
    5786:	428b      	cmp	r3, r1
    5788:	d1f6      	bne.n	5778 <__aeabi_dcmpun+0x20>
    578a:	4314      	orrs	r4, r2
    578c:	0020      	movs	r0, r4
    578e:	1e44      	subs	r4, r0, #1
    5790:	41a0      	sbcs	r0, r4
    5792:	e7f1      	b.n	5778 <__aeabi_dcmpun+0x20>
    5794:	000007ff 	.word	0x000007ff
    5798:	682f2e2e 	.word	0x682f2e2e
    579c:	732f6c61 	.word	0x732f6c61
    57a0:	682f6372 	.word	0x682f6372
    57a4:	635f6c61 	.word	0x635f6c61
    57a8:	6e656c61 	.word	0x6e656c61
    57ac:	2e726164 	.word	0x2e726164
    57b0:	00000063 	.word	0x00000063
    57b4:	682f2e2e 	.word	0x682f2e2e
    57b8:	732f6c61 	.word	0x732f6c61
    57bc:	682f6372 	.word	0x682f6372
    57c0:	695f6c61 	.word	0x695f6c61
    57c4:	00632e6f 	.word	0x00632e6f
    57c8:	682f2e2e 	.word	0x682f2e2e
    57cc:	732f6c61 	.word	0x732f6c61
    57d0:	682f6372 	.word	0x682f6372
    57d4:	755f6c61 	.word	0x755f6c61
    57d8:	74726173 	.word	0x74726173
    57dc:	7973615f 	.word	0x7973615f
    57e0:	632e636e 	.word	0x632e636e
    57e4:	00000000 	.word	0x00000000
    57e8:	682f2e2e 	.word	0x682f2e2e
    57ec:	752f6c61 	.word	0x752f6c61
    57f0:	736c6974 	.word	0x736c6974
    57f4:	6372732f 	.word	0x6372732f
    57f8:	6974752f 	.word	0x6974752f
    57fc:	725f736c 	.word	0x725f736c
    5800:	62676e69 	.word	0x62676e69
    5804:	65666675 	.word	0x65666675
    5808:	00632e72 	.word	0x00632e72
    580c:	682f2e2e 	.word	0x682f2e2e
    5810:	722f6c70 	.word	0x722f6c70
    5814:	682f6374 	.word	0x682f6374
    5818:	725f6c70 	.word	0x725f6c70
    581c:	632e6374 	.word	0x632e6374
    5820:	00000000 	.word	0x00000000

00005824 <_usarts>:
    5824:	00000003 40100004 00030040 00001412     .......@@.......
    5834:	00000000                                ....

00005838 <_i2cms>:
	...

00005850 <_i2css>:
	...

00005860 <sercomspi_regs>:
	...
    5874:	682f2e2e 732f6c70 6f637265 70682f6d     ../hpl/sercom/hp
    5884:	65735f6c 6d6f6372 0000632e              l_sercom.c..

00005890 <s_events>:
    5890:	20000254 20000278 2000020c 0044454c     T.. x.. ... LED.
    58a0:	696e6f4d 00726f74 454c202d 6c622044     Monitor.- LED bl
    58b0:	206b6e69 6b736174 74636120 2e657669     ink task active.
    58c0:	00000a0d 454c202d 464f2044 6e612046     ....- LED OFF an
    58d0:	6c622064 206b6e69 6b736174 73757320     d blink task sus
    58e0:	646e6570 0d2e6465 0000000a 6f4d202d     pended......- Mo
    58f0:	6f74696e 61742072 61206b73 76697463     nitor task activ
    5900:	0a0d2e65 00000000 6f4d202d 6f74696e     e.......- Monito
    5910:	61742072 73206b73 65707375 6465646e     r task suspended
    5920:	000a0d2e 313b315b 00000048 73256325     ....[1;1H...%c%s
    5930:	73256325 00000000 004a325b 2d2d0a0d     %c%s....[2J...--
    5940:	754e202d 7265626d 20666f20 6b736174     - Number of task
    5950:	25203a73 00000075 203e0a0d 20202020     s: %u.....>     
    5960:	6b736154 74532020 20657461 6c6c6143     Task  State Call
    5970:	614d2073 614c2078 636e6574 20202079     s Max Latency   
    5980:	75522020 6d69746e 00000065 2a2a0a0d       Runtime.....**
    5990:	2a2a2a2a 2a2a2a2a 2a2a2a2a 2a2a2a2a     ****************
    59a0:	2a2a2a2a 2a2a2a2a 2a2a2a2a 2a2a2a2a     ****************
    59b0:	2a2a2a2a 2a2a2a2a 2a2a2a2a 0000002a     *************...
    59c0:	73303125 2020203a 63252020 20643625     %10s:     %c%6d 
    59d0:	30312520 25202066 00663031 2d2d0a0d      %10f  %10f...--
    59e0:	7250202d 20737365 654b2061 0a0d3a79     - Press a Key:..
    59f0:	203a6120 2044454c 6e696c62 6174206b      a: LED blink ta
    5a00:	61206b73 76697463 200a0d65 4c203a73     sk active.. s: L
    5a10:	4f204445 61204646 6220646e 6b6e696c     ED OFF and blink
    5a20:	73617420 7573206b 6e657073 200a0d64      task suspend.. 
    5a30:	4d203a4d 74696e6f 7420726f 206b7361     M: Monitor task 
    5a40:	70737573 0d646e65 3a6d200a 6e6f4d20     suspend.. m: Mon
    5a50:	726f7469 73617420 6572206b 656d7573     itor task resume
    5a60:	6f200a0d 72656874 45203a73 206f6863     .. others: Echo 
    5a70:	6b636162 20230a0d 00000000 736e6f43     back..# ....Cons
    5a80:	00656c6f 000019a4 00001986 00001940     ole.........@...
    5a90:	0000185e 00001940 00001978 00001940     ^...@...x...@...
    5aa0:	0000185e 00001986 00001986 00001978     ^...........x...
    5ab0:	0000185e 00001856 00001856 00001856     ^...V...V...V...
    5ac0:	00001bbc 00002004 00001ec4 00001ec4     ..... ..........
    5ad0:	00001ec0 00001fdc 00001fdc 00001fce     ................
    5ae0:	00001ec0 00001fdc 00001fce 00001fdc     ................
    5af0:	00001ec0 00001fe4 00001fe4 00001fe4     ................
    5b00:	000021e8 00464e49 00666e69 004e414e     .!..INF.inf.NAN.
    5b10:	006e616e 31300030 35343332 39383736     nan.0.0123456789
    5b20:	44434241 30004645 34333231 38373635     ABCDEF.012345678
    5b30:	63626139 00666564 69666e49 7974696e     9abcdef.Infinity
    5b40:	4e614e00 00000000                       .NaN....

00005b48 <__sf_fake_stderr>:
	...

00005b68 <__sf_fake_stdin>:
	...

00005b88 <__sf_fake_stdout>:
	...

00005ba8 <__mprec_bigtens>:
    5ba8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    5bb8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    5bc8:	7f73bf3c 75154fdd                       <.s..O.u

00005bd0 <__mprec_tens>:
    5bd0:	00000000 3ff00000 00000000 40240000     .......?......$@
    5be0:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    5bf0:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    5c00:	00000000 412e8480 00000000 416312d0     .......A......cA
    5c10:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    5c20:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    5c30:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    5c40:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    5c50:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    5c60:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    5c70:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    5c80:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    5c90:	79d99db4 44ea7843                       ...yCx.D

00005c98 <p05.6047>:
    5c98:	00000005 00000019 0000007d 2b302d23     ........}...#-0+
    5ca8:	6c680020 6665004c 47464567 50004300      .hlL.efgEFG.C.P
    5cb8:	5849534f 00002e00                                OSIX...

00005cbf <_ctype_>:
    5cbf:	20202000 20202020 28282020 20282828     .         ((((( 
    5ccf:	20202020 20202020 20202020 20202020                     
    5cdf:	10108820 10101010 10101010 10101010      ...............
    5cef:	04040410 04040404 10040404 10101010     ................
    5cff:	41411010 41414141 01010101 01010101     ..AAAAAA........
    5d0f:	01010101 01010101 01010101 10101010     ................
    5d1f:	42421010 42424242 02020202 02020202     ..BBBBBB........
    5d2f:	02020202 02020202 02020202 10101010     ................
    5d3f:	00000020 00000000 00000000 00000000      ...............
	...

00005dc0 <_init>:
    5dc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5dc2:	46c0      	nop			; (mov r8, r8)
    5dc4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    5dc6:	bc08      	pop	{r3}
    5dc8:	469e      	mov	lr, r3
    5dca:	4770      	bx	lr

00005dcc <__init_array_start>:
    5dcc:	000000dd 	.word	0x000000dd

00005dd0 <_fini>:
    5dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5dd2:	46c0      	nop			; (mov r8, r8)
    5dd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    5dd6:	bc08      	pop	{r3}
    5dd8:	469e      	mov	lr, r3
    5dda:	4770      	bx	lr

00005ddc <__fini_array_start>:
    5ddc:	000000b5 	.word	0x000000b5
